/*
Ceph REST API

This is the official Ceph REST API

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ceph

import (
	"encoding/json"
)

// checks if the ApiRgwUserUidPutRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApiRgwUserUidPutRequest{}

// ApiRgwUserUidPutRequest struct for ApiRgwUserUidPutRequest
type ApiRgwUserUidPutRequest struct {
	DaemonName *string `json:"daemon_name,omitempty"`
	DisplayName *string `json:"display_name,omitempty"`
	Email *string `json:"email,omitempty"`
	MaxBuckets *string `json:"max_buckets,omitempty"`
	Suspended *string `json:"suspended,omitempty"`
	System *string `json:"system,omitempty"`
}

// NewApiRgwUserUidPutRequest instantiates a new ApiRgwUserUidPutRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiRgwUserUidPutRequest() *ApiRgwUserUidPutRequest {
	this := ApiRgwUserUidPutRequest{}
	return &this
}

// NewApiRgwUserUidPutRequestWithDefaults instantiates a new ApiRgwUserUidPutRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiRgwUserUidPutRequestWithDefaults() *ApiRgwUserUidPutRequest {
	this := ApiRgwUserUidPutRequest{}
	return &this
}

// GetDaemonName returns the DaemonName field value if set, zero value otherwise.
func (o *ApiRgwUserUidPutRequest) GetDaemonName() string {
	if o == nil || IsNil(o.DaemonName) {
		var ret string
		return ret
	}
	return *o.DaemonName
}

// GetDaemonNameOk returns a tuple with the DaemonName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiRgwUserUidPutRequest) GetDaemonNameOk() (*string, bool) {
	if o == nil || IsNil(o.DaemonName) {
		return nil, false
	}
	return o.DaemonName, true
}

// HasDaemonName returns a boolean if a field has been set.
func (o *ApiRgwUserUidPutRequest) HasDaemonName() bool {
	if o != nil && !IsNil(o.DaemonName) {
		return true
	}

	return false
}

// SetDaemonName gets a reference to the given string and assigns it to the DaemonName field.
func (o *ApiRgwUserUidPutRequest) SetDaemonName(v string) {
	o.DaemonName = &v
}

// GetDisplayName returns the DisplayName field value if set, zero value otherwise.
func (o *ApiRgwUserUidPutRequest) GetDisplayName() string {
	if o == nil || IsNil(o.DisplayName) {
		var ret string
		return ret
	}
	return *o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiRgwUserUidPutRequest) GetDisplayNameOk() (*string, bool) {
	if o == nil || IsNil(o.DisplayName) {
		return nil, false
	}
	return o.DisplayName, true
}

// HasDisplayName returns a boolean if a field has been set.
func (o *ApiRgwUserUidPutRequest) HasDisplayName() bool {
	if o != nil && !IsNil(o.DisplayName) {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given string and assigns it to the DisplayName field.
func (o *ApiRgwUserUidPutRequest) SetDisplayName(v string) {
	o.DisplayName = &v
}

// GetEmail returns the Email field value if set, zero value otherwise.
func (o *ApiRgwUserUidPutRequest) GetEmail() string {
	if o == nil || IsNil(o.Email) {
		var ret string
		return ret
	}
	return *o.Email
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiRgwUserUidPutRequest) GetEmailOk() (*string, bool) {
	if o == nil || IsNil(o.Email) {
		return nil, false
	}
	return o.Email, true
}

// HasEmail returns a boolean if a field has been set.
func (o *ApiRgwUserUidPutRequest) HasEmail() bool {
	if o != nil && !IsNil(o.Email) {
		return true
	}

	return false
}

// SetEmail gets a reference to the given string and assigns it to the Email field.
func (o *ApiRgwUserUidPutRequest) SetEmail(v string) {
	o.Email = &v
}

// GetMaxBuckets returns the MaxBuckets field value if set, zero value otherwise.
func (o *ApiRgwUserUidPutRequest) GetMaxBuckets() string {
	if o == nil || IsNil(o.MaxBuckets) {
		var ret string
		return ret
	}
	return *o.MaxBuckets
}

// GetMaxBucketsOk returns a tuple with the MaxBuckets field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiRgwUserUidPutRequest) GetMaxBucketsOk() (*string, bool) {
	if o == nil || IsNil(o.MaxBuckets) {
		return nil, false
	}
	return o.MaxBuckets, true
}

// HasMaxBuckets returns a boolean if a field has been set.
func (o *ApiRgwUserUidPutRequest) HasMaxBuckets() bool {
	if o != nil && !IsNil(o.MaxBuckets) {
		return true
	}

	return false
}

// SetMaxBuckets gets a reference to the given string and assigns it to the MaxBuckets field.
func (o *ApiRgwUserUidPutRequest) SetMaxBuckets(v string) {
	o.MaxBuckets = &v
}

// GetSuspended returns the Suspended field value if set, zero value otherwise.
func (o *ApiRgwUserUidPutRequest) GetSuspended() string {
	if o == nil || IsNil(o.Suspended) {
		var ret string
		return ret
	}
	return *o.Suspended
}

// GetSuspendedOk returns a tuple with the Suspended field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiRgwUserUidPutRequest) GetSuspendedOk() (*string, bool) {
	if o == nil || IsNil(o.Suspended) {
		return nil, false
	}
	return o.Suspended, true
}

// HasSuspended returns a boolean if a field has been set.
func (o *ApiRgwUserUidPutRequest) HasSuspended() bool {
	if o != nil && !IsNil(o.Suspended) {
		return true
	}

	return false
}

// SetSuspended gets a reference to the given string and assigns it to the Suspended field.
func (o *ApiRgwUserUidPutRequest) SetSuspended(v string) {
	o.Suspended = &v
}

// GetSystem returns the System field value if set, zero value otherwise.
func (o *ApiRgwUserUidPutRequest) GetSystem() string {
	if o == nil || IsNil(o.System) {
		var ret string
		return ret
	}
	return *o.System
}

// GetSystemOk returns a tuple with the System field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiRgwUserUidPutRequest) GetSystemOk() (*string, bool) {
	if o == nil || IsNil(o.System) {
		return nil, false
	}
	return o.System, true
}

// HasSystem returns a boolean if a field has been set.
func (o *ApiRgwUserUidPutRequest) HasSystem() bool {
	if o != nil && !IsNil(o.System) {
		return true
	}

	return false
}

// SetSystem gets a reference to the given string and assigns it to the System field.
func (o *ApiRgwUserUidPutRequest) SetSystem(v string) {
	o.System = &v
}

func (o ApiRgwUserUidPutRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApiRgwUserUidPutRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DaemonName) {
		toSerialize["daemon_name"] = o.DaemonName
	}
	if !IsNil(o.DisplayName) {
		toSerialize["display_name"] = o.DisplayName
	}
	if !IsNil(o.Email) {
		toSerialize["email"] = o.Email
	}
	if !IsNil(o.MaxBuckets) {
		toSerialize["max_buckets"] = o.MaxBuckets
	}
	if !IsNil(o.Suspended) {
		toSerialize["suspended"] = o.Suspended
	}
	if !IsNil(o.System) {
		toSerialize["system"] = o.System
	}
	return toSerialize, nil
}

type NullableApiRgwUserUidPutRequest struct {
	value *ApiRgwUserUidPutRequest
	isSet bool
}

func (v NullableApiRgwUserUidPutRequest) Get() *ApiRgwUserUidPutRequest {
	return v.value
}

func (v *NullableApiRgwUserUidPutRequest) Set(val *ApiRgwUserUidPutRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableApiRgwUserUidPutRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableApiRgwUserUidPutRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiRgwUserUidPutRequest(val *ApiRgwUserUidPutRequest) *NullableApiRgwUserUidPutRequest {
	return &NullableApiRgwUserUidPutRequest{value: val, isSet: true}
}

func (v NullableApiRgwUserUidPutRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiRgwUserUidPutRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


