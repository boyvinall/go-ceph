/*
Ceph REST API

This is the official Ceph REST API

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ceph

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ApiHostHostnameIdentifyDevicePostRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApiHostHostnameIdentifyDevicePostRequest{}

// ApiHostHostnameIdentifyDevicePostRequest struct for ApiHostHostnameIdentifyDevicePostRequest
type ApiHostHostnameIdentifyDevicePostRequest struct {
	Device string `json:"device"`
	Duration string `json:"duration"`
}

type _ApiHostHostnameIdentifyDevicePostRequest ApiHostHostnameIdentifyDevicePostRequest

// NewApiHostHostnameIdentifyDevicePostRequest instantiates a new ApiHostHostnameIdentifyDevicePostRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiHostHostnameIdentifyDevicePostRequest(device string, duration string) *ApiHostHostnameIdentifyDevicePostRequest {
	this := ApiHostHostnameIdentifyDevicePostRequest{}
	this.Device = device
	this.Duration = duration
	return &this
}

// NewApiHostHostnameIdentifyDevicePostRequestWithDefaults instantiates a new ApiHostHostnameIdentifyDevicePostRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiHostHostnameIdentifyDevicePostRequestWithDefaults() *ApiHostHostnameIdentifyDevicePostRequest {
	this := ApiHostHostnameIdentifyDevicePostRequest{}
	return &this
}

// GetDevice returns the Device field value
func (o *ApiHostHostnameIdentifyDevicePostRequest) GetDevice() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Device
}

// GetDeviceOk returns a tuple with the Device field value
// and a boolean to check if the value has been set.
func (o *ApiHostHostnameIdentifyDevicePostRequest) GetDeviceOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Device, true
}

// SetDevice sets field value
func (o *ApiHostHostnameIdentifyDevicePostRequest) SetDevice(v string) {
	o.Device = v
}

// GetDuration returns the Duration field value
func (o *ApiHostHostnameIdentifyDevicePostRequest) GetDuration() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Duration
}

// GetDurationOk returns a tuple with the Duration field value
// and a boolean to check if the value has been set.
func (o *ApiHostHostnameIdentifyDevicePostRequest) GetDurationOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Duration, true
}

// SetDuration sets field value
func (o *ApiHostHostnameIdentifyDevicePostRequest) SetDuration(v string) {
	o.Duration = v
}

func (o ApiHostHostnameIdentifyDevicePostRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApiHostHostnameIdentifyDevicePostRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["device"] = o.Device
	toSerialize["duration"] = o.Duration
	return toSerialize, nil
}

func (o *ApiHostHostnameIdentifyDevicePostRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"device",
		"duration",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varApiHostHostnameIdentifyDevicePostRequest := _ApiHostHostnameIdentifyDevicePostRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varApiHostHostnameIdentifyDevicePostRequest)

	if err != nil {
		return err
	}

	*o = ApiHostHostnameIdentifyDevicePostRequest(varApiHostHostnameIdentifyDevicePostRequest)

	return err
}

type NullableApiHostHostnameIdentifyDevicePostRequest struct {
	value *ApiHostHostnameIdentifyDevicePostRequest
	isSet bool
}

func (v NullableApiHostHostnameIdentifyDevicePostRequest) Get() *ApiHostHostnameIdentifyDevicePostRequest {
	return v.value
}

func (v *NullableApiHostHostnameIdentifyDevicePostRequest) Set(val *ApiHostHostnameIdentifyDevicePostRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableApiHostHostnameIdentifyDevicePostRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableApiHostHostnameIdentifyDevicePostRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiHostHostnameIdentifyDevicePostRequest(val *ApiHostHostnameIdentifyDevicePostRequest) *NullableApiHostHostnameIdentifyDevicePostRequest {
	return &NullableApiHostHostnameIdentifyDevicePostRequest{value: val, isSet: true}
}

func (v NullableApiHostHostnameIdentifyDevicePostRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiHostHostnameIdentifyDevicePostRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


