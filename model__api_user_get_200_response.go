/*
Ceph REST API

This is the official Ceph REST API

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ceph

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ApiUserGet200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApiUserGet200Response{}

// ApiUserGet200Response struct for ApiUserGet200Response
type ApiUserGet200Response struct {
	// User email address
	Email string `json:"email"`
	// Is the user enabled?
	Enabled bool `json:"enabled"`
	// Details last updated
	LastUpdate int32 `json:"lastUpdate"`
	// User Name
	Name string `json:"name"`
	// Password Expiration date
	PwdExpirationDate string `json:"pwdExpirationDate"`
	// Is Password Update Required?
	PwdUpdateRequired bool `json:"pwdUpdateRequired"`
	// User Roles
	Roles []string `json:"roles"`
	// Username of the user
	Username string `json:"username"`
}

type _ApiUserGet200Response ApiUserGet200Response

// NewApiUserGet200Response instantiates a new ApiUserGet200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiUserGet200Response(email string, enabled bool, lastUpdate int32, name string, pwdExpirationDate string, pwdUpdateRequired bool, roles []string, username string) *ApiUserGet200Response {
	this := ApiUserGet200Response{}
	this.Email = email
	this.Enabled = enabled
	this.LastUpdate = lastUpdate
	this.Name = name
	this.PwdExpirationDate = pwdExpirationDate
	this.PwdUpdateRequired = pwdUpdateRequired
	this.Roles = roles
	this.Username = username
	return &this
}

// NewApiUserGet200ResponseWithDefaults instantiates a new ApiUserGet200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiUserGet200ResponseWithDefaults() *ApiUserGet200Response {
	this := ApiUserGet200Response{}
	return &this
}

// GetEmail returns the Email field value
func (o *ApiUserGet200Response) GetEmail() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Email
}

// GetEmailOk returns a tuple with the Email field value
// and a boolean to check if the value has been set.
func (o *ApiUserGet200Response) GetEmailOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Email, true
}

// SetEmail sets field value
func (o *ApiUserGet200Response) SetEmail(v string) {
	o.Email = v
}

// GetEnabled returns the Enabled field value
func (o *ApiUserGet200Response) GetEnabled() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value
// and a boolean to check if the value has been set.
func (o *ApiUserGet200Response) GetEnabledOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Enabled, true
}

// SetEnabled sets field value
func (o *ApiUserGet200Response) SetEnabled(v bool) {
	o.Enabled = v
}

// GetLastUpdate returns the LastUpdate field value
func (o *ApiUserGet200Response) GetLastUpdate() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.LastUpdate
}

// GetLastUpdateOk returns a tuple with the LastUpdate field value
// and a boolean to check if the value has been set.
func (o *ApiUserGet200Response) GetLastUpdateOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LastUpdate, true
}

// SetLastUpdate sets field value
func (o *ApiUserGet200Response) SetLastUpdate(v int32) {
	o.LastUpdate = v
}

// GetName returns the Name field value
func (o *ApiUserGet200Response) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *ApiUserGet200Response) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *ApiUserGet200Response) SetName(v string) {
	o.Name = v
}

// GetPwdExpirationDate returns the PwdExpirationDate field value
func (o *ApiUserGet200Response) GetPwdExpirationDate() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PwdExpirationDate
}

// GetPwdExpirationDateOk returns a tuple with the PwdExpirationDate field value
// and a boolean to check if the value has been set.
func (o *ApiUserGet200Response) GetPwdExpirationDateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PwdExpirationDate, true
}

// SetPwdExpirationDate sets field value
func (o *ApiUserGet200Response) SetPwdExpirationDate(v string) {
	o.PwdExpirationDate = v
}

// GetPwdUpdateRequired returns the PwdUpdateRequired field value
func (o *ApiUserGet200Response) GetPwdUpdateRequired() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.PwdUpdateRequired
}

// GetPwdUpdateRequiredOk returns a tuple with the PwdUpdateRequired field value
// and a boolean to check if the value has been set.
func (o *ApiUserGet200Response) GetPwdUpdateRequiredOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PwdUpdateRequired, true
}

// SetPwdUpdateRequired sets field value
func (o *ApiUserGet200Response) SetPwdUpdateRequired(v bool) {
	o.PwdUpdateRequired = v
}

// GetRoles returns the Roles field value
func (o *ApiUserGet200Response) GetRoles() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Roles
}

// GetRolesOk returns a tuple with the Roles field value
// and a boolean to check if the value has been set.
func (o *ApiUserGet200Response) GetRolesOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Roles, true
}

// SetRoles sets field value
func (o *ApiUserGet200Response) SetRoles(v []string) {
	o.Roles = v
}

// GetUsername returns the Username field value
func (o *ApiUserGet200Response) GetUsername() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Username
}

// GetUsernameOk returns a tuple with the Username field value
// and a boolean to check if the value has been set.
func (o *ApiUserGet200Response) GetUsernameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Username, true
}

// SetUsername sets field value
func (o *ApiUserGet200Response) SetUsername(v string) {
	o.Username = v
}

func (o ApiUserGet200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApiUserGet200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["email"] = o.Email
	toSerialize["enabled"] = o.Enabled
	toSerialize["lastUpdate"] = o.LastUpdate
	toSerialize["name"] = o.Name
	toSerialize["pwdExpirationDate"] = o.PwdExpirationDate
	toSerialize["pwdUpdateRequired"] = o.PwdUpdateRequired
	toSerialize["roles"] = o.Roles
	toSerialize["username"] = o.Username
	return toSerialize, nil
}

func (o *ApiUserGet200Response) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"email",
		"enabled",
		"lastUpdate",
		"name",
		"pwdExpirationDate",
		"pwdUpdateRequired",
		"roles",
		"username",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varApiUserGet200Response := _ApiUserGet200Response{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varApiUserGet200Response)

	if err != nil {
		return err
	}

	*o = ApiUserGet200Response(varApiUserGet200Response)

	return err
}

type NullableApiUserGet200Response struct {
	value *ApiUserGet200Response
	isSet bool
}

func (v NullableApiUserGet200Response) Get() *ApiUserGet200Response {
	return v.value
}

func (v *NullableApiUserGet200Response) Set(val *ApiUserGet200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableApiUserGet200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableApiUserGet200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiUserGet200Response(val *ApiUserGet200Response) *NullableApiUserGet200Response {
	return &NullableApiUserGet200Response{value: val, isSet: true}
}

func (v NullableApiUserGet200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiUserGet200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


