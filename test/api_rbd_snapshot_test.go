/*
Ceph REST API

Testing RbdSnapshotAPIService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package ceph

import (
	"context"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
	"testing"
	openapiclient "github.com/boyvinall/go-ceph"
)

func Test_ceph_RbdSnapshotAPIService(t *testing.T) {

	configuration := openapiclient.NewConfiguration()
	apiClient := openapiclient.NewAPIClient(configuration)

	t.Run("Test RbdSnapshotAPIService ApiBlockImageImageSpecSnapPost", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var imageSpec string

		httpRes, err := apiClient.RbdSnapshotAPI.ApiBlockImageImageSpecSnapPost(context.Background(), imageSpec).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test RbdSnapshotAPIService ApiBlockImageImageSpecSnapSnapshotNameClonePost", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var imageSpec string
		var snapshotName string

		httpRes, err := apiClient.RbdSnapshotAPI.ApiBlockImageImageSpecSnapSnapshotNameClonePost(context.Background(), imageSpec, snapshotName).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test RbdSnapshotAPIService ApiBlockImageImageSpecSnapSnapshotNameDelete", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var imageSpec string
		var snapshotName string

		httpRes, err := apiClient.RbdSnapshotAPI.ApiBlockImageImageSpecSnapSnapshotNameDelete(context.Background(), imageSpec, snapshotName).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test RbdSnapshotAPIService ApiBlockImageImageSpecSnapSnapshotNamePut", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var imageSpec string
		var snapshotName string

		httpRes, err := apiClient.RbdSnapshotAPI.ApiBlockImageImageSpecSnapSnapshotNamePut(context.Background(), imageSpec, snapshotName).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test RbdSnapshotAPIService ApiBlockImageImageSpecSnapSnapshotNameRollbackPost", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var imageSpec string
		var snapshotName string

		httpRes, err := apiClient.RbdSnapshotAPI.ApiBlockImageImageSpecSnapSnapshotNameRollbackPost(context.Background(), imageSpec, snapshotName).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}
