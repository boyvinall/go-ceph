/*
Ceph REST API

This is the official Ceph REST API

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ceph

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ApiSummaryGet200ResponseRbdMirroring type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApiSummaryGet200ResponseRbdMirroring{}

// ApiSummaryGet200ResponseRbdMirroring 
type ApiSummaryGet200ResponseRbdMirroring struct {
	// 
	Errors int32 `json:"errors"`
	// 
	Warnings int32 `json:"warnings"`
}

type _ApiSummaryGet200ResponseRbdMirroring ApiSummaryGet200ResponseRbdMirroring

// NewApiSummaryGet200ResponseRbdMirroring instantiates a new ApiSummaryGet200ResponseRbdMirroring object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiSummaryGet200ResponseRbdMirroring(errors int32, warnings int32) *ApiSummaryGet200ResponseRbdMirroring {
	this := ApiSummaryGet200ResponseRbdMirroring{}
	this.Errors = errors
	this.Warnings = warnings
	return &this
}

// NewApiSummaryGet200ResponseRbdMirroringWithDefaults instantiates a new ApiSummaryGet200ResponseRbdMirroring object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiSummaryGet200ResponseRbdMirroringWithDefaults() *ApiSummaryGet200ResponseRbdMirroring {
	this := ApiSummaryGet200ResponseRbdMirroring{}
	return &this
}

// GetErrors returns the Errors field value
func (o *ApiSummaryGet200ResponseRbdMirroring) GetErrors() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Errors
}

// GetErrorsOk returns a tuple with the Errors field value
// and a boolean to check if the value has been set.
func (o *ApiSummaryGet200ResponseRbdMirroring) GetErrorsOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Errors, true
}

// SetErrors sets field value
func (o *ApiSummaryGet200ResponseRbdMirroring) SetErrors(v int32) {
	o.Errors = v
}

// GetWarnings returns the Warnings field value
func (o *ApiSummaryGet200ResponseRbdMirroring) GetWarnings() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Warnings
}

// GetWarningsOk returns a tuple with the Warnings field value
// and a boolean to check if the value has been set.
func (o *ApiSummaryGet200ResponseRbdMirroring) GetWarningsOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Warnings, true
}

// SetWarnings sets field value
func (o *ApiSummaryGet200ResponseRbdMirroring) SetWarnings(v int32) {
	o.Warnings = v
}

func (o ApiSummaryGet200ResponseRbdMirroring) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApiSummaryGet200ResponseRbdMirroring) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["errors"] = o.Errors
	toSerialize["warnings"] = o.Warnings
	return toSerialize, nil
}

func (o *ApiSummaryGet200ResponseRbdMirroring) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"errors",
		"warnings",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varApiSummaryGet200ResponseRbdMirroring := _ApiSummaryGet200ResponseRbdMirroring{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varApiSummaryGet200ResponseRbdMirroring)

	if err != nil {
		return err
	}

	*o = ApiSummaryGet200ResponseRbdMirroring(varApiSummaryGet200ResponseRbdMirroring)

	return err
}

type NullableApiSummaryGet200ResponseRbdMirroring struct {
	value *ApiSummaryGet200ResponseRbdMirroring
	isSet bool
}

func (v NullableApiSummaryGet200ResponseRbdMirroring) Get() *ApiSummaryGet200ResponseRbdMirroring {
	return v.value
}

func (v *NullableApiSummaryGet200ResponseRbdMirroring) Set(val *ApiSummaryGet200ResponseRbdMirroring) {
	v.value = val
	v.isSet = true
}

func (v NullableApiSummaryGet200ResponseRbdMirroring) IsSet() bool {
	return v.isSet
}

func (v *NullableApiSummaryGet200ResponseRbdMirroring) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiSummaryGet200ResponseRbdMirroring(val *ApiSummaryGet200ResponseRbdMirroring) *NullableApiSummaryGet200ResponseRbdMirroring {
	return &NullableApiSummaryGet200ResponseRbdMirroring{value: val, isSet: true}
}

func (v NullableApiSummaryGet200ResponseRbdMirroring) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiSummaryGet200ResponseRbdMirroring) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


