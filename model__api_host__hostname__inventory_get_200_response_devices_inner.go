/*
Ceph REST API

This is the official Ceph REST API

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ceph

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ApiHostHostnameInventoryGet200ResponseDevicesInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApiHostHostnameInventoryGet200ResponseDevicesInner{}

// ApiHostHostnameInventoryGet200ResponseDevicesInner struct for ApiHostHostnameInventoryGet200ResponseDevicesInner
type ApiHostHostnameInventoryGet200ResponseDevicesInner struct {
	// If the device can be provisioned to an OSD
	Available bool `json:"available"`
	// Device's udev ID
	DeviceId string `json:"device_id"`
	// Device type. ssd or hdd
	HumanReadableType string `json:"human_readable_type"`
	LsmData ApiHostHostnameInventoryGet200ResponseDevicesInnerLsmData `json:"lsm_data"`
	// 
	Lvs []ApiHostHostnameInventoryGet200ResponseDevicesInnerLvsInner `json:"lvs"`
	// Device OSD IDs
	OsdIds []int32 `json:"osd_ids"`
	// Device path
	Path string `json:"path"`
	// 
	RejectedReasons []string `json:"rejected_reasons"`
	SysApi ApiHostHostnameInventoryGet200ResponseDevicesInnerSysApi `json:"sys_api"`
}

type _ApiHostHostnameInventoryGet200ResponseDevicesInner ApiHostHostnameInventoryGet200ResponseDevicesInner

// NewApiHostHostnameInventoryGet200ResponseDevicesInner instantiates a new ApiHostHostnameInventoryGet200ResponseDevicesInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiHostHostnameInventoryGet200ResponseDevicesInner(available bool, deviceId string, humanReadableType string, lsmData ApiHostHostnameInventoryGet200ResponseDevicesInnerLsmData, lvs []ApiHostHostnameInventoryGet200ResponseDevicesInnerLvsInner, osdIds []int32, path string, rejectedReasons []string, sysApi ApiHostHostnameInventoryGet200ResponseDevicesInnerSysApi) *ApiHostHostnameInventoryGet200ResponseDevicesInner {
	this := ApiHostHostnameInventoryGet200ResponseDevicesInner{}
	this.Available = available
	this.DeviceId = deviceId
	this.HumanReadableType = humanReadableType
	this.LsmData = lsmData
	this.Lvs = lvs
	this.OsdIds = osdIds
	this.Path = path
	this.RejectedReasons = rejectedReasons
	this.SysApi = sysApi
	return &this
}

// NewApiHostHostnameInventoryGet200ResponseDevicesInnerWithDefaults instantiates a new ApiHostHostnameInventoryGet200ResponseDevicesInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiHostHostnameInventoryGet200ResponseDevicesInnerWithDefaults() *ApiHostHostnameInventoryGet200ResponseDevicesInner {
	this := ApiHostHostnameInventoryGet200ResponseDevicesInner{}
	return &this
}

// GetAvailable returns the Available field value
func (o *ApiHostHostnameInventoryGet200ResponseDevicesInner) GetAvailable() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Available
}

// GetAvailableOk returns a tuple with the Available field value
// and a boolean to check if the value has been set.
func (o *ApiHostHostnameInventoryGet200ResponseDevicesInner) GetAvailableOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Available, true
}

// SetAvailable sets field value
func (o *ApiHostHostnameInventoryGet200ResponseDevicesInner) SetAvailable(v bool) {
	o.Available = v
}

// GetDeviceId returns the DeviceId field value
func (o *ApiHostHostnameInventoryGet200ResponseDevicesInner) GetDeviceId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DeviceId
}

// GetDeviceIdOk returns a tuple with the DeviceId field value
// and a boolean to check if the value has been set.
func (o *ApiHostHostnameInventoryGet200ResponseDevicesInner) GetDeviceIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DeviceId, true
}

// SetDeviceId sets field value
func (o *ApiHostHostnameInventoryGet200ResponseDevicesInner) SetDeviceId(v string) {
	o.DeviceId = v
}

// GetHumanReadableType returns the HumanReadableType field value
func (o *ApiHostHostnameInventoryGet200ResponseDevicesInner) GetHumanReadableType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.HumanReadableType
}

// GetHumanReadableTypeOk returns a tuple with the HumanReadableType field value
// and a boolean to check if the value has been set.
func (o *ApiHostHostnameInventoryGet200ResponseDevicesInner) GetHumanReadableTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.HumanReadableType, true
}

// SetHumanReadableType sets field value
func (o *ApiHostHostnameInventoryGet200ResponseDevicesInner) SetHumanReadableType(v string) {
	o.HumanReadableType = v
}

// GetLsmData returns the LsmData field value
func (o *ApiHostHostnameInventoryGet200ResponseDevicesInner) GetLsmData() ApiHostHostnameInventoryGet200ResponseDevicesInnerLsmData {
	if o == nil {
		var ret ApiHostHostnameInventoryGet200ResponseDevicesInnerLsmData
		return ret
	}

	return o.LsmData
}

// GetLsmDataOk returns a tuple with the LsmData field value
// and a boolean to check if the value has been set.
func (o *ApiHostHostnameInventoryGet200ResponseDevicesInner) GetLsmDataOk() (*ApiHostHostnameInventoryGet200ResponseDevicesInnerLsmData, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LsmData, true
}

// SetLsmData sets field value
func (o *ApiHostHostnameInventoryGet200ResponseDevicesInner) SetLsmData(v ApiHostHostnameInventoryGet200ResponseDevicesInnerLsmData) {
	o.LsmData = v
}

// GetLvs returns the Lvs field value
func (o *ApiHostHostnameInventoryGet200ResponseDevicesInner) GetLvs() []ApiHostHostnameInventoryGet200ResponseDevicesInnerLvsInner {
	if o == nil {
		var ret []ApiHostHostnameInventoryGet200ResponseDevicesInnerLvsInner
		return ret
	}

	return o.Lvs
}

// GetLvsOk returns a tuple with the Lvs field value
// and a boolean to check if the value has been set.
func (o *ApiHostHostnameInventoryGet200ResponseDevicesInner) GetLvsOk() ([]ApiHostHostnameInventoryGet200ResponseDevicesInnerLvsInner, bool) {
	if o == nil {
		return nil, false
	}
	return o.Lvs, true
}

// SetLvs sets field value
func (o *ApiHostHostnameInventoryGet200ResponseDevicesInner) SetLvs(v []ApiHostHostnameInventoryGet200ResponseDevicesInnerLvsInner) {
	o.Lvs = v
}

// GetOsdIds returns the OsdIds field value
func (o *ApiHostHostnameInventoryGet200ResponseDevicesInner) GetOsdIds() []int32 {
	if o == nil {
		var ret []int32
		return ret
	}

	return o.OsdIds
}

// GetOsdIdsOk returns a tuple with the OsdIds field value
// and a boolean to check if the value has been set.
func (o *ApiHostHostnameInventoryGet200ResponseDevicesInner) GetOsdIdsOk() ([]int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.OsdIds, true
}

// SetOsdIds sets field value
func (o *ApiHostHostnameInventoryGet200ResponseDevicesInner) SetOsdIds(v []int32) {
	o.OsdIds = v
}

// GetPath returns the Path field value
func (o *ApiHostHostnameInventoryGet200ResponseDevicesInner) GetPath() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Path
}

// GetPathOk returns a tuple with the Path field value
// and a boolean to check if the value has been set.
func (o *ApiHostHostnameInventoryGet200ResponseDevicesInner) GetPathOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Path, true
}

// SetPath sets field value
func (o *ApiHostHostnameInventoryGet200ResponseDevicesInner) SetPath(v string) {
	o.Path = v
}

// GetRejectedReasons returns the RejectedReasons field value
func (o *ApiHostHostnameInventoryGet200ResponseDevicesInner) GetRejectedReasons() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.RejectedReasons
}

// GetRejectedReasonsOk returns a tuple with the RejectedReasons field value
// and a boolean to check if the value has been set.
func (o *ApiHostHostnameInventoryGet200ResponseDevicesInner) GetRejectedReasonsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.RejectedReasons, true
}

// SetRejectedReasons sets field value
func (o *ApiHostHostnameInventoryGet200ResponseDevicesInner) SetRejectedReasons(v []string) {
	o.RejectedReasons = v
}

// GetSysApi returns the SysApi field value
func (o *ApiHostHostnameInventoryGet200ResponseDevicesInner) GetSysApi() ApiHostHostnameInventoryGet200ResponseDevicesInnerSysApi {
	if o == nil {
		var ret ApiHostHostnameInventoryGet200ResponseDevicesInnerSysApi
		return ret
	}

	return o.SysApi
}

// GetSysApiOk returns a tuple with the SysApi field value
// and a boolean to check if the value has been set.
func (o *ApiHostHostnameInventoryGet200ResponseDevicesInner) GetSysApiOk() (*ApiHostHostnameInventoryGet200ResponseDevicesInnerSysApi, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SysApi, true
}

// SetSysApi sets field value
func (o *ApiHostHostnameInventoryGet200ResponseDevicesInner) SetSysApi(v ApiHostHostnameInventoryGet200ResponseDevicesInnerSysApi) {
	o.SysApi = v
}

func (o ApiHostHostnameInventoryGet200ResponseDevicesInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApiHostHostnameInventoryGet200ResponseDevicesInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["available"] = o.Available
	toSerialize["device_id"] = o.DeviceId
	toSerialize["human_readable_type"] = o.HumanReadableType
	toSerialize["lsm_data"] = o.LsmData
	toSerialize["lvs"] = o.Lvs
	toSerialize["osd_ids"] = o.OsdIds
	toSerialize["path"] = o.Path
	toSerialize["rejected_reasons"] = o.RejectedReasons
	toSerialize["sys_api"] = o.SysApi
	return toSerialize, nil
}

func (o *ApiHostHostnameInventoryGet200ResponseDevicesInner) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"available",
		"device_id",
		"human_readable_type",
		"lsm_data",
		"lvs",
		"osd_ids",
		"path",
		"rejected_reasons",
		"sys_api",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varApiHostHostnameInventoryGet200ResponseDevicesInner := _ApiHostHostnameInventoryGet200ResponseDevicesInner{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varApiHostHostnameInventoryGet200ResponseDevicesInner)

	if err != nil {
		return err
	}

	*o = ApiHostHostnameInventoryGet200ResponseDevicesInner(varApiHostHostnameInventoryGet200ResponseDevicesInner)

	return err
}

type NullableApiHostHostnameInventoryGet200ResponseDevicesInner struct {
	value *ApiHostHostnameInventoryGet200ResponseDevicesInner
	isSet bool
}

func (v NullableApiHostHostnameInventoryGet200ResponseDevicesInner) Get() *ApiHostHostnameInventoryGet200ResponseDevicesInner {
	return v.value
}

func (v *NullableApiHostHostnameInventoryGet200ResponseDevicesInner) Set(val *ApiHostHostnameInventoryGet200ResponseDevicesInner) {
	v.value = val
	v.isSet = true
}

func (v NullableApiHostHostnameInventoryGet200ResponseDevicesInner) IsSet() bool {
	return v.isSet
}

func (v *NullableApiHostHostnameInventoryGet200ResponseDevicesInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiHostHostnameInventoryGet200ResponseDevicesInner(val *ApiHostHostnameInventoryGet200ResponseDevicesInner) *NullableApiHostHostnameInventoryGet200ResponseDevicesInner {
	return &NullableApiHostHostnameInventoryGet200ResponseDevicesInner{value: val, isSet: true}
}

func (v NullableApiHostHostnameInventoryGet200ResponseDevicesInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiHostHostnameInventoryGet200ResponseDevicesInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


