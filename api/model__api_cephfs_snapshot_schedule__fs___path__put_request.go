/*
Ceph REST API

This is the official Ceph REST API

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ceph

import (
	"encoding/json"
)

// checks if the ApiCephfsSnapshotScheduleFsPathPutRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApiCephfsSnapshotScheduleFsPathPutRequest{}

// ApiCephfsSnapshotScheduleFsPathPutRequest struct for ApiCephfsSnapshotScheduleFsPathPutRequest
type ApiCephfsSnapshotScheduleFsPathPutRequest struct {
	Group *string `json:"group,omitempty"`
	RetentionToAdd *string `json:"retention_to_add,omitempty"`
	RetentionToRemove *string `json:"retention_to_remove,omitempty"`
	Subvol *string `json:"subvol,omitempty"`
}

// NewApiCephfsSnapshotScheduleFsPathPutRequest instantiates a new ApiCephfsSnapshotScheduleFsPathPutRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiCephfsSnapshotScheduleFsPathPutRequest() *ApiCephfsSnapshotScheduleFsPathPutRequest {
	this := ApiCephfsSnapshotScheduleFsPathPutRequest{}
	return &this
}

// NewApiCephfsSnapshotScheduleFsPathPutRequestWithDefaults instantiates a new ApiCephfsSnapshotScheduleFsPathPutRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiCephfsSnapshotScheduleFsPathPutRequestWithDefaults() *ApiCephfsSnapshotScheduleFsPathPutRequest {
	this := ApiCephfsSnapshotScheduleFsPathPutRequest{}
	return &this
}

// GetGroup returns the Group field value if set, zero value otherwise.
func (o *ApiCephfsSnapshotScheduleFsPathPutRequest) GetGroup() string {
	if o == nil || IsNil(o.Group) {
		var ret string
		return ret
	}
	return *o.Group
}

// GetGroupOk returns a tuple with the Group field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiCephfsSnapshotScheduleFsPathPutRequest) GetGroupOk() (*string, bool) {
	if o == nil || IsNil(o.Group) {
		return nil, false
	}
	return o.Group, true
}

// HasGroup returns a boolean if a field has been set.
func (o *ApiCephfsSnapshotScheduleFsPathPutRequest) HasGroup() bool {
	if o != nil && !IsNil(o.Group) {
		return true
	}

	return false
}

// SetGroup gets a reference to the given string and assigns it to the Group field.
func (o *ApiCephfsSnapshotScheduleFsPathPutRequest) SetGroup(v string) {
	o.Group = &v
}

// GetRetentionToAdd returns the RetentionToAdd field value if set, zero value otherwise.
func (o *ApiCephfsSnapshotScheduleFsPathPutRequest) GetRetentionToAdd() string {
	if o == nil || IsNil(o.RetentionToAdd) {
		var ret string
		return ret
	}
	return *o.RetentionToAdd
}

// GetRetentionToAddOk returns a tuple with the RetentionToAdd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiCephfsSnapshotScheduleFsPathPutRequest) GetRetentionToAddOk() (*string, bool) {
	if o == nil || IsNil(o.RetentionToAdd) {
		return nil, false
	}
	return o.RetentionToAdd, true
}

// HasRetentionToAdd returns a boolean if a field has been set.
func (o *ApiCephfsSnapshotScheduleFsPathPutRequest) HasRetentionToAdd() bool {
	if o != nil && !IsNil(o.RetentionToAdd) {
		return true
	}

	return false
}

// SetRetentionToAdd gets a reference to the given string and assigns it to the RetentionToAdd field.
func (o *ApiCephfsSnapshotScheduleFsPathPutRequest) SetRetentionToAdd(v string) {
	o.RetentionToAdd = &v
}

// GetRetentionToRemove returns the RetentionToRemove field value if set, zero value otherwise.
func (o *ApiCephfsSnapshotScheduleFsPathPutRequest) GetRetentionToRemove() string {
	if o == nil || IsNil(o.RetentionToRemove) {
		var ret string
		return ret
	}
	return *o.RetentionToRemove
}

// GetRetentionToRemoveOk returns a tuple with the RetentionToRemove field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiCephfsSnapshotScheduleFsPathPutRequest) GetRetentionToRemoveOk() (*string, bool) {
	if o == nil || IsNil(o.RetentionToRemove) {
		return nil, false
	}
	return o.RetentionToRemove, true
}

// HasRetentionToRemove returns a boolean if a field has been set.
func (o *ApiCephfsSnapshotScheduleFsPathPutRequest) HasRetentionToRemove() bool {
	if o != nil && !IsNil(o.RetentionToRemove) {
		return true
	}

	return false
}

// SetRetentionToRemove gets a reference to the given string and assigns it to the RetentionToRemove field.
func (o *ApiCephfsSnapshotScheduleFsPathPutRequest) SetRetentionToRemove(v string) {
	o.RetentionToRemove = &v
}

// GetSubvol returns the Subvol field value if set, zero value otherwise.
func (o *ApiCephfsSnapshotScheduleFsPathPutRequest) GetSubvol() string {
	if o == nil || IsNil(o.Subvol) {
		var ret string
		return ret
	}
	return *o.Subvol
}

// GetSubvolOk returns a tuple with the Subvol field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiCephfsSnapshotScheduleFsPathPutRequest) GetSubvolOk() (*string, bool) {
	if o == nil || IsNil(o.Subvol) {
		return nil, false
	}
	return o.Subvol, true
}

// HasSubvol returns a boolean if a field has been set.
func (o *ApiCephfsSnapshotScheduleFsPathPutRequest) HasSubvol() bool {
	if o != nil && !IsNil(o.Subvol) {
		return true
	}

	return false
}

// SetSubvol gets a reference to the given string and assigns it to the Subvol field.
func (o *ApiCephfsSnapshotScheduleFsPathPutRequest) SetSubvol(v string) {
	o.Subvol = &v
}

func (o ApiCephfsSnapshotScheduleFsPathPutRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApiCephfsSnapshotScheduleFsPathPutRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Group) {
		toSerialize["group"] = o.Group
	}
	if !IsNil(o.RetentionToAdd) {
		toSerialize["retention_to_add"] = o.RetentionToAdd
	}
	if !IsNil(o.RetentionToRemove) {
		toSerialize["retention_to_remove"] = o.RetentionToRemove
	}
	if !IsNil(o.Subvol) {
		toSerialize["subvol"] = o.Subvol
	}
	return toSerialize, nil
}

type NullableApiCephfsSnapshotScheduleFsPathPutRequest struct {
	value *ApiCephfsSnapshotScheduleFsPathPutRequest
	isSet bool
}

func (v NullableApiCephfsSnapshotScheduleFsPathPutRequest) Get() *ApiCephfsSnapshotScheduleFsPathPutRequest {
	return v.value
}

func (v *NullableApiCephfsSnapshotScheduleFsPathPutRequest) Set(val *ApiCephfsSnapshotScheduleFsPathPutRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableApiCephfsSnapshotScheduleFsPathPutRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableApiCephfsSnapshotScheduleFsPathPutRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiCephfsSnapshotScheduleFsPathPutRequest(val *ApiCephfsSnapshotScheduleFsPathPutRequest) *NullableApiCephfsSnapshotScheduleFsPathPutRequest {
	return &NullableApiCephfsSnapshotScheduleFsPathPutRequest{value: val, isSet: true}
}

func (v NullableApiCephfsSnapshotScheduleFsPathPutRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiCephfsSnapshotScheduleFsPathPutRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


