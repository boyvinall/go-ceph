/*
Ceph REST API

This is the official Ceph REST API

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ceph

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ApiMultiClusterEditClusterPutRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApiMultiClusterEditClusterPutRequest{}

// ApiMultiClusterEditClusterPutRequest struct for ApiMultiClusterEditClusterPutRequest
type ApiMultiClusterEditClusterPutRequest struct {
	ClusterAlias string `json:"cluster_alias"`
	Name string `json:"name"`
	SslCertificate *string `json:"ssl_certificate,omitempty"`
	Url string `json:"url"`
	Username string `json:"username"`
	Verify *bool `json:"verify,omitempty"`
}

type _ApiMultiClusterEditClusterPutRequest ApiMultiClusterEditClusterPutRequest

// NewApiMultiClusterEditClusterPutRequest instantiates a new ApiMultiClusterEditClusterPutRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiMultiClusterEditClusterPutRequest(clusterAlias string, name string, url string, username string) *ApiMultiClusterEditClusterPutRequest {
	this := ApiMultiClusterEditClusterPutRequest{}
	this.ClusterAlias = clusterAlias
	this.Name = name
	this.Url = url
	this.Username = username
	var verify bool = false
	this.Verify = &verify
	return &this
}

// NewApiMultiClusterEditClusterPutRequestWithDefaults instantiates a new ApiMultiClusterEditClusterPutRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiMultiClusterEditClusterPutRequestWithDefaults() *ApiMultiClusterEditClusterPutRequest {
	this := ApiMultiClusterEditClusterPutRequest{}
	var verify bool = false
	this.Verify = &verify
	return &this
}

// GetClusterAlias returns the ClusterAlias field value
func (o *ApiMultiClusterEditClusterPutRequest) GetClusterAlias() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ClusterAlias
}

// GetClusterAliasOk returns a tuple with the ClusterAlias field value
// and a boolean to check if the value has been set.
func (o *ApiMultiClusterEditClusterPutRequest) GetClusterAliasOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ClusterAlias, true
}

// SetClusterAlias sets field value
func (o *ApiMultiClusterEditClusterPutRequest) SetClusterAlias(v string) {
	o.ClusterAlias = v
}

// GetName returns the Name field value
func (o *ApiMultiClusterEditClusterPutRequest) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *ApiMultiClusterEditClusterPutRequest) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *ApiMultiClusterEditClusterPutRequest) SetName(v string) {
	o.Name = v
}

// GetSslCertificate returns the SslCertificate field value if set, zero value otherwise.
func (o *ApiMultiClusterEditClusterPutRequest) GetSslCertificate() string {
	if o == nil || IsNil(o.SslCertificate) {
		var ret string
		return ret
	}
	return *o.SslCertificate
}

// GetSslCertificateOk returns a tuple with the SslCertificate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiMultiClusterEditClusterPutRequest) GetSslCertificateOk() (*string, bool) {
	if o == nil || IsNil(o.SslCertificate) {
		return nil, false
	}
	return o.SslCertificate, true
}

// HasSslCertificate returns a boolean if a field has been set.
func (o *ApiMultiClusterEditClusterPutRequest) HasSslCertificate() bool {
	if o != nil && !IsNil(o.SslCertificate) {
		return true
	}

	return false
}

// SetSslCertificate gets a reference to the given string and assigns it to the SslCertificate field.
func (o *ApiMultiClusterEditClusterPutRequest) SetSslCertificate(v string) {
	o.SslCertificate = &v
}

// GetUrl returns the Url field value
func (o *ApiMultiClusterEditClusterPutRequest) GetUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Url
}

// GetUrlOk returns a tuple with the Url field value
// and a boolean to check if the value has been set.
func (o *ApiMultiClusterEditClusterPutRequest) GetUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Url, true
}

// SetUrl sets field value
func (o *ApiMultiClusterEditClusterPutRequest) SetUrl(v string) {
	o.Url = v
}

// GetUsername returns the Username field value
func (o *ApiMultiClusterEditClusterPutRequest) GetUsername() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Username
}

// GetUsernameOk returns a tuple with the Username field value
// and a boolean to check if the value has been set.
func (o *ApiMultiClusterEditClusterPutRequest) GetUsernameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Username, true
}

// SetUsername sets field value
func (o *ApiMultiClusterEditClusterPutRequest) SetUsername(v string) {
	o.Username = v
}

// GetVerify returns the Verify field value if set, zero value otherwise.
func (o *ApiMultiClusterEditClusterPutRequest) GetVerify() bool {
	if o == nil || IsNil(o.Verify) {
		var ret bool
		return ret
	}
	return *o.Verify
}

// GetVerifyOk returns a tuple with the Verify field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiMultiClusterEditClusterPutRequest) GetVerifyOk() (*bool, bool) {
	if o == nil || IsNil(o.Verify) {
		return nil, false
	}
	return o.Verify, true
}

// HasVerify returns a boolean if a field has been set.
func (o *ApiMultiClusterEditClusterPutRequest) HasVerify() bool {
	if o != nil && !IsNil(o.Verify) {
		return true
	}

	return false
}

// SetVerify gets a reference to the given bool and assigns it to the Verify field.
func (o *ApiMultiClusterEditClusterPutRequest) SetVerify(v bool) {
	o.Verify = &v
}

func (o ApiMultiClusterEditClusterPutRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApiMultiClusterEditClusterPutRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["cluster_alias"] = o.ClusterAlias
	toSerialize["name"] = o.Name
	if !IsNil(o.SslCertificate) {
		toSerialize["ssl_certificate"] = o.SslCertificate
	}
	toSerialize["url"] = o.Url
	toSerialize["username"] = o.Username
	if !IsNil(o.Verify) {
		toSerialize["verify"] = o.Verify
	}
	return toSerialize, nil
}

func (o *ApiMultiClusterEditClusterPutRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"cluster_alias",
		"name",
		"url",
		"username",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varApiMultiClusterEditClusterPutRequest := _ApiMultiClusterEditClusterPutRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varApiMultiClusterEditClusterPutRequest)

	if err != nil {
		return err
	}

	*o = ApiMultiClusterEditClusterPutRequest(varApiMultiClusterEditClusterPutRequest)

	return err
}

type NullableApiMultiClusterEditClusterPutRequest struct {
	value *ApiMultiClusterEditClusterPutRequest
	isSet bool
}

func (v NullableApiMultiClusterEditClusterPutRequest) Get() *ApiMultiClusterEditClusterPutRequest {
	return v.value
}

func (v *NullableApiMultiClusterEditClusterPutRequest) Set(val *ApiMultiClusterEditClusterPutRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableApiMultiClusterEditClusterPutRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableApiMultiClusterEditClusterPutRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiMultiClusterEditClusterPutRequest(val *ApiMultiClusterEditClusterPutRequest) *NullableApiMultiClusterEditClusterPutRequest {
	return &NullableApiMultiClusterEditClusterPutRequest{value: val, isSet: true}
}

func (v NullableApiMultiClusterEditClusterPutRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiMultiClusterEditClusterPutRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


