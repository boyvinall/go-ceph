/*
Ceph REST API

This is the official Ceph REST API

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ceph

import (
	"encoding/json"
)

// checks if the ApiHostHostnamePutRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApiHostHostnamePutRequest{}

// ApiHostHostnamePutRequest struct for ApiHostHostnamePutRequest
type ApiHostHostnamePutRequest struct {
	// Drain Host
	Drain *bool `json:"drain,omitempty"`
	// Force Enter Maintenance
	Force *bool `json:"force,omitempty"`
	// Host Labels
	Labels []string `json:"labels,omitempty"`
	// Enter/Exit Maintenance
	Maintenance *bool `json:"maintenance,omitempty"`
	// Update Labels
	UpdateLabels *bool `json:"update_labels,omitempty"`
}

// NewApiHostHostnamePutRequest instantiates a new ApiHostHostnamePutRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiHostHostnamePutRequest() *ApiHostHostnamePutRequest {
	this := ApiHostHostnamePutRequest{}
	var drain bool = false
	this.Drain = &drain
	var force bool = false
	this.Force = &force
	var maintenance bool = false
	this.Maintenance = &maintenance
	var updateLabels bool = false
	this.UpdateLabels = &updateLabels
	return &this
}

// NewApiHostHostnamePutRequestWithDefaults instantiates a new ApiHostHostnamePutRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiHostHostnamePutRequestWithDefaults() *ApiHostHostnamePutRequest {
	this := ApiHostHostnamePutRequest{}
	var drain bool = false
	this.Drain = &drain
	var force bool = false
	this.Force = &force
	var maintenance bool = false
	this.Maintenance = &maintenance
	var updateLabels bool = false
	this.UpdateLabels = &updateLabels
	return &this
}

// GetDrain returns the Drain field value if set, zero value otherwise.
func (o *ApiHostHostnamePutRequest) GetDrain() bool {
	if o == nil || IsNil(o.Drain) {
		var ret bool
		return ret
	}
	return *o.Drain
}

// GetDrainOk returns a tuple with the Drain field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiHostHostnamePutRequest) GetDrainOk() (*bool, bool) {
	if o == nil || IsNil(o.Drain) {
		return nil, false
	}
	return o.Drain, true
}

// HasDrain returns a boolean if a field has been set.
func (o *ApiHostHostnamePutRequest) HasDrain() bool {
	if o != nil && !IsNil(o.Drain) {
		return true
	}

	return false
}

// SetDrain gets a reference to the given bool and assigns it to the Drain field.
func (o *ApiHostHostnamePutRequest) SetDrain(v bool) {
	o.Drain = &v
}

// GetForce returns the Force field value if set, zero value otherwise.
func (o *ApiHostHostnamePutRequest) GetForce() bool {
	if o == nil || IsNil(o.Force) {
		var ret bool
		return ret
	}
	return *o.Force
}

// GetForceOk returns a tuple with the Force field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiHostHostnamePutRequest) GetForceOk() (*bool, bool) {
	if o == nil || IsNil(o.Force) {
		return nil, false
	}
	return o.Force, true
}

// HasForce returns a boolean if a field has been set.
func (o *ApiHostHostnamePutRequest) HasForce() bool {
	if o != nil && !IsNil(o.Force) {
		return true
	}

	return false
}

// SetForce gets a reference to the given bool and assigns it to the Force field.
func (o *ApiHostHostnamePutRequest) SetForce(v bool) {
	o.Force = &v
}

// GetLabels returns the Labels field value if set, zero value otherwise.
func (o *ApiHostHostnamePutRequest) GetLabels() []string {
	if o == nil || IsNil(o.Labels) {
		var ret []string
		return ret
	}
	return o.Labels
}

// GetLabelsOk returns a tuple with the Labels field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiHostHostnamePutRequest) GetLabelsOk() ([]string, bool) {
	if o == nil || IsNil(o.Labels) {
		return nil, false
	}
	return o.Labels, true
}

// HasLabels returns a boolean if a field has been set.
func (o *ApiHostHostnamePutRequest) HasLabels() bool {
	if o != nil && !IsNil(o.Labels) {
		return true
	}

	return false
}

// SetLabels gets a reference to the given []string and assigns it to the Labels field.
func (o *ApiHostHostnamePutRequest) SetLabels(v []string) {
	o.Labels = v
}

// GetMaintenance returns the Maintenance field value if set, zero value otherwise.
func (o *ApiHostHostnamePutRequest) GetMaintenance() bool {
	if o == nil || IsNil(o.Maintenance) {
		var ret bool
		return ret
	}
	return *o.Maintenance
}

// GetMaintenanceOk returns a tuple with the Maintenance field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiHostHostnamePutRequest) GetMaintenanceOk() (*bool, bool) {
	if o == nil || IsNil(o.Maintenance) {
		return nil, false
	}
	return o.Maintenance, true
}

// HasMaintenance returns a boolean if a field has been set.
func (o *ApiHostHostnamePutRequest) HasMaintenance() bool {
	if o != nil && !IsNil(o.Maintenance) {
		return true
	}

	return false
}

// SetMaintenance gets a reference to the given bool and assigns it to the Maintenance field.
func (o *ApiHostHostnamePutRequest) SetMaintenance(v bool) {
	o.Maintenance = &v
}

// GetUpdateLabels returns the UpdateLabels field value if set, zero value otherwise.
func (o *ApiHostHostnamePutRequest) GetUpdateLabels() bool {
	if o == nil || IsNil(o.UpdateLabels) {
		var ret bool
		return ret
	}
	return *o.UpdateLabels
}

// GetUpdateLabelsOk returns a tuple with the UpdateLabels field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiHostHostnamePutRequest) GetUpdateLabelsOk() (*bool, bool) {
	if o == nil || IsNil(o.UpdateLabels) {
		return nil, false
	}
	return o.UpdateLabels, true
}

// HasUpdateLabels returns a boolean if a field has been set.
func (o *ApiHostHostnamePutRequest) HasUpdateLabels() bool {
	if o != nil && !IsNil(o.UpdateLabels) {
		return true
	}

	return false
}

// SetUpdateLabels gets a reference to the given bool and assigns it to the UpdateLabels field.
func (o *ApiHostHostnamePutRequest) SetUpdateLabels(v bool) {
	o.UpdateLabels = &v
}

func (o ApiHostHostnamePutRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApiHostHostnamePutRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Drain) {
		toSerialize["drain"] = o.Drain
	}
	if !IsNil(o.Force) {
		toSerialize["force"] = o.Force
	}
	if !IsNil(o.Labels) {
		toSerialize["labels"] = o.Labels
	}
	if !IsNil(o.Maintenance) {
		toSerialize["maintenance"] = o.Maintenance
	}
	if !IsNil(o.UpdateLabels) {
		toSerialize["update_labels"] = o.UpdateLabels
	}
	return toSerialize, nil
}

type NullableApiHostHostnamePutRequest struct {
	value *ApiHostHostnamePutRequest
	isSet bool
}

func (v NullableApiHostHostnamePutRequest) Get() *ApiHostHostnamePutRequest {
	return v.value
}

func (v *NullableApiHostHostnamePutRequest) Set(val *ApiHostHostnamePutRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableApiHostHostnamePutRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableApiHostHostnamePutRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiHostHostnamePutRequest(val *ApiHostHostnamePutRequest) *NullableApiHostHostnamePutRequest {
	return &NullableApiHostHostnamePutRequest{value: val, isSet: true}
}

func (v NullableApiHostHostnamePutRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiHostHostnamePutRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


