/*
Ceph REST API

This is the official Ceph REST API

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ceph

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ApiOsdFlagsIndividualPutRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApiOsdFlagsIndividualPutRequest{}

// ApiOsdFlagsIndividualPutRequest struct for ApiOsdFlagsIndividualPutRequest
type ApiOsdFlagsIndividualPutRequest struct {
	Flags ApiOsdFlagsIndividualPutRequestFlags `json:"flags"`
	// List of OSD ids the flags should be applied to.
	Ids []int32 `json:"ids"`
}

type _ApiOsdFlagsIndividualPutRequest ApiOsdFlagsIndividualPutRequest

// NewApiOsdFlagsIndividualPutRequest instantiates a new ApiOsdFlagsIndividualPutRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiOsdFlagsIndividualPutRequest(flags ApiOsdFlagsIndividualPutRequestFlags, ids []int32) *ApiOsdFlagsIndividualPutRequest {
	this := ApiOsdFlagsIndividualPutRequest{}
	this.Flags = flags
	this.Ids = ids
	return &this
}

// NewApiOsdFlagsIndividualPutRequestWithDefaults instantiates a new ApiOsdFlagsIndividualPutRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiOsdFlagsIndividualPutRequestWithDefaults() *ApiOsdFlagsIndividualPutRequest {
	this := ApiOsdFlagsIndividualPutRequest{}
	return &this
}

// GetFlags returns the Flags field value
func (o *ApiOsdFlagsIndividualPutRequest) GetFlags() ApiOsdFlagsIndividualPutRequestFlags {
	if o == nil {
		var ret ApiOsdFlagsIndividualPutRequestFlags
		return ret
	}

	return o.Flags
}

// GetFlagsOk returns a tuple with the Flags field value
// and a boolean to check if the value has been set.
func (o *ApiOsdFlagsIndividualPutRequest) GetFlagsOk() (*ApiOsdFlagsIndividualPutRequestFlags, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Flags, true
}

// SetFlags sets field value
func (o *ApiOsdFlagsIndividualPutRequest) SetFlags(v ApiOsdFlagsIndividualPutRequestFlags) {
	o.Flags = v
}

// GetIds returns the Ids field value
func (o *ApiOsdFlagsIndividualPutRequest) GetIds() []int32 {
	if o == nil {
		var ret []int32
		return ret
	}

	return o.Ids
}

// GetIdsOk returns a tuple with the Ids field value
// and a boolean to check if the value has been set.
func (o *ApiOsdFlagsIndividualPutRequest) GetIdsOk() ([]int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.Ids, true
}

// SetIds sets field value
func (o *ApiOsdFlagsIndividualPutRequest) SetIds(v []int32) {
	o.Ids = v
}

func (o ApiOsdFlagsIndividualPutRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApiOsdFlagsIndividualPutRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["flags"] = o.Flags
	toSerialize["ids"] = o.Ids
	return toSerialize, nil
}

func (o *ApiOsdFlagsIndividualPutRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"flags",
		"ids",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varApiOsdFlagsIndividualPutRequest := _ApiOsdFlagsIndividualPutRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varApiOsdFlagsIndividualPutRequest)

	if err != nil {
		return err
	}

	*o = ApiOsdFlagsIndividualPutRequest(varApiOsdFlagsIndividualPutRequest)

	return err
}

type NullableApiOsdFlagsIndividualPutRequest struct {
	value *ApiOsdFlagsIndividualPutRequest
	isSet bool
}

func (v NullableApiOsdFlagsIndividualPutRequest) Get() *ApiOsdFlagsIndividualPutRequest {
	return v.value
}

func (v *NullableApiOsdFlagsIndividualPutRequest) Set(val *ApiOsdFlagsIndividualPutRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableApiOsdFlagsIndividualPutRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableApiOsdFlagsIndividualPutRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiOsdFlagsIndividualPutRequest(val *ApiOsdFlagsIndividualPutRequest) *NullableApiOsdFlagsIndividualPutRequest {
	return &NullableApiOsdFlagsIndividualPutRequest{value: val, isSet: true}
}

func (v NullableApiOsdFlagsIndividualPutRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiOsdFlagsIndividualPutRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


