/*
Ceph REST API

This is the official Ceph REST API

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ceph

import (
	"encoding/json"
)

// checks if the RbdImageConfigurationInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RbdImageConfigurationInner{}

// RbdImageConfigurationInner struct for RbdImageConfigurationInner
type RbdImageConfigurationInner struct {
	// 
	Name *string `json:"name,omitempty"`
	// 
	Value *string `json:"value,omitempty"`
	// 
	Source *int32 `json:"source,omitempty"`
}

// NewRbdImageConfigurationInner instantiates a new RbdImageConfigurationInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRbdImageConfigurationInner() *RbdImageConfigurationInner {
	this := RbdImageConfigurationInner{}
	return &this
}

// NewRbdImageConfigurationInnerWithDefaults instantiates a new RbdImageConfigurationInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRbdImageConfigurationInnerWithDefaults() *RbdImageConfigurationInner {
	this := RbdImageConfigurationInner{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *RbdImageConfigurationInner) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RbdImageConfigurationInner) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *RbdImageConfigurationInner) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *RbdImageConfigurationInner) SetName(v string) {
	o.Name = &v
}

// GetValue returns the Value field value if set, zero value otherwise.
func (o *RbdImageConfigurationInner) GetValue() string {
	if o == nil || IsNil(o.Value) {
		var ret string
		return ret
	}
	return *o.Value
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RbdImageConfigurationInner) GetValueOk() (*string, bool) {
	if o == nil || IsNil(o.Value) {
		return nil, false
	}
	return o.Value, true
}

// HasValue returns a boolean if a field has been set.
func (o *RbdImageConfigurationInner) HasValue() bool {
	if o != nil && !IsNil(o.Value) {
		return true
	}

	return false
}

// SetValue gets a reference to the given string and assigns it to the Value field.
func (o *RbdImageConfigurationInner) SetValue(v string) {
	o.Value = &v
}

// GetSource returns the Source field value if set, zero value otherwise.
func (o *RbdImageConfigurationInner) GetSource() int32 {
	if o == nil || IsNil(o.Source) {
		var ret int32
		return ret
	}
	return *o.Source
}

// GetSourceOk returns a tuple with the Source field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RbdImageConfigurationInner) GetSourceOk() (*int32, bool) {
	if o == nil || IsNil(o.Source) {
		return nil, false
	}
	return o.Source, true
}

// HasSource returns a boolean if a field has been set.
func (o *RbdImageConfigurationInner) HasSource() bool {
	if o != nil && !IsNil(o.Source) {
		return true
	}

	return false
}

// SetSource gets a reference to the given int32 and assigns it to the Source field.
func (o *RbdImageConfigurationInner) SetSource(v int32) {
	o.Source = &v
}

func (o RbdImageConfigurationInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RbdImageConfigurationInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Value) {
		toSerialize["value"] = o.Value
	}
	if !IsNil(o.Source) {
		toSerialize["source"] = o.Source
	}
	return toSerialize, nil
}

type NullableRbdImageConfigurationInner struct {
	value *RbdImageConfigurationInner
	isSet bool
}

func (v NullableRbdImageConfigurationInner) Get() *RbdImageConfigurationInner {
	return v.value
}

func (v *NullableRbdImageConfigurationInner) Set(val *RbdImageConfigurationInner) {
	v.value = val
	v.isSet = true
}

func (v NullableRbdImageConfigurationInner) IsSet() bool {
	return v.isSet
}

func (v *NullableRbdImageConfigurationInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRbdImageConfigurationInner(val *RbdImageConfigurationInner) *NullableRbdImageConfigurationInner {
	return &NullableRbdImageConfigurationInner{value: val, isSet: true}
}

func (v NullableRbdImageConfigurationInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRbdImageConfigurationInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


