/*
Ceph REST API

This is the official Ceph REST API

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ceph

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ApiTelemetryReportGet200ResponseReportUsage type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApiTelemetryReportGet200ResponseReportUsage{}

// ApiTelemetryReportGet200ResponseReportUsage 
type ApiTelemetryReportGet200ResponseReportUsage struct {
	// 
	PgNum int32 `json:"pg_num"`
	// 
	Pools int32 `json:"pools"`
	// 
	TotalAvailBytes int32 `json:"total_avail_bytes"`
	// 
	TotalBytes int32 `json:"total_bytes"`
	// 
	TotalUsedBytes int32 `json:"total_used_bytes"`
}

type _ApiTelemetryReportGet200ResponseReportUsage ApiTelemetryReportGet200ResponseReportUsage

// NewApiTelemetryReportGet200ResponseReportUsage instantiates a new ApiTelemetryReportGet200ResponseReportUsage object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiTelemetryReportGet200ResponseReportUsage(pgNum int32, pools int32, totalAvailBytes int32, totalBytes int32, totalUsedBytes int32) *ApiTelemetryReportGet200ResponseReportUsage {
	this := ApiTelemetryReportGet200ResponseReportUsage{}
	this.PgNum = pgNum
	this.Pools = pools
	this.TotalAvailBytes = totalAvailBytes
	this.TotalBytes = totalBytes
	this.TotalUsedBytes = totalUsedBytes
	return &this
}

// NewApiTelemetryReportGet200ResponseReportUsageWithDefaults instantiates a new ApiTelemetryReportGet200ResponseReportUsage object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiTelemetryReportGet200ResponseReportUsageWithDefaults() *ApiTelemetryReportGet200ResponseReportUsage {
	this := ApiTelemetryReportGet200ResponseReportUsage{}
	return &this
}

// GetPgNum returns the PgNum field value
func (o *ApiTelemetryReportGet200ResponseReportUsage) GetPgNum() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.PgNum
}

// GetPgNumOk returns a tuple with the PgNum field value
// and a boolean to check if the value has been set.
func (o *ApiTelemetryReportGet200ResponseReportUsage) GetPgNumOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PgNum, true
}

// SetPgNum sets field value
func (o *ApiTelemetryReportGet200ResponseReportUsage) SetPgNum(v int32) {
	o.PgNum = v
}

// GetPools returns the Pools field value
func (o *ApiTelemetryReportGet200ResponseReportUsage) GetPools() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Pools
}

// GetPoolsOk returns a tuple with the Pools field value
// and a boolean to check if the value has been set.
func (o *ApiTelemetryReportGet200ResponseReportUsage) GetPoolsOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Pools, true
}

// SetPools sets field value
func (o *ApiTelemetryReportGet200ResponseReportUsage) SetPools(v int32) {
	o.Pools = v
}

// GetTotalAvailBytes returns the TotalAvailBytes field value
func (o *ApiTelemetryReportGet200ResponseReportUsage) GetTotalAvailBytes() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.TotalAvailBytes
}

// GetTotalAvailBytesOk returns a tuple with the TotalAvailBytes field value
// and a boolean to check if the value has been set.
func (o *ApiTelemetryReportGet200ResponseReportUsage) GetTotalAvailBytesOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TotalAvailBytes, true
}

// SetTotalAvailBytes sets field value
func (o *ApiTelemetryReportGet200ResponseReportUsage) SetTotalAvailBytes(v int32) {
	o.TotalAvailBytes = v
}

// GetTotalBytes returns the TotalBytes field value
func (o *ApiTelemetryReportGet200ResponseReportUsage) GetTotalBytes() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.TotalBytes
}

// GetTotalBytesOk returns a tuple with the TotalBytes field value
// and a boolean to check if the value has been set.
func (o *ApiTelemetryReportGet200ResponseReportUsage) GetTotalBytesOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TotalBytes, true
}

// SetTotalBytes sets field value
func (o *ApiTelemetryReportGet200ResponseReportUsage) SetTotalBytes(v int32) {
	o.TotalBytes = v
}

// GetTotalUsedBytes returns the TotalUsedBytes field value
func (o *ApiTelemetryReportGet200ResponseReportUsage) GetTotalUsedBytes() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.TotalUsedBytes
}

// GetTotalUsedBytesOk returns a tuple with the TotalUsedBytes field value
// and a boolean to check if the value has been set.
func (o *ApiTelemetryReportGet200ResponseReportUsage) GetTotalUsedBytesOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TotalUsedBytes, true
}

// SetTotalUsedBytes sets field value
func (o *ApiTelemetryReportGet200ResponseReportUsage) SetTotalUsedBytes(v int32) {
	o.TotalUsedBytes = v
}

func (o ApiTelemetryReportGet200ResponseReportUsage) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApiTelemetryReportGet200ResponseReportUsage) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["pg_num"] = o.PgNum
	toSerialize["pools"] = o.Pools
	toSerialize["total_avail_bytes"] = o.TotalAvailBytes
	toSerialize["total_bytes"] = o.TotalBytes
	toSerialize["total_used_bytes"] = o.TotalUsedBytes
	return toSerialize, nil
}

func (o *ApiTelemetryReportGet200ResponseReportUsage) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"pg_num",
		"pools",
		"total_avail_bytes",
		"total_bytes",
		"total_used_bytes",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varApiTelemetryReportGet200ResponseReportUsage := _ApiTelemetryReportGet200ResponseReportUsage{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varApiTelemetryReportGet200ResponseReportUsage)

	if err != nil {
		return err
	}

	*o = ApiTelemetryReportGet200ResponseReportUsage(varApiTelemetryReportGet200ResponseReportUsage)

	return err
}

type NullableApiTelemetryReportGet200ResponseReportUsage struct {
	value *ApiTelemetryReportGet200ResponseReportUsage
	isSet bool
}

func (v NullableApiTelemetryReportGet200ResponseReportUsage) Get() *ApiTelemetryReportGet200ResponseReportUsage {
	return v.value
}

func (v *NullableApiTelemetryReportGet200ResponseReportUsage) Set(val *ApiTelemetryReportGet200ResponseReportUsage) {
	v.value = val
	v.isSet = true
}

func (v NullableApiTelemetryReportGet200ResponseReportUsage) IsSet() bool {
	return v.isSet
}

func (v *NullableApiTelemetryReportGet200ResponseReportUsage) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiTelemetryReportGet200ResponseReportUsage(val *ApiTelemetryReportGet200ResponseReportUsage) *NullableApiTelemetryReportGet200ResponseReportUsage {
	return &NullableApiTelemetryReportGet200ResponseReportUsage{value: val, isSet: true}
}

func (v NullableApiTelemetryReportGet200ResponseReportUsage) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiTelemetryReportGet200ResponseReportUsage) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


