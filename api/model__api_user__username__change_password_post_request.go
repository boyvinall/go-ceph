/*
Ceph REST API

This is the official Ceph REST API

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ceph

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ApiUserUsernameChangePasswordPostRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApiUserUsernameChangePasswordPostRequest{}

// ApiUserUsernameChangePasswordPostRequest struct for ApiUserUsernameChangePasswordPostRequest
type ApiUserUsernameChangePasswordPostRequest struct {
	NewPassword string `json:"new_password"`
	OldPassword string `json:"old_password"`
}

type _ApiUserUsernameChangePasswordPostRequest ApiUserUsernameChangePasswordPostRequest

// NewApiUserUsernameChangePasswordPostRequest instantiates a new ApiUserUsernameChangePasswordPostRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiUserUsernameChangePasswordPostRequest(newPassword string, oldPassword string) *ApiUserUsernameChangePasswordPostRequest {
	this := ApiUserUsernameChangePasswordPostRequest{}
	this.NewPassword = newPassword
	this.OldPassword = oldPassword
	return &this
}

// NewApiUserUsernameChangePasswordPostRequestWithDefaults instantiates a new ApiUserUsernameChangePasswordPostRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiUserUsernameChangePasswordPostRequestWithDefaults() *ApiUserUsernameChangePasswordPostRequest {
	this := ApiUserUsernameChangePasswordPostRequest{}
	return &this
}

// GetNewPassword returns the NewPassword field value
func (o *ApiUserUsernameChangePasswordPostRequest) GetNewPassword() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.NewPassword
}

// GetNewPasswordOk returns a tuple with the NewPassword field value
// and a boolean to check if the value has been set.
func (o *ApiUserUsernameChangePasswordPostRequest) GetNewPasswordOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.NewPassword, true
}

// SetNewPassword sets field value
func (o *ApiUserUsernameChangePasswordPostRequest) SetNewPassword(v string) {
	o.NewPassword = v
}

// GetOldPassword returns the OldPassword field value
func (o *ApiUserUsernameChangePasswordPostRequest) GetOldPassword() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.OldPassword
}

// GetOldPasswordOk returns a tuple with the OldPassword field value
// and a boolean to check if the value has been set.
func (o *ApiUserUsernameChangePasswordPostRequest) GetOldPasswordOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OldPassword, true
}

// SetOldPassword sets field value
func (o *ApiUserUsernameChangePasswordPostRequest) SetOldPassword(v string) {
	o.OldPassword = v
}

func (o ApiUserUsernameChangePasswordPostRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApiUserUsernameChangePasswordPostRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["new_password"] = o.NewPassword
	toSerialize["old_password"] = o.OldPassword
	return toSerialize, nil
}

func (o *ApiUserUsernameChangePasswordPostRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"new_password",
		"old_password",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varApiUserUsernameChangePasswordPostRequest := _ApiUserUsernameChangePasswordPostRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varApiUserUsernameChangePasswordPostRequest)

	if err != nil {
		return err
	}

	*o = ApiUserUsernameChangePasswordPostRequest(varApiUserUsernameChangePasswordPostRequest)

	return err
}

type NullableApiUserUsernameChangePasswordPostRequest struct {
	value *ApiUserUsernameChangePasswordPostRequest
	isSet bool
}

func (v NullableApiUserUsernameChangePasswordPostRequest) Get() *ApiUserUsernameChangePasswordPostRequest {
	return v.value
}

func (v *NullableApiUserUsernameChangePasswordPostRequest) Set(val *ApiUserUsernameChangePasswordPostRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableApiUserUsernameChangePasswordPostRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableApiUserUsernameChangePasswordPostRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiUserUsernameChangePasswordPostRequest(val *ApiUserUsernameChangePasswordPostRequest) *NullableApiUserUsernameChangePasswordPostRequest {
	return &NullableApiUserUsernameChangePasswordPostRequest{value: val, isSet: true}
}

func (v NullableApiUserUsernameChangePasswordPostRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiUserUsernameChangePasswordPostRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


