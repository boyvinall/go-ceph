/*
Ceph REST API

This is the official Ceph REST API

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ceph

import (
	"encoding/json"
)

// checks if the ApiRgwBucketSetEncryptionConfigPutRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApiRgwBucketSetEncryptionConfigPutRequest{}

// ApiRgwBucketSetEncryptionConfigPutRequest struct for ApiRgwBucketSetEncryptionConfigPutRequest
type ApiRgwBucketSetEncryptionConfigPutRequest struct {
	Address *string `json:"address,omitempty"`
	AuthMethod *string `json:"auth_method,omitempty"`
	ClientCert *string `json:"client_cert,omitempty"`
	ClientKey *string `json:"client_key,omitempty"`
	DaemonName *string `json:"daemon_name,omitempty"`
	EncryptionType *string `json:"encryption_type,omitempty"`
	KmsProvider *string `json:"kms_provider,omitempty"`
	Namespace *string `json:"namespace,omitempty"`
	Owner *string `json:"owner,omitempty"`
	SecretEngine *string `json:"secret_engine,omitempty"`
	SecretPath *string `json:"secret_path,omitempty"`
	SslCert *string `json:"ssl_cert,omitempty"`
	Token *string `json:"token,omitempty"`
}

// NewApiRgwBucketSetEncryptionConfigPutRequest instantiates a new ApiRgwBucketSetEncryptionConfigPutRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiRgwBucketSetEncryptionConfigPutRequest() *ApiRgwBucketSetEncryptionConfigPutRequest {
	this := ApiRgwBucketSetEncryptionConfigPutRequest{}
	var namespace string = ""
	this.Namespace = &namespace
	var secretPath string = ""
	this.SecretPath = &secretPath
	return &this
}

// NewApiRgwBucketSetEncryptionConfigPutRequestWithDefaults instantiates a new ApiRgwBucketSetEncryptionConfigPutRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiRgwBucketSetEncryptionConfigPutRequestWithDefaults() *ApiRgwBucketSetEncryptionConfigPutRequest {
	this := ApiRgwBucketSetEncryptionConfigPutRequest{}
	var namespace string = ""
	this.Namespace = &namespace
	var secretPath string = ""
	this.SecretPath = &secretPath
	return &this
}

// GetAddress returns the Address field value if set, zero value otherwise.
func (o *ApiRgwBucketSetEncryptionConfigPutRequest) GetAddress() string {
	if o == nil || IsNil(o.Address) {
		var ret string
		return ret
	}
	return *o.Address
}

// GetAddressOk returns a tuple with the Address field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiRgwBucketSetEncryptionConfigPutRequest) GetAddressOk() (*string, bool) {
	if o == nil || IsNil(o.Address) {
		return nil, false
	}
	return o.Address, true
}

// HasAddress returns a boolean if a field has been set.
func (o *ApiRgwBucketSetEncryptionConfigPutRequest) HasAddress() bool {
	if o != nil && !IsNil(o.Address) {
		return true
	}

	return false
}

// SetAddress gets a reference to the given string and assigns it to the Address field.
func (o *ApiRgwBucketSetEncryptionConfigPutRequest) SetAddress(v string) {
	o.Address = &v
}

// GetAuthMethod returns the AuthMethod field value if set, zero value otherwise.
func (o *ApiRgwBucketSetEncryptionConfigPutRequest) GetAuthMethod() string {
	if o == nil || IsNil(o.AuthMethod) {
		var ret string
		return ret
	}
	return *o.AuthMethod
}

// GetAuthMethodOk returns a tuple with the AuthMethod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiRgwBucketSetEncryptionConfigPutRequest) GetAuthMethodOk() (*string, bool) {
	if o == nil || IsNil(o.AuthMethod) {
		return nil, false
	}
	return o.AuthMethod, true
}

// HasAuthMethod returns a boolean if a field has been set.
func (o *ApiRgwBucketSetEncryptionConfigPutRequest) HasAuthMethod() bool {
	if o != nil && !IsNil(o.AuthMethod) {
		return true
	}

	return false
}

// SetAuthMethod gets a reference to the given string and assigns it to the AuthMethod field.
func (o *ApiRgwBucketSetEncryptionConfigPutRequest) SetAuthMethod(v string) {
	o.AuthMethod = &v
}

// GetClientCert returns the ClientCert field value if set, zero value otherwise.
func (o *ApiRgwBucketSetEncryptionConfigPutRequest) GetClientCert() string {
	if o == nil || IsNil(o.ClientCert) {
		var ret string
		return ret
	}
	return *o.ClientCert
}

// GetClientCertOk returns a tuple with the ClientCert field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiRgwBucketSetEncryptionConfigPutRequest) GetClientCertOk() (*string, bool) {
	if o == nil || IsNil(o.ClientCert) {
		return nil, false
	}
	return o.ClientCert, true
}

// HasClientCert returns a boolean if a field has been set.
func (o *ApiRgwBucketSetEncryptionConfigPutRequest) HasClientCert() bool {
	if o != nil && !IsNil(o.ClientCert) {
		return true
	}

	return false
}

// SetClientCert gets a reference to the given string and assigns it to the ClientCert field.
func (o *ApiRgwBucketSetEncryptionConfigPutRequest) SetClientCert(v string) {
	o.ClientCert = &v
}

// GetClientKey returns the ClientKey field value if set, zero value otherwise.
func (o *ApiRgwBucketSetEncryptionConfigPutRequest) GetClientKey() string {
	if o == nil || IsNil(o.ClientKey) {
		var ret string
		return ret
	}
	return *o.ClientKey
}

// GetClientKeyOk returns a tuple with the ClientKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiRgwBucketSetEncryptionConfigPutRequest) GetClientKeyOk() (*string, bool) {
	if o == nil || IsNil(o.ClientKey) {
		return nil, false
	}
	return o.ClientKey, true
}

// HasClientKey returns a boolean if a field has been set.
func (o *ApiRgwBucketSetEncryptionConfigPutRequest) HasClientKey() bool {
	if o != nil && !IsNil(o.ClientKey) {
		return true
	}

	return false
}

// SetClientKey gets a reference to the given string and assigns it to the ClientKey field.
func (o *ApiRgwBucketSetEncryptionConfigPutRequest) SetClientKey(v string) {
	o.ClientKey = &v
}

// GetDaemonName returns the DaemonName field value if set, zero value otherwise.
func (o *ApiRgwBucketSetEncryptionConfigPutRequest) GetDaemonName() string {
	if o == nil || IsNil(o.DaemonName) {
		var ret string
		return ret
	}
	return *o.DaemonName
}

// GetDaemonNameOk returns a tuple with the DaemonName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiRgwBucketSetEncryptionConfigPutRequest) GetDaemonNameOk() (*string, bool) {
	if o == nil || IsNil(o.DaemonName) {
		return nil, false
	}
	return o.DaemonName, true
}

// HasDaemonName returns a boolean if a field has been set.
func (o *ApiRgwBucketSetEncryptionConfigPutRequest) HasDaemonName() bool {
	if o != nil && !IsNil(o.DaemonName) {
		return true
	}

	return false
}

// SetDaemonName gets a reference to the given string and assigns it to the DaemonName field.
func (o *ApiRgwBucketSetEncryptionConfigPutRequest) SetDaemonName(v string) {
	o.DaemonName = &v
}

// GetEncryptionType returns the EncryptionType field value if set, zero value otherwise.
func (o *ApiRgwBucketSetEncryptionConfigPutRequest) GetEncryptionType() string {
	if o == nil || IsNil(o.EncryptionType) {
		var ret string
		return ret
	}
	return *o.EncryptionType
}

// GetEncryptionTypeOk returns a tuple with the EncryptionType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiRgwBucketSetEncryptionConfigPutRequest) GetEncryptionTypeOk() (*string, bool) {
	if o == nil || IsNil(o.EncryptionType) {
		return nil, false
	}
	return o.EncryptionType, true
}

// HasEncryptionType returns a boolean if a field has been set.
func (o *ApiRgwBucketSetEncryptionConfigPutRequest) HasEncryptionType() bool {
	if o != nil && !IsNil(o.EncryptionType) {
		return true
	}

	return false
}

// SetEncryptionType gets a reference to the given string and assigns it to the EncryptionType field.
func (o *ApiRgwBucketSetEncryptionConfigPutRequest) SetEncryptionType(v string) {
	o.EncryptionType = &v
}

// GetKmsProvider returns the KmsProvider field value if set, zero value otherwise.
func (o *ApiRgwBucketSetEncryptionConfigPutRequest) GetKmsProvider() string {
	if o == nil || IsNil(o.KmsProvider) {
		var ret string
		return ret
	}
	return *o.KmsProvider
}

// GetKmsProviderOk returns a tuple with the KmsProvider field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiRgwBucketSetEncryptionConfigPutRequest) GetKmsProviderOk() (*string, bool) {
	if o == nil || IsNil(o.KmsProvider) {
		return nil, false
	}
	return o.KmsProvider, true
}

// HasKmsProvider returns a boolean if a field has been set.
func (o *ApiRgwBucketSetEncryptionConfigPutRequest) HasKmsProvider() bool {
	if o != nil && !IsNil(o.KmsProvider) {
		return true
	}

	return false
}

// SetKmsProvider gets a reference to the given string and assigns it to the KmsProvider field.
func (o *ApiRgwBucketSetEncryptionConfigPutRequest) SetKmsProvider(v string) {
	o.KmsProvider = &v
}

// GetNamespace returns the Namespace field value if set, zero value otherwise.
func (o *ApiRgwBucketSetEncryptionConfigPutRequest) GetNamespace() string {
	if o == nil || IsNil(o.Namespace) {
		var ret string
		return ret
	}
	return *o.Namespace
}

// GetNamespaceOk returns a tuple with the Namespace field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiRgwBucketSetEncryptionConfigPutRequest) GetNamespaceOk() (*string, bool) {
	if o == nil || IsNil(o.Namespace) {
		return nil, false
	}
	return o.Namespace, true
}

// HasNamespace returns a boolean if a field has been set.
func (o *ApiRgwBucketSetEncryptionConfigPutRequest) HasNamespace() bool {
	if o != nil && !IsNil(o.Namespace) {
		return true
	}

	return false
}

// SetNamespace gets a reference to the given string and assigns it to the Namespace field.
func (o *ApiRgwBucketSetEncryptionConfigPutRequest) SetNamespace(v string) {
	o.Namespace = &v
}

// GetOwner returns the Owner field value if set, zero value otherwise.
func (o *ApiRgwBucketSetEncryptionConfigPutRequest) GetOwner() string {
	if o == nil || IsNil(o.Owner) {
		var ret string
		return ret
	}
	return *o.Owner
}

// GetOwnerOk returns a tuple with the Owner field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiRgwBucketSetEncryptionConfigPutRequest) GetOwnerOk() (*string, bool) {
	if o == nil || IsNil(o.Owner) {
		return nil, false
	}
	return o.Owner, true
}

// HasOwner returns a boolean if a field has been set.
func (o *ApiRgwBucketSetEncryptionConfigPutRequest) HasOwner() bool {
	if o != nil && !IsNil(o.Owner) {
		return true
	}

	return false
}

// SetOwner gets a reference to the given string and assigns it to the Owner field.
func (o *ApiRgwBucketSetEncryptionConfigPutRequest) SetOwner(v string) {
	o.Owner = &v
}

// GetSecretEngine returns the SecretEngine field value if set, zero value otherwise.
func (o *ApiRgwBucketSetEncryptionConfigPutRequest) GetSecretEngine() string {
	if o == nil || IsNil(o.SecretEngine) {
		var ret string
		return ret
	}
	return *o.SecretEngine
}

// GetSecretEngineOk returns a tuple with the SecretEngine field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiRgwBucketSetEncryptionConfigPutRequest) GetSecretEngineOk() (*string, bool) {
	if o == nil || IsNil(o.SecretEngine) {
		return nil, false
	}
	return o.SecretEngine, true
}

// HasSecretEngine returns a boolean if a field has been set.
func (o *ApiRgwBucketSetEncryptionConfigPutRequest) HasSecretEngine() bool {
	if o != nil && !IsNil(o.SecretEngine) {
		return true
	}

	return false
}

// SetSecretEngine gets a reference to the given string and assigns it to the SecretEngine field.
func (o *ApiRgwBucketSetEncryptionConfigPutRequest) SetSecretEngine(v string) {
	o.SecretEngine = &v
}

// GetSecretPath returns the SecretPath field value if set, zero value otherwise.
func (o *ApiRgwBucketSetEncryptionConfigPutRequest) GetSecretPath() string {
	if o == nil || IsNil(o.SecretPath) {
		var ret string
		return ret
	}
	return *o.SecretPath
}

// GetSecretPathOk returns a tuple with the SecretPath field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiRgwBucketSetEncryptionConfigPutRequest) GetSecretPathOk() (*string, bool) {
	if o == nil || IsNil(o.SecretPath) {
		return nil, false
	}
	return o.SecretPath, true
}

// HasSecretPath returns a boolean if a field has been set.
func (o *ApiRgwBucketSetEncryptionConfigPutRequest) HasSecretPath() bool {
	if o != nil && !IsNil(o.SecretPath) {
		return true
	}

	return false
}

// SetSecretPath gets a reference to the given string and assigns it to the SecretPath field.
func (o *ApiRgwBucketSetEncryptionConfigPutRequest) SetSecretPath(v string) {
	o.SecretPath = &v
}

// GetSslCert returns the SslCert field value if set, zero value otherwise.
func (o *ApiRgwBucketSetEncryptionConfigPutRequest) GetSslCert() string {
	if o == nil || IsNil(o.SslCert) {
		var ret string
		return ret
	}
	return *o.SslCert
}

// GetSslCertOk returns a tuple with the SslCert field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiRgwBucketSetEncryptionConfigPutRequest) GetSslCertOk() (*string, bool) {
	if o == nil || IsNil(o.SslCert) {
		return nil, false
	}
	return o.SslCert, true
}

// HasSslCert returns a boolean if a field has been set.
func (o *ApiRgwBucketSetEncryptionConfigPutRequest) HasSslCert() bool {
	if o != nil && !IsNil(o.SslCert) {
		return true
	}

	return false
}

// SetSslCert gets a reference to the given string and assigns it to the SslCert field.
func (o *ApiRgwBucketSetEncryptionConfigPutRequest) SetSslCert(v string) {
	o.SslCert = &v
}

// GetToken returns the Token field value if set, zero value otherwise.
func (o *ApiRgwBucketSetEncryptionConfigPutRequest) GetToken() string {
	if o == nil || IsNil(o.Token) {
		var ret string
		return ret
	}
	return *o.Token
}

// GetTokenOk returns a tuple with the Token field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiRgwBucketSetEncryptionConfigPutRequest) GetTokenOk() (*string, bool) {
	if o == nil || IsNil(o.Token) {
		return nil, false
	}
	return o.Token, true
}

// HasToken returns a boolean if a field has been set.
func (o *ApiRgwBucketSetEncryptionConfigPutRequest) HasToken() bool {
	if o != nil && !IsNil(o.Token) {
		return true
	}

	return false
}

// SetToken gets a reference to the given string and assigns it to the Token field.
func (o *ApiRgwBucketSetEncryptionConfigPutRequest) SetToken(v string) {
	o.Token = &v
}

func (o ApiRgwBucketSetEncryptionConfigPutRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApiRgwBucketSetEncryptionConfigPutRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Address) {
		toSerialize["address"] = o.Address
	}
	if !IsNil(o.AuthMethod) {
		toSerialize["auth_method"] = o.AuthMethod
	}
	if !IsNil(o.ClientCert) {
		toSerialize["client_cert"] = o.ClientCert
	}
	if !IsNil(o.ClientKey) {
		toSerialize["client_key"] = o.ClientKey
	}
	if !IsNil(o.DaemonName) {
		toSerialize["daemon_name"] = o.DaemonName
	}
	if !IsNil(o.EncryptionType) {
		toSerialize["encryption_type"] = o.EncryptionType
	}
	if !IsNil(o.KmsProvider) {
		toSerialize["kms_provider"] = o.KmsProvider
	}
	if !IsNil(o.Namespace) {
		toSerialize["namespace"] = o.Namespace
	}
	if !IsNil(o.Owner) {
		toSerialize["owner"] = o.Owner
	}
	if !IsNil(o.SecretEngine) {
		toSerialize["secret_engine"] = o.SecretEngine
	}
	if !IsNil(o.SecretPath) {
		toSerialize["secret_path"] = o.SecretPath
	}
	if !IsNil(o.SslCert) {
		toSerialize["ssl_cert"] = o.SslCert
	}
	if !IsNil(o.Token) {
		toSerialize["token"] = o.Token
	}
	return toSerialize, nil
}

type NullableApiRgwBucketSetEncryptionConfigPutRequest struct {
	value *ApiRgwBucketSetEncryptionConfigPutRequest
	isSet bool
}

func (v NullableApiRgwBucketSetEncryptionConfigPutRequest) Get() *ApiRgwBucketSetEncryptionConfigPutRequest {
	return v.value
}

func (v *NullableApiRgwBucketSetEncryptionConfigPutRequest) Set(val *ApiRgwBucketSetEncryptionConfigPutRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableApiRgwBucketSetEncryptionConfigPutRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableApiRgwBucketSetEncryptionConfigPutRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiRgwBucketSetEncryptionConfigPutRequest(val *ApiRgwBucketSetEncryptionConfigPutRequest) *NullableApiRgwBucketSetEncryptionConfigPutRequest {
	return &NullableApiRgwBucketSetEncryptionConfigPutRequest{value: val, isSet: true}
}

func (v NullableApiRgwBucketSetEncryptionConfigPutRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiRgwBucketSetEncryptionConfigPutRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


