/*
Ceph REST API

This is the official Ceph REST API

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ceph

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ApiRgwRolesPutRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApiRgwRolesPutRequest{}

// ApiRgwRolesPutRequest struct for ApiRgwRolesPutRequest
type ApiRgwRolesPutRequest struct {
	MaxSessionDuration string `json:"max_session_duration"`
	RoleName string `json:"role_name"`
}

type _ApiRgwRolesPutRequest ApiRgwRolesPutRequest

// NewApiRgwRolesPutRequest instantiates a new ApiRgwRolesPutRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiRgwRolesPutRequest(maxSessionDuration string, roleName string) *ApiRgwRolesPutRequest {
	this := ApiRgwRolesPutRequest{}
	this.MaxSessionDuration = maxSessionDuration
	this.RoleName = roleName
	return &this
}

// NewApiRgwRolesPutRequestWithDefaults instantiates a new ApiRgwRolesPutRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiRgwRolesPutRequestWithDefaults() *ApiRgwRolesPutRequest {
	this := ApiRgwRolesPutRequest{}
	return &this
}

// GetMaxSessionDuration returns the MaxSessionDuration field value
func (o *ApiRgwRolesPutRequest) GetMaxSessionDuration() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MaxSessionDuration
}

// GetMaxSessionDurationOk returns a tuple with the MaxSessionDuration field value
// and a boolean to check if the value has been set.
func (o *ApiRgwRolesPutRequest) GetMaxSessionDurationOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MaxSessionDuration, true
}

// SetMaxSessionDuration sets field value
func (o *ApiRgwRolesPutRequest) SetMaxSessionDuration(v string) {
	o.MaxSessionDuration = v
}

// GetRoleName returns the RoleName field value
func (o *ApiRgwRolesPutRequest) GetRoleName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RoleName
}

// GetRoleNameOk returns a tuple with the RoleName field value
// and a boolean to check if the value has been set.
func (o *ApiRgwRolesPutRequest) GetRoleNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RoleName, true
}

// SetRoleName sets field value
func (o *ApiRgwRolesPutRequest) SetRoleName(v string) {
	o.RoleName = v
}

func (o ApiRgwRolesPutRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApiRgwRolesPutRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["max_session_duration"] = o.MaxSessionDuration
	toSerialize["role_name"] = o.RoleName
	return toSerialize, nil
}

func (o *ApiRgwRolesPutRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"max_session_duration",
		"role_name",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varApiRgwRolesPutRequest := _ApiRgwRolesPutRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varApiRgwRolesPutRequest)

	if err != nil {
		return err
	}

	*o = ApiRgwRolesPutRequest(varApiRgwRolesPutRequest)

	return err
}

type NullableApiRgwRolesPutRequest struct {
	value *ApiRgwRolesPutRequest
	isSet bool
}

func (v NullableApiRgwRolesPutRequest) Get() *ApiRgwRolesPutRequest {
	return v.value
}

func (v *NullableApiRgwRolesPutRequest) Set(val *ApiRgwRolesPutRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableApiRgwRolesPutRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableApiRgwRolesPutRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiRgwRolesPutRequest(val *ApiRgwRolesPutRequest) *NullableApiRgwRolesPutRequest {
	return &NullableApiRgwRolesPutRequest{value: val, isSet: true}
}

func (v NullableApiRgwRolesPutRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiRgwRolesPutRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


