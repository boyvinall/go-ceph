/*
Ceph REST API

This is the official Ceph REST API

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ceph

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ApiCephfsSnapshotSchedulePostRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApiCephfsSnapshotSchedulePostRequest{}

// ApiCephfsSnapshotSchedulePostRequest struct for ApiCephfsSnapshotSchedulePostRequest
type ApiCephfsSnapshotSchedulePostRequest struct {
	Fs string `json:"fs"`
	Group *string `json:"group,omitempty"`
	Path string `json:"path"`
	RetentionPolicy *string `json:"retention_policy,omitempty"`
	SnapSchedule string `json:"snap_schedule"`
	Start string `json:"start"`
	Subvol *string `json:"subvol,omitempty"`
}

type _ApiCephfsSnapshotSchedulePostRequest ApiCephfsSnapshotSchedulePostRequest

// NewApiCephfsSnapshotSchedulePostRequest instantiates a new ApiCephfsSnapshotSchedulePostRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiCephfsSnapshotSchedulePostRequest(fs string, path string, snapSchedule string, start string) *ApiCephfsSnapshotSchedulePostRequest {
	this := ApiCephfsSnapshotSchedulePostRequest{}
	this.Fs = fs
	this.Path = path
	this.SnapSchedule = snapSchedule
	this.Start = start
	return &this
}

// NewApiCephfsSnapshotSchedulePostRequestWithDefaults instantiates a new ApiCephfsSnapshotSchedulePostRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiCephfsSnapshotSchedulePostRequestWithDefaults() *ApiCephfsSnapshotSchedulePostRequest {
	this := ApiCephfsSnapshotSchedulePostRequest{}
	return &this
}

// GetFs returns the Fs field value
func (o *ApiCephfsSnapshotSchedulePostRequest) GetFs() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Fs
}

// GetFsOk returns a tuple with the Fs field value
// and a boolean to check if the value has been set.
func (o *ApiCephfsSnapshotSchedulePostRequest) GetFsOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Fs, true
}

// SetFs sets field value
func (o *ApiCephfsSnapshotSchedulePostRequest) SetFs(v string) {
	o.Fs = v
}

// GetGroup returns the Group field value if set, zero value otherwise.
func (o *ApiCephfsSnapshotSchedulePostRequest) GetGroup() string {
	if o == nil || IsNil(o.Group) {
		var ret string
		return ret
	}
	return *o.Group
}

// GetGroupOk returns a tuple with the Group field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiCephfsSnapshotSchedulePostRequest) GetGroupOk() (*string, bool) {
	if o == nil || IsNil(o.Group) {
		return nil, false
	}
	return o.Group, true
}

// HasGroup returns a boolean if a field has been set.
func (o *ApiCephfsSnapshotSchedulePostRequest) HasGroup() bool {
	if o != nil && !IsNil(o.Group) {
		return true
	}

	return false
}

// SetGroup gets a reference to the given string and assigns it to the Group field.
func (o *ApiCephfsSnapshotSchedulePostRequest) SetGroup(v string) {
	o.Group = &v
}

// GetPath returns the Path field value
func (o *ApiCephfsSnapshotSchedulePostRequest) GetPath() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Path
}

// GetPathOk returns a tuple with the Path field value
// and a boolean to check if the value has been set.
func (o *ApiCephfsSnapshotSchedulePostRequest) GetPathOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Path, true
}

// SetPath sets field value
func (o *ApiCephfsSnapshotSchedulePostRequest) SetPath(v string) {
	o.Path = v
}

// GetRetentionPolicy returns the RetentionPolicy field value if set, zero value otherwise.
func (o *ApiCephfsSnapshotSchedulePostRequest) GetRetentionPolicy() string {
	if o == nil || IsNil(o.RetentionPolicy) {
		var ret string
		return ret
	}
	return *o.RetentionPolicy
}

// GetRetentionPolicyOk returns a tuple with the RetentionPolicy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiCephfsSnapshotSchedulePostRequest) GetRetentionPolicyOk() (*string, bool) {
	if o == nil || IsNil(o.RetentionPolicy) {
		return nil, false
	}
	return o.RetentionPolicy, true
}

// HasRetentionPolicy returns a boolean if a field has been set.
func (o *ApiCephfsSnapshotSchedulePostRequest) HasRetentionPolicy() bool {
	if o != nil && !IsNil(o.RetentionPolicy) {
		return true
	}

	return false
}

// SetRetentionPolicy gets a reference to the given string and assigns it to the RetentionPolicy field.
func (o *ApiCephfsSnapshotSchedulePostRequest) SetRetentionPolicy(v string) {
	o.RetentionPolicy = &v
}

// GetSnapSchedule returns the SnapSchedule field value
func (o *ApiCephfsSnapshotSchedulePostRequest) GetSnapSchedule() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SnapSchedule
}

// GetSnapScheduleOk returns a tuple with the SnapSchedule field value
// and a boolean to check if the value has been set.
func (o *ApiCephfsSnapshotSchedulePostRequest) GetSnapScheduleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SnapSchedule, true
}

// SetSnapSchedule sets field value
func (o *ApiCephfsSnapshotSchedulePostRequest) SetSnapSchedule(v string) {
	o.SnapSchedule = v
}

// GetStart returns the Start field value
func (o *ApiCephfsSnapshotSchedulePostRequest) GetStart() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Start
}

// GetStartOk returns a tuple with the Start field value
// and a boolean to check if the value has been set.
func (o *ApiCephfsSnapshotSchedulePostRequest) GetStartOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Start, true
}

// SetStart sets field value
func (o *ApiCephfsSnapshotSchedulePostRequest) SetStart(v string) {
	o.Start = v
}

// GetSubvol returns the Subvol field value if set, zero value otherwise.
func (o *ApiCephfsSnapshotSchedulePostRequest) GetSubvol() string {
	if o == nil || IsNil(o.Subvol) {
		var ret string
		return ret
	}
	return *o.Subvol
}

// GetSubvolOk returns a tuple with the Subvol field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiCephfsSnapshotSchedulePostRequest) GetSubvolOk() (*string, bool) {
	if o == nil || IsNil(o.Subvol) {
		return nil, false
	}
	return o.Subvol, true
}

// HasSubvol returns a boolean if a field has been set.
func (o *ApiCephfsSnapshotSchedulePostRequest) HasSubvol() bool {
	if o != nil && !IsNil(o.Subvol) {
		return true
	}

	return false
}

// SetSubvol gets a reference to the given string and assigns it to the Subvol field.
func (o *ApiCephfsSnapshotSchedulePostRequest) SetSubvol(v string) {
	o.Subvol = &v
}

func (o ApiCephfsSnapshotSchedulePostRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApiCephfsSnapshotSchedulePostRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["fs"] = o.Fs
	if !IsNil(o.Group) {
		toSerialize["group"] = o.Group
	}
	toSerialize["path"] = o.Path
	if !IsNil(o.RetentionPolicy) {
		toSerialize["retention_policy"] = o.RetentionPolicy
	}
	toSerialize["snap_schedule"] = o.SnapSchedule
	toSerialize["start"] = o.Start
	if !IsNil(o.Subvol) {
		toSerialize["subvol"] = o.Subvol
	}
	return toSerialize, nil
}

func (o *ApiCephfsSnapshotSchedulePostRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"fs",
		"path",
		"snap_schedule",
		"start",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varApiCephfsSnapshotSchedulePostRequest := _ApiCephfsSnapshotSchedulePostRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varApiCephfsSnapshotSchedulePostRequest)

	if err != nil {
		return err
	}

	*o = ApiCephfsSnapshotSchedulePostRequest(varApiCephfsSnapshotSchedulePostRequest)

	return err
}

type NullableApiCephfsSnapshotSchedulePostRequest struct {
	value *ApiCephfsSnapshotSchedulePostRequest
	isSet bool
}

func (v NullableApiCephfsSnapshotSchedulePostRequest) Get() *ApiCephfsSnapshotSchedulePostRequest {
	return v.value
}

func (v *NullableApiCephfsSnapshotSchedulePostRequest) Set(val *ApiCephfsSnapshotSchedulePostRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableApiCephfsSnapshotSchedulePostRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableApiCephfsSnapshotSchedulePostRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiCephfsSnapshotSchedulePostRequest(val *ApiCephfsSnapshotSchedulePostRequest) *NullableApiCephfsSnapshotSchedulePostRequest {
	return &NullableApiCephfsSnapshotSchedulePostRequest{value: val, isSet: true}
}

func (v NullableApiCephfsSnapshotSchedulePostRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiCephfsSnapshotSchedulePostRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


