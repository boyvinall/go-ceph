/*
Ceph REST API

This is the official Ceph REST API

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ceph

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ApiBlockImageTrashImageIdSpecRestorePostRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApiBlockImageTrashImageIdSpecRestorePostRequest{}

// ApiBlockImageTrashImageIdSpecRestorePostRequest struct for ApiBlockImageTrashImageIdSpecRestorePostRequest
type ApiBlockImageTrashImageIdSpecRestorePostRequest struct {
	NewImageName string `json:"new_image_name"`
}

type _ApiBlockImageTrashImageIdSpecRestorePostRequest ApiBlockImageTrashImageIdSpecRestorePostRequest

// NewApiBlockImageTrashImageIdSpecRestorePostRequest instantiates a new ApiBlockImageTrashImageIdSpecRestorePostRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiBlockImageTrashImageIdSpecRestorePostRequest(newImageName string) *ApiBlockImageTrashImageIdSpecRestorePostRequest {
	this := ApiBlockImageTrashImageIdSpecRestorePostRequest{}
	this.NewImageName = newImageName
	return &this
}

// NewApiBlockImageTrashImageIdSpecRestorePostRequestWithDefaults instantiates a new ApiBlockImageTrashImageIdSpecRestorePostRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiBlockImageTrashImageIdSpecRestorePostRequestWithDefaults() *ApiBlockImageTrashImageIdSpecRestorePostRequest {
	this := ApiBlockImageTrashImageIdSpecRestorePostRequest{}
	return &this
}

// GetNewImageName returns the NewImageName field value
func (o *ApiBlockImageTrashImageIdSpecRestorePostRequest) GetNewImageName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.NewImageName
}

// GetNewImageNameOk returns a tuple with the NewImageName field value
// and a boolean to check if the value has been set.
func (o *ApiBlockImageTrashImageIdSpecRestorePostRequest) GetNewImageNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.NewImageName, true
}

// SetNewImageName sets field value
func (o *ApiBlockImageTrashImageIdSpecRestorePostRequest) SetNewImageName(v string) {
	o.NewImageName = v
}

func (o ApiBlockImageTrashImageIdSpecRestorePostRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApiBlockImageTrashImageIdSpecRestorePostRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["new_image_name"] = o.NewImageName
	return toSerialize, nil
}

func (o *ApiBlockImageTrashImageIdSpecRestorePostRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"new_image_name",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varApiBlockImageTrashImageIdSpecRestorePostRequest := _ApiBlockImageTrashImageIdSpecRestorePostRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varApiBlockImageTrashImageIdSpecRestorePostRequest)

	if err != nil {
		return err
	}

	*o = ApiBlockImageTrashImageIdSpecRestorePostRequest(varApiBlockImageTrashImageIdSpecRestorePostRequest)

	return err
}

type NullableApiBlockImageTrashImageIdSpecRestorePostRequest struct {
	value *ApiBlockImageTrashImageIdSpecRestorePostRequest
	isSet bool
}

func (v NullableApiBlockImageTrashImageIdSpecRestorePostRequest) Get() *ApiBlockImageTrashImageIdSpecRestorePostRequest {
	return v.value
}

func (v *NullableApiBlockImageTrashImageIdSpecRestorePostRequest) Set(val *ApiBlockImageTrashImageIdSpecRestorePostRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableApiBlockImageTrashImageIdSpecRestorePostRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableApiBlockImageTrashImageIdSpecRestorePostRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiBlockImageTrashImageIdSpecRestorePostRequest(val *ApiBlockImageTrashImageIdSpecRestorePostRequest) *NullableApiBlockImageTrashImageIdSpecRestorePostRequest {
	return &NullableApiBlockImageTrashImageIdSpecRestorePostRequest{value: val, isSet: true}
}

func (v NullableApiBlockImageTrashImageIdSpecRestorePostRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiBlockImageTrashImageIdSpecRestorePostRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


