/*
Ceph REST API

This is the official Ceph REST API

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ceph

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ApiCrushRulePostRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApiCrushRulePostRequest{}

// ApiCrushRulePostRequest struct for ApiCrushRulePostRequest
type ApiCrushRulePostRequest struct {
	DeviceClass *string `json:"device_class,omitempty"`
	FailureDomain string `json:"failure_domain"`
	Name string `json:"name"`
	PoolType *string `json:"pool_type,omitempty"`
	Profile *string `json:"profile,omitempty"`
	Root *string `json:"root,omitempty"`
}

type _ApiCrushRulePostRequest ApiCrushRulePostRequest

// NewApiCrushRulePostRequest instantiates a new ApiCrushRulePostRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiCrushRulePostRequest(failureDomain string, name string) *ApiCrushRulePostRequest {
	this := ApiCrushRulePostRequest{}
	this.FailureDomain = failureDomain
	this.Name = name
	var poolType string = "replication"
	this.PoolType = &poolType
	return &this
}

// NewApiCrushRulePostRequestWithDefaults instantiates a new ApiCrushRulePostRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiCrushRulePostRequestWithDefaults() *ApiCrushRulePostRequest {
	this := ApiCrushRulePostRequest{}
	var poolType string = "replication"
	this.PoolType = &poolType
	return &this
}

// GetDeviceClass returns the DeviceClass field value if set, zero value otherwise.
func (o *ApiCrushRulePostRequest) GetDeviceClass() string {
	if o == nil || IsNil(o.DeviceClass) {
		var ret string
		return ret
	}
	return *o.DeviceClass
}

// GetDeviceClassOk returns a tuple with the DeviceClass field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiCrushRulePostRequest) GetDeviceClassOk() (*string, bool) {
	if o == nil || IsNil(o.DeviceClass) {
		return nil, false
	}
	return o.DeviceClass, true
}

// HasDeviceClass returns a boolean if a field has been set.
func (o *ApiCrushRulePostRequest) HasDeviceClass() bool {
	if o != nil && !IsNil(o.DeviceClass) {
		return true
	}

	return false
}

// SetDeviceClass gets a reference to the given string and assigns it to the DeviceClass field.
func (o *ApiCrushRulePostRequest) SetDeviceClass(v string) {
	o.DeviceClass = &v
}

// GetFailureDomain returns the FailureDomain field value
func (o *ApiCrushRulePostRequest) GetFailureDomain() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.FailureDomain
}

// GetFailureDomainOk returns a tuple with the FailureDomain field value
// and a boolean to check if the value has been set.
func (o *ApiCrushRulePostRequest) GetFailureDomainOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FailureDomain, true
}

// SetFailureDomain sets field value
func (o *ApiCrushRulePostRequest) SetFailureDomain(v string) {
	o.FailureDomain = v
}

// GetName returns the Name field value
func (o *ApiCrushRulePostRequest) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *ApiCrushRulePostRequest) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *ApiCrushRulePostRequest) SetName(v string) {
	o.Name = v
}

// GetPoolType returns the PoolType field value if set, zero value otherwise.
func (o *ApiCrushRulePostRequest) GetPoolType() string {
	if o == nil || IsNil(o.PoolType) {
		var ret string
		return ret
	}
	return *o.PoolType
}

// GetPoolTypeOk returns a tuple with the PoolType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiCrushRulePostRequest) GetPoolTypeOk() (*string, bool) {
	if o == nil || IsNil(o.PoolType) {
		return nil, false
	}
	return o.PoolType, true
}

// HasPoolType returns a boolean if a field has been set.
func (o *ApiCrushRulePostRequest) HasPoolType() bool {
	if o != nil && !IsNil(o.PoolType) {
		return true
	}

	return false
}

// SetPoolType gets a reference to the given string and assigns it to the PoolType field.
func (o *ApiCrushRulePostRequest) SetPoolType(v string) {
	o.PoolType = &v
}

// GetProfile returns the Profile field value if set, zero value otherwise.
func (o *ApiCrushRulePostRequest) GetProfile() string {
	if o == nil || IsNil(o.Profile) {
		var ret string
		return ret
	}
	return *o.Profile
}

// GetProfileOk returns a tuple with the Profile field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiCrushRulePostRequest) GetProfileOk() (*string, bool) {
	if o == nil || IsNil(o.Profile) {
		return nil, false
	}
	return o.Profile, true
}

// HasProfile returns a boolean if a field has been set.
func (o *ApiCrushRulePostRequest) HasProfile() bool {
	if o != nil && !IsNil(o.Profile) {
		return true
	}

	return false
}

// SetProfile gets a reference to the given string and assigns it to the Profile field.
func (o *ApiCrushRulePostRequest) SetProfile(v string) {
	o.Profile = &v
}

// GetRoot returns the Root field value if set, zero value otherwise.
func (o *ApiCrushRulePostRequest) GetRoot() string {
	if o == nil || IsNil(o.Root) {
		var ret string
		return ret
	}
	return *o.Root
}

// GetRootOk returns a tuple with the Root field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiCrushRulePostRequest) GetRootOk() (*string, bool) {
	if o == nil || IsNil(o.Root) {
		return nil, false
	}
	return o.Root, true
}

// HasRoot returns a boolean if a field has been set.
func (o *ApiCrushRulePostRequest) HasRoot() bool {
	if o != nil && !IsNil(o.Root) {
		return true
	}

	return false
}

// SetRoot gets a reference to the given string and assigns it to the Root field.
func (o *ApiCrushRulePostRequest) SetRoot(v string) {
	o.Root = &v
}

func (o ApiCrushRulePostRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApiCrushRulePostRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DeviceClass) {
		toSerialize["device_class"] = o.DeviceClass
	}
	toSerialize["failure_domain"] = o.FailureDomain
	toSerialize["name"] = o.Name
	if !IsNil(o.PoolType) {
		toSerialize["pool_type"] = o.PoolType
	}
	if !IsNil(o.Profile) {
		toSerialize["profile"] = o.Profile
	}
	if !IsNil(o.Root) {
		toSerialize["root"] = o.Root
	}
	return toSerialize, nil
}

func (o *ApiCrushRulePostRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"failure_domain",
		"name",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varApiCrushRulePostRequest := _ApiCrushRulePostRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varApiCrushRulePostRequest)

	if err != nil {
		return err
	}

	*o = ApiCrushRulePostRequest(varApiCrushRulePostRequest)

	return err
}

type NullableApiCrushRulePostRequest struct {
	value *ApiCrushRulePostRequest
	isSet bool
}

func (v NullableApiCrushRulePostRequest) Get() *ApiCrushRulePostRequest {
	return v.value
}

func (v *NullableApiCrushRulePostRequest) Set(val *ApiCrushRulePostRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableApiCrushRulePostRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableApiCrushRulePostRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiCrushRulePostRequest(val *ApiCrushRulePostRequest) *NullableApiCrushRulePostRequest {
	return &NullableApiCrushRulePostRequest{value: val, isSet: true}
}

func (v NullableApiCrushRulePostRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiCrushRulePostRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


