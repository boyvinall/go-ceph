/*
Ceph REST API

This is the official Ceph REST API

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ceph

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ApiNvmeofSubsystemNqnHostPostRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApiNvmeofSubsystemNqnHostPostRequest{}

// ApiNvmeofSubsystemNqnHostPostRequest struct for ApiNvmeofSubsystemNqnHostPostRequest
type ApiNvmeofSubsystemNqnHostPostRequest struct {
	// NVMeoF gateway group
	GwGroup *string `json:"gw_group,omitempty"`
	// NVMeoF host NQN. Use \"*\" to allow any host.
	HostNqn string `json:"host_nqn"`
}

type _ApiNvmeofSubsystemNqnHostPostRequest ApiNvmeofSubsystemNqnHostPostRequest

// NewApiNvmeofSubsystemNqnHostPostRequest instantiates a new ApiNvmeofSubsystemNqnHostPostRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiNvmeofSubsystemNqnHostPostRequest(hostNqn string) *ApiNvmeofSubsystemNqnHostPostRequest {
	this := ApiNvmeofSubsystemNqnHostPostRequest{}
	this.HostNqn = hostNqn
	return &this
}

// NewApiNvmeofSubsystemNqnHostPostRequestWithDefaults instantiates a new ApiNvmeofSubsystemNqnHostPostRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiNvmeofSubsystemNqnHostPostRequestWithDefaults() *ApiNvmeofSubsystemNqnHostPostRequest {
	this := ApiNvmeofSubsystemNqnHostPostRequest{}
	return &this
}

// GetGwGroup returns the GwGroup field value if set, zero value otherwise.
func (o *ApiNvmeofSubsystemNqnHostPostRequest) GetGwGroup() string {
	if o == nil || IsNil(o.GwGroup) {
		var ret string
		return ret
	}
	return *o.GwGroup
}

// GetGwGroupOk returns a tuple with the GwGroup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiNvmeofSubsystemNqnHostPostRequest) GetGwGroupOk() (*string, bool) {
	if o == nil || IsNil(o.GwGroup) {
		return nil, false
	}
	return o.GwGroup, true
}

// HasGwGroup returns a boolean if a field has been set.
func (o *ApiNvmeofSubsystemNqnHostPostRequest) HasGwGroup() bool {
	if o != nil && !IsNil(o.GwGroup) {
		return true
	}

	return false
}

// SetGwGroup gets a reference to the given string and assigns it to the GwGroup field.
func (o *ApiNvmeofSubsystemNqnHostPostRequest) SetGwGroup(v string) {
	o.GwGroup = &v
}

// GetHostNqn returns the HostNqn field value
func (o *ApiNvmeofSubsystemNqnHostPostRequest) GetHostNqn() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.HostNqn
}

// GetHostNqnOk returns a tuple with the HostNqn field value
// and a boolean to check if the value has been set.
func (o *ApiNvmeofSubsystemNqnHostPostRequest) GetHostNqnOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.HostNqn, true
}

// SetHostNqn sets field value
func (o *ApiNvmeofSubsystemNqnHostPostRequest) SetHostNqn(v string) {
	o.HostNqn = v
}

func (o ApiNvmeofSubsystemNqnHostPostRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApiNvmeofSubsystemNqnHostPostRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.GwGroup) {
		toSerialize["gw_group"] = o.GwGroup
	}
	toSerialize["host_nqn"] = o.HostNqn
	return toSerialize, nil
}

func (o *ApiNvmeofSubsystemNqnHostPostRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"host_nqn",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varApiNvmeofSubsystemNqnHostPostRequest := _ApiNvmeofSubsystemNqnHostPostRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varApiNvmeofSubsystemNqnHostPostRequest)

	if err != nil {
		return err
	}

	*o = ApiNvmeofSubsystemNqnHostPostRequest(varApiNvmeofSubsystemNqnHostPostRequest)

	return err
}

type NullableApiNvmeofSubsystemNqnHostPostRequest struct {
	value *ApiNvmeofSubsystemNqnHostPostRequest
	isSet bool
}

func (v NullableApiNvmeofSubsystemNqnHostPostRequest) Get() *ApiNvmeofSubsystemNqnHostPostRequest {
	return v.value
}

func (v *NullableApiNvmeofSubsystemNqnHostPostRequest) Set(val *ApiNvmeofSubsystemNqnHostPostRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableApiNvmeofSubsystemNqnHostPostRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableApiNvmeofSubsystemNqnHostPostRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiNvmeofSubsystemNqnHostPostRequest(val *ApiNvmeofSubsystemNqnHostPostRequest) *NullableApiNvmeofSubsystemNqnHostPostRequest {
	return &NullableApiNvmeofSubsystemNqnHostPostRequest{value: val, isSet: true}
}

func (v NullableApiNvmeofSubsystemNqnHostPostRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiNvmeofSubsystemNqnHostPostRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


