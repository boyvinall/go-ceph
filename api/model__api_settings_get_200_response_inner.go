/*
Ceph REST API

This is the official Ceph REST API

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ceph

import (
	"encoding/json"
)

// checks if the ApiSettingsGet200ResponseInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApiSettingsGet200ResponseInner{}

// ApiSettingsGet200ResponseInner struct for ApiSettingsGet200ResponseInner
type ApiSettingsGet200ResponseInner struct {
	// Default Settings
	Default *bool `json:"default,omitempty"`
	// Settings Name
	Name *string `json:"name,omitempty"`
	// Type of Settings
	Type *string `json:"type,omitempty"`
	// Settings Value
	Value *bool `json:"value,omitempty"`
}

// NewApiSettingsGet200ResponseInner instantiates a new ApiSettingsGet200ResponseInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiSettingsGet200ResponseInner() *ApiSettingsGet200ResponseInner {
	this := ApiSettingsGet200ResponseInner{}
	return &this
}

// NewApiSettingsGet200ResponseInnerWithDefaults instantiates a new ApiSettingsGet200ResponseInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiSettingsGet200ResponseInnerWithDefaults() *ApiSettingsGet200ResponseInner {
	this := ApiSettingsGet200ResponseInner{}
	return &this
}

// GetDefault returns the Default field value if set, zero value otherwise.
func (o *ApiSettingsGet200ResponseInner) GetDefault() bool {
	if o == nil || IsNil(o.Default) {
		var ret bool
		return ret
	}
	return *o.Default
}

// GetDefaultOk returns a tuple with the Default field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiSettingsGet200ResponseInner) GetDefaultOk() (*bool, bool) {
	if o == nil || IsNil(o.Default) {
		return nil, false
	}
	return o.Default, true
}

// HasDefault returns a boolean if a field has been set.
func (o *ApiSettingsGet200ResponseInner) HasDefault() bool {
	if o != nil && !IsNil(o.Default) {
		return true
	}

	return false
}

// SetDefault gets a reference to the given bool and assigns it to the Default field.
func (o *ApiSettingsGet200ResponseInner) SetDefault(v bool) {
	o.Default = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ApiSettingsGet200ResponseInner) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiSettingsGet200ResponseInner) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ApiSettingsGet200ResponseInner) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ApiSettingsGet200ResponseInner) SetName(v string) {
	o.Name = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *ApiSettingsGet200ResponseInner) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiSettingsGet200ResponseInner) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *ApiSettingsGet200ResponseInner) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *ApiSettingsGet200ResponseInner) SetType(v string) {
	o.Type = &v
}

// GetValue returns the Value field value if set, zero value otherwise.
func (o *ApiSettingsGet200ResponseInner) GetValue() bool {
	if o == nil || IsNil(o.Value) {
		var ret bool
		return ret
	}
	return *o.Value
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiSettingsGet200ResponseInner) GetValueOk() (*bool, bool) {
	if o == nil || IsNil(o.Value) {
		return nil, false
	}
	return o.Value, true
}

// HasValue returns a boolean if a field has been set.
func (o *ApiSettingsGet200ResponseInner) HasValue() bool {
	if o != nil && !IsNil(o.Value) {
		return true
	}

	return false
}

// SetValue gets a reference to the given bool and assigns it to the Value field.
func (o *ApiSettingsGet200ResponseInner) SetValue(v bool) {
	o.Value = &v
}

func (o ApiSettingsGet200ResponseInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApiSettingsGet200ResponseInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Default) {
		toSerialize["default"] = o.Default
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.Value) {
		toSerialize["value"] = o.Value
	}
	return toSerialize, nil
}

type NullableApiSettingsGet200ResponseInner struct {
	value *ApiSettingsGet200ResponseInner
	isSet bool
}

func (v NullableApiSettingsGet200ResponseInner) Get() *ApiSettingsGet200ResponseInner {
	return v.value
}

func (v *NullableApiSettingsGet200ResponseInner) Set(val *ApiSettingsGet200ResponseInner) {
	v.value = val
	v.isSet = true
}

func (v NullableApiSettingsGet200ResponseInner) IsSet() bool {
	return v.isSet
}

func (v *NullableApiSettingsGet200ResponseInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiSettingsGet200ResponseInner(val *ApiSettingsGet200ResponseInner) *NullableApiSettingsGet200ResponseInner {
	return &NullableApiSettingsGet200ResponseInner{value: val, isSet: true}
}

func (v NullableApiSettingsGet200ResponseInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiSettingsGet200ResponseInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


