/*
Ceph REST API

This is the official Ceph REST API

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ceph

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ApiTelemetryReportGet200ResponseReportConfig type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApiTelemetryReportGet200ResponseReportConfig{}

// ApiTelemetryReportGet200ResponseReportConfig 
type ApiTelemetryReportGet200ResponseReportConfig struct {
	// 
	ActiveChanged []string `json:"active_changed"`
	// 
	ClusterChanged []string `json:"cluster_changed"`
}

type _ApiTelemetryReportGet200ResponseReportConfig ApiTelemetryReportGet200ResponseReportConfig

// NewApiTelemetryReportGet200ResponseReportConfig instantiates a new ApiTelemetryReportGet200ResponseReportConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiTelemetryReportGet200ResponseReportConfig(activeChanged []string, clusterChanged []string) *ApiTelemetryReportGet200ResponseReportConfig {
	this := ApiTelemetryReportGet200ResponseReportConfig{}
	this.ActiveChanged = activeChanged
	this.ClusterChanged = clusterChanged
	return &this
}

// NewApiTelemetryReportGet200ResponseReportConfigWithDefaults instantiates a new ApiTelemetryReportGet200ResponseReportConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiTelemetryReportGet200ResponseReportConfigWithDefaults() *ApiTelemetryReportGet200ResponseReportConfig {
	this := ApiTelemetryReportGet200ResponseReportConfig{}
	return &this
}

// GetActiveChanged returns the ActiveChanged field value
func (o *ApiTelemetryReportGet200ResponseReportConfig) GetActiveChanged() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.ActiveChanged
}

// GetActiveChangedOk returns a tuple with the ActiveChanged field value
// and a boolean to check if the value has been set.
func (o *ApiTelemetryReportGet200ResponseReportConfig) GetActiveChangedOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ActiveChanged, true
}

// SetActiveChanged sets field value
func (o *ApiTelemetryReportGet200ResponseReportConfig) SetActiveChanged(v []string) {
	o.ActiveChanged = v
}

// GetClusterChanged returns the ClusterChanged field value
func (o *ApiTelemetryReportGet200ResponseReportConfig) GetClusterChanged() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.ClusterChanged
}

// GetClusterChangedOk returns a tuple with the ClusterChanged field value
// and a boolean to check if the value has been set.
func (o *ApiTelemetryReportGet200ResponseReportConfig) GetClusterChangedOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ClusterChanged, true
}

// SetClusterChanged sets field value
func (o *ApiTelemetryReportGet200ResponseReportConfig) SetClusterChanged(v []string) {
	o.ClusterChanged = v
}

func (o ApiTelemetryReportGet200ResponseReportConfig) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApiTelemetryReportGet200ResponseReportConfig) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["active_changed"] = o.ActiveChanged
	toSerialize["cluster_changed"] = o.ClusterChanged
	return toSerialize, nil
}

func (o *ApiTelemetryReportGet200ResponseReportConfig) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"active_changed",
		"cluster_changed",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varApiTelemetryReportGet200ResponseReportConfig := _ApiTelemetryReportGet200ResponseReportConfig{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varApiTelemetryReportGet200ResponseReportConfig)

	if err != nil {
		return err
	}

	*o = ApiTelemetryReportGet200ResponseReportConfig(varApiTelemetryReportGet200ResponseReportConfig)

	return err
}

type NullableApiTelemetryReportGet200ResponseReportConfig struct {
	value *ApiTelemetryReportGet200ResponseReportConfig
	isSet bool
}

func (v NullableApiTelemetryReportGet200ResponseReportConfig) Get() *ApiTelemetryReportGet200ResponseReportConfig {
	return v.value
}

func (v *NullableApiTelemetryReportGet200ResponseReportConfig) Set(val *ApiTelemetryReportGet200ResponseReportConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableApiTelemetryReportGet200ResponseReportConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableApiTelemetryReportGet200ResponseReportConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiTelemetryReportGet200ResponseReportConfig(val *ApiTelemetryReportGet200ResponseReportConfig) *NullableApiTelemetryReportGet200ResponseReportConfig {
	return &NullableApiTelemetryReportGet200ResponseReportConfig{value: val, isSet: true}
}

func (v NullableApiTelemetryReportGet200ResponseReportConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiTelemetryReportGet200ResponseReportConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


