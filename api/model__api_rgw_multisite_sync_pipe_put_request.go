/*
Ceph REST API

This is the official Ceph REST API

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ceph

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ApiRgwMultisiteSyncPipePutRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApiRgwMultisiteSyncPipePutRequest{}

// ApiRgwMultisiteSyncPipePutRequest struct for ApiRgwMultisiteSyncPipePutRequest
type ApiRgwMultisiteSyncPipePutRequest struct {
	BucketName *string `json:"bucket_name,omitempty"`
	DestinationBucket *string `json:"destination_bucket,omitempty"`
	DestinationZones string `json:"destination_zones"`
	GroupId string `json:"group_id"`
	Mode *string `json:"mode,omitempty"`
	PipeId string `json:"pipe_id"`
	SourceBucket *string `json:"source_bucket,omitempty"`
	SourceZones string `json:"source_zones"`
	User *string `json:"user,omitempty"`
}

type _ApiRgwMultisiteSyncPipePutRequest ApiRgwMultisiteSyncPipePutRequest

// NewApiRgwMultisiteSyncPipePutRequest instantiates a new ApiRgwMultisiteSyncPipePutRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiRgwMultisiteSyncPipePutRequest(destinationZones string, groupId string, pipeId string, sourceZones string) *ApiRgwMultisiteSyncPipePutRequest {
	this := ApiRgwMultisiteSyncPipePutRequest{}
	var bucketName string = ""
	this.BucketName = &bucketName
	var destinationBucket string = ""
	this.DestinationBucket = &destinationBucket
	this.DestinationZones = destinationZones
	this.GroupId = groupId
	var mode string = ""
	this.Mode = &mode
	this.PipeId = pipeId
	var sourceBucket string = ""
	this.SourceBucket = &sourceBucket
	this.SourceZones = sourceZones
	var user string = ""
	this.User = &user
	return &this
}

// NewApiRgwMultisiteSyncPipePutRequestWithDefaults instantiates a new ApiRgwMultisiteSyncPipePutRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiRgwMultisiteSyncPipePutRequestWithDefaults() *ApiRgwMultisiteSyncPipePutRequest {
	this := ApiRgwMultisiteSyncPipePutRequest{}
	var bucketName string = ""
	this.BucketName = &bucketName
	var destinationBucket string = ""
	this.DestinationBucket = &destinationBucket
	var mode string = ""
	this.Mode = &mode
	var sourceBucket string = ""
	this.SourceBucket = &sourceBucket
	var user string = ""
	this.User = &user
	return &this
}

// GetBucketName returns the BucketName field value if set, zero value otherwise.
func (o *ApiRgwMultisiteSyncPipePutRequest) GetBucketName() string {
	if o == nil || IsNil(o.BucketName) {
		var ret string
		return ret
	}
	return *o.BucketName
}

// GetBucketNameOk returns a tuple with the BucketName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiRgwMultisiteSyncPipePutRequest) GetBucketNameOk() (*string, bool) {
	if o == nil || IsNil(o.BucketName) {
		return nil, false
	}
	return o.BucketName, true
}

// HasBucketName returns a boolean if a field has been set.
func (o *ApiRgwMultisiteSyncPipePutRequest) HasBucketName() bool {
	if o != nil && !IsNil(o.BucketName) {
		return true
	}

	return false
}

// SetBucketName gets a reference to the given string and assigns it to the BucketName field.
func (o *ApiRgwMultisiteSyncPipePutRequest) SetBucketName(v string) {
	o.BucketName = &v
}

// GetDestinationBucket returns the DestinationBucket field value if set, zero value otherwise.
func (o *ApiRgwMultisiteSyncPipePutRequest) GetDestinationBucket() string {
	if o == nil || IsNil(o.DestinationBucket) {
		var ret string
		return ret
	}
	return *o.DestinationBucket
}

// GetDestinationBucketOk returns a tuple with the DestinationBucket field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiRgwMultisiteSyncPipePutRequest) GetDestinationBucketOk() (*string, bool) {
	if o == nil || IsNil(o.DestinationBucket) {
		return nil, false
	}
	return o.DestinationBucket, true
}

// HasDestinationBucket returns a boolean if a field has been set.
func (o *ApiRgwMultisiteSyncPipePutRequest) HasDestinationBucket() bool {
	if o != nil && !IsNil(o.DestinationBucket) {
		return true
	}

	return false
}

// SetDestinationBucket gets a reference to the given string and assigns it to the DestinationBucket field.
func (o *ApiRgwMultisiteSyncPipePutRequest) SetDestinationBucket(v string) {
	o.DestinationBucket = &v
}

// GetDestinationZones returns the DestinationZones field value
func (o *ApiRgwMultisiteSyncPipePutRequest) GetDestinationZones() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DestinationZones
}

// GetDestinationZonesOk returns a tuple with the DestinationZones field value
// and a boolean to check if the value has been set.
func (o *ApiRgwMultisiteSyncPipePutRequest) GetDestinationZonesOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DestinationZones, true
}

// SetDestinationZones sets field value
func (o *ApiRgwMultisiteSyncPipePutRequest) SetDestinationZones(v string) {
	o.DestinationZones = v
}

// GetGroupId returns the GroupId field value
func (o *ApiRgwMultisiteSyncPipePutRequest) GetGroupId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.GroupId
}

// GetGroupIdOk returns a tuple with the GroupId field value
// and a boolean to check if the value has been set.
func (o *ApiRgwMultisiteSyncPipePutRequest) GetGroupIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.GroupId, true
}

// SetGroupId sets field value
func (o *ApiRgwMultisiteSyncPipePutRequest) SetGroupId(v string) {
	o.GroupId = v
}

// GetMode returns the Mode field value if set, zero value otherwise.
func (o *ApiRgwMultisiteSyncPipePutRequest) GetMode() string {
	if o == nil || IsNil(o.Mode) {
		var ret string
		return ret
	}
	return *o.Mode
}

// GetModeOk returns a tuple with the Mode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiRgwMultisiteSyncPipePutRequest) GetModeOk() (*string, bool) {
	if o == nil || IsNil(o.Mode) {
		return nil, false
	}
	return o.Mode, true
}

// HasMode returns a boolean if a field has been set.
func (o *ApiRgwMultisiteSyncPipePutRequest) HasMode() bool {
	if o != nil && !IsNil(o.Mode) {
		return true
	}

	return false
}

// SetMode gets a reference to the given string and assigns it to the Mode field.
func (o *ApiRgwMultisiteSyncPipePutRequest) SetMode(v string) {
	o.Mode = &v
}

// GetPipeId returns the PipeId field value
func (o *ApiRgwMultisiteSyncPipePutRequest) GetPipeId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PipeId
}

// GetPipeIdOk returns a tuple with the PipeId field value
// and a boolean to check if the value has been set.
func (o *ApiRgwMultisiteSyncPipePutRequest) GetPipeIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PipeId, true
}

// SetPipeId sets field value
func (o *ApiRgwMultisiteSyncPipePutRequest) SetPipeId(v string) {
	o.PipeId = v
}

// GetSourceBucket returns the SourceBucket field value if set, zero value otherwise.
func (o *ApiRgwMultisiteSyncPipePutRequest) GetSourceBucket() string {
	if o == nil || IsNil(o.SourceBucket) {
		var ret string
		return ret
	}
	return *o.SourceBucket
}

// GetSourceBucketOk returns a tuple with the SourceBucket field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiRgwMultisiteSyncPipePutRequest) GetSourceBucketOk() (*string, bool) {
	if o == nil || IsNil(o.SourceBucket) {
		return nil, false
	}
	return o.SourceBucket, true
}

// HasSourceBucket returns a boolean if a field has been set.
func (o *ApiRgwMultisiteSyncPipePutRequest) HasSourceBucket() bool {
	if o != nil && !IsNil(o.SourceBucket) {
		return true
	}

	return false
}

// SetSourceBucket gets a reference to the given string and assigns it to the SourceBucket field.
func (o *ApiRgwMultisiteSyncPipePutRequest) SetSourceBucket(v string) {
	o.SourceBucket = &v
}

// GetSourceZones returns the SourceZones field value
func (o *ApiRgwMultisiteSyncPipePutRequest) GetSourceZones() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SourceZones
}

// GetSourceZonesOk returns a tuple with the SourceZones field value
// and a boolean to check if the value has been set.
func (o *ApiRgwMultisiteSyncPipePutRequest) GetSourceZonesOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SourceZones, true
}

// SetSourceZones sets field value
func (o *ApiRgwMultisiteSyncPipePutRequest) SetSourceZones(v string) {
	o.SourceZones = v
}

// GetUser returns the User field value if set, zero value otherwise.
func (o *ApiRgwMultisiteSyncPipePutRequest) GetUser() string {
	if o == nil || IsNil(o.User) {
		var ret string
		return ret
	}
	return *o.User
}

// GetUserOk returns a tuple with the User field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiRgwMultisiteSyncPipePutRequest) GetUserOk() (*string, bool) {
	if o == nil || IsNil(o.User) {
		return nil, false
	}
	return o.User, true
}

// HasUser returns a boolean if a field has been set.
func (o *ApiRgwMultisiteSyncPipePutRequest) HasUser() bool {
	if o != nil && !IsNil(o.User) {
		return true
	}

	return false
}

// SetUser gets a reference to the given string and assigns it to the User field.
func (o *ApiRgwMultisiteSyncPipePutRequest) SetUser(v string) {
	o.User = &v
}

func (o ApiRgwMultisiteSyncPipePutRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApiRgwMultisiteSyncPipePutRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.BucketName) {
		toSerialize["bucket_name"] = o.BucketName
	}
	if !IsNil(o.DestinationBucket) {
		toSerialize["destination_bucket"] = o.DestinationBucket
	}
	toSerialize["destination_zones"] = o.DestinationZones
	toSerialize["group_id"] = o.GroupId
	if !IsNil(o.Mode) {
		toSerialize["mode"] = o.Mode
	}
	toSerialize["pipe_id"] = o.PipeId
	if !IsNil(o.SourceBucket) {
		toSerialize["source_bucket"] = o.SourceBucket
	}
	toSerialize["source_zones"] = o.SourceZones
	if !IsNil(o.User) {
		toSerialize["user"] = o.User
	}
	return toSerialize, nil
}

func (o *ApiRgwMultisiteSyncPipePutRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"destination_zones",
		"group_id",
		"pipe_id",
		"source_zones",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varApiRgwMultisiteSyncPipePutRequest := _ApiRgwMultisiteSyncPipePutRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varApiRgwMultisiteSyncPipePutRequest)

	if err != nil {
		return err
	}

	*o = ApiRgwMultisiteSyncPipePutRequest(varApiRgwMultisiteSyncPipePutRequest)

	return err
}

type NullableApiRgwMultisiteSyncPipePutRequest struct {
	value *ApiRgwMultisiteSyncPipePutRequest
	isSet bool
}

func (v NullableApiRgwMultisiteSyncPipePutRequest) Get() *ApiRgwMultisiteSyncPipePutRequest {
	return v.value
}

func (v *NullableApiRgwMultisiteSyncPipePutRequest) Set(val *ApiRgwMultisiteSyncPipePutRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableApiRgwMultisiteSyncPipePutRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableApiRgwMultisiteSyncPipePutRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiRgwMultisiteSyncPipePutRequest(val *ApiRgwMultisiteSyncPipePutRequest) *NullableApiRgwMultisiteSyncPipePutRequest {
	return &NullableApiRgwMultisiteSyncPipePutRequest{value: val, isSet: true}
}

func (v NullableApiRgwMultisiteSyncPipePutRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiRgwMultisiteSyncPipePutRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


