/*
Ceph REST API

This is the official Ceph REST API

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ceph

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ApiFeedbackPostRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApiFeedbackPostRequest{}

// ApiFeedbackPostRequest struct for ApiFeedbackPostRequest
type ApiFeedbackPostRequest struct {
	ApiKey *string `json:"api_key,omitempty"`
	Description string `json:"description"`
	Project string `json:"project"`
	Subject string `json:"subject"`
	Tracker string `json:"tracker"`
}

type _ApiFeedbackPostRequest ApiFeedbackPostRequest

// NewApiFeedbackPostRequest instantiates a new ApiFeedbackPostRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiFeedbackPostRequest(description string, project string, subject string, tracker string) *ApiFeedbackPostRequest {
	this := ApiFeedbackPostRequest{}
	this.Description = description
	this.Project = project
	this.Subject = subject
	this.Tracker = tracker
	return &this
}

// NewApiFeedbackPostRequestWithDefaults instantiates a new ApiFeedbackPostRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiFeedbackPostRequestWithDefaults() *ApiFeedbackPostRequest {
	this := ApiFeedbackPostRequest{}
	return &this
}

// GetApiKey returns the ApiKey field value if set, zero value otherwise.
func (o *ApiFeedbackPostRequest) GetApiKey() string {
	if o == nil || IsNil(o.ApiKey) {
		var ret string
		return ret
	}
	return *o.ApiKey
}

// GetApiKeyOk returns a tuple with the ApiKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiFeedbackPostRequest) GetApiKeyOk() (*string, bool) {
	if o == nil || IsNil(o.ApiKey) {
		return nil, false
	}
	return o.ApiKey, true
}

// HasApiKey returns a boolean if a field has been set.
func (o *ApiFeedbackPostRequest) HasApiKey() bool {
	if o != nil && !IsNil(o.ApiKey) {
		return true
	}

	return false
}

// SetApiKey gets a reference to the given string and assigns it to the ApiKey field.
func (o *ApiFeedbackPostRequest) SetApiKey(v string) {
	o.ApiKey = &v
}

// GetDescription returns the Description field value
func (o *ApiFeedbackPostRequest) GetDescription() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Description
}

// GetDescriptionOk returns a tuple with the Description field value
// and a boolean to check if the value has been set.
func (o *ApiFeedbackPostRequest) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Description, true
}

// SetDescription sets field value
func (o *ApiFeedbackPostRequest) SetDescription(v string) {
	o.Description = v
}

// GetProject returns the Project field value
func (o *ApiFeedbackPostRequest) GetProject() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Project
}

// GetProjectOk returns a tuple with the Project field value
// and a boolean to check if the value has been set.
func (o *ApiFeedbackPostRequest) GetProjectOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Project, true
}

// SetProject sets field value
func (o *ApiFeedbackPostRequest) SetProject(v string) {
	o.Project = v
}

// GetSubject returns the Subject field value
func (o *ApiFeedbackPostRequest) GetSubject() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Subject
}

// GetSubjectOk returns a tuple with the Subject field value
// and a boolean to check if the value has been set.
func (o *ApiFeedbackPostRequest) GetSubjectOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Subject, true
}

// SetSubject sets field value
func (o *ApiFeedbackPostRequest) SetSubject(v string) {
	o.Subject = v
}

// GetTracker returns the Tracker field value
func (o *ApiFeedbackPostRequest) GetTracker() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Tracker
}

// GetTrackerOk returns a tuple with the Tracker field value
// and a boolean to check if the value has been set.
func (o *ApiFeedbackPostRequest) GetTrackerOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Tracker, true
}

// SetTracker sets field value
func (o *ApiFeedbackPostRequest) SetTracker(v string) {
	o.Tracker = v
}

func (o ApiFeedbackPostRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApiFeedbackPostRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ApiKey) {
		toSerialize["api_key"] = o.ApiKey
	}
	toSerialize["description"] = o.Description
	toSerialize["project"] = o.Project
	toSerialize["subject"] = o.Subject
	toSerialize["tracker"] = o.Tracker
	return toSerialize, nil
}

func (o *ApiFeedbackPostRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"description",
		"project",
		"subject",
		"tracker",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varApiFeedbackPostRequest := _ApiFeedbackPostRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varApiFeedbackPostRequest)

	if err != nil {
		return err
	}

	*o = ApiFeedbackPostRequest(varApiFeedbackPostRequest)

	return err
}

type NullableApiFeedbackPostRequest struct {
	value *ApiFeedbackPostRequest
	isSet bool
}

func (v NullableApiFeedbackPostRequest) Get() *ApiFeedbackPostRequest {
	return v.value
}

func (v *NullableApiFeedbackPostRequest) Set(val *ApiFeedbackPostRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableApiFeedbackPostRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableApiFeedbackPostRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiFeedbackPostRequest(val *ApiFeedbackPostRequest) *NullableApiFeedbackPostRequest {
	return &NullableApiFeedbackPostRequest{value: val, isSet: true}
}

func (v NullableApiFeedbackPostRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiFeedbackPostRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


