/*
Ceph REST API

This is the official Ceph REST API

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ceph

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ApiTelemetryReportGet200ResponseReportCrushBucketTypes type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApiTelemetryReportGet200ResponseReportCrushBucketTypes{}

// ApiTelemetryReportGet200ResponseReportCrushBucketTypes 
type ApiTelemetryReportGet200ResponseReportCrushBucketTypes struct {
	// 
	Var1 int32 `json:"1"`
	// 
	Var11 int32 `json:"11"`
}

type _ApiTelemetryReportGet200ResponseReportCrushBucketTypes ApiTelemetryReportGet200ResponseReportCrushBucketTypes

// NewApiTelemetryReportGet200ResponseReportCrushBucketTypes instantiates a new ApiTelemetryReportGet200ResponseReportCrushBucketTypes object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiTelemetryReportGet200ResponseReportCrushBucketTypes(var1 int32, var11 int32) *ApiTelemetryReportGet200ResponseReportCrushBucketTypes {
	this := ApiTelemetryReportGet200ResponseReportCrushBucketTypes{}
	this.Var1 = var1
	this.Var11 = var11
	return &this
}

// NewApiTelemetryReportGet200ResponseReportCrushBucketTypesWithDefaults instantiates a new ApiTelemetryReportGet200ResponseReportCrushBucketTypes object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiTelemetryReportGet200ResponseReportCrushBucketTypesWithDefaults() *ApiTelemetryReportGet200ResponseReportCrushBucketTypes {
	this := ApiTelemetryReportGet200ResponseReportCrushBucketTypes{}
	return &this
}

// GetVar1 returns the Var1 field value
func (o *ApiTelemetryReportGet200ResponseReportCrushBucketTypes) GetVar1() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Var1
}

// GetVar1Ok returns a tuple with the Var1 field value
// and a boolean to check if the value has been set.
func (o *ApiTelemetryReportGet200ResponseReportCrushBucketTypes) GetVar1Ok() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Var1, true
}

// SetVar1 sets field value
func (o *ApiTelemetryReportGet200ResponseReportCrushBucketTypes) SetVar1(v int32) {
	o.Var1 = v
}

// GetVar11 returns the Var11 field value
func (o *ApiTelemetryReportGet200ResponseReportCrushBucketTypes) GetVar11() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Var11
}

// GetVar11Ok returns a tuple with the Var11 field value
// and a boolean to check if the value has been set.
func (o *ApiTelemetryReportGet200ResponseReportCrushBucketTypes) GetVar11Ok() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Var11, true
}

// SetVar11 sets field value
func (o *ApiTelemetryReportGet200ResponseReportCrushBucketTypes) SetVar11(v int32) {
	o.Var11 = v
}

func (o ApiTelemetryReportGet200ResponseReportCrushBucketTypes) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApiTelemetryReportGet200ResponseReportCrushBucketTypes) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["1"] = o.Var1
	toSerialize["11"] = o.Var11
	return toSerialize, nil
}

func (o *ApiTelemetryReportGet200ResponseReportCrushBucketTypes) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"1",
		"11",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varApiTelemetryReportGet200ResponseReportCrushBucketTypes := _ApiTelemetryReportGet200ResponseReportCrushBucketTypes{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varApiTelemetryReportGet200ResponseReportCrushBucketTypes)

	if err != nil {
		return err
	}

	*o = ApiTelemetryReportGet200ResponseReportCrushBucketTypes(varApiTelemetryReportGet200ResponseReportCrushBucketTypes)

	return err
}

type NullableApiTelemetryReportGet200ResponseReportCrushBucketTypes struct {
	value *ApiTelemetryReportGet200ResponseReportCrushBucketTypes
	isSet bool
}

func (v NullableApiTelemetryReportGet200ResponseReportCrushBucketTypes) Get() *ApiTelemetryReportGet200ResponseReportCrushBucketTypes {
	return v.value
}

func (v *NullableApiTelemetryReportGet200ResponseReportCrushBucketTypes) Set(val *ApiTelemetryReportGet200ResponseReportCrushBucketTypes) {
	v.value = val
	v.isSet = true
}

func (v NullableApiTelemetryReportGet200ResponseReportCrushBucketTypes) IsSet() bool {
	return v.isSet
}

func (v *NullableApiTelemetryReportGet200ResponseReportCrushBucketTypes) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiTelemetryReportGet200ResponseReportCrushBucketTypes(val *ApiTelemetryReportGet200ResponseReportCrushBucketTypes) *NullableApiTelemetryReportGet200ResponseReportCrushBucketTypes {
	return &NullableApiTelemetryReportGet200ResponseReportCrushBucketTypes{value: val, isSet: true}
}

func (v NullableApiTelemetryReportGet200ResponseReportCrushBucketTypes) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiTelemetryReportGet200ResponseReportCrushBucketTypes) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


