/*
Ceph REST API

Testing NVMeOFSubsystemNamespaceAPIService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package ceph

import (
	"context"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
	"testing"
	openapiclient "github.com/boyvinall/go-ceph"
)

func Test_ceph_NVMeOFSubsystemNamespaceAPIService(t *testing.T) {

	configuration := openapiclient.NewConfiguration()
	apiClient := openapiclient.NewAPIClient(configuration)

	t.Run("Test NVMeOFSubsystemNamespaceAPIService ApiNvmeofSubsystemNqnNamespaceGet", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var nqn string

		httpRes, err := apiClient.NVMeOFSubsystemNamespaceAPI.ApiNvmeofSubsystemNqnNamespaceGet(context.Background(), nqn).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test NVMeOFSubsystemNamespaceAPIService ApiNvmeofSubsystemNqnNamespaceNsidDelete", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var nqn string
		var nsid string

		httpRes, err := apiClient.NVMeOFSubsystemNamespaceAPI.ApiNvmeofSubsystemNqnNamespaceNsidDelete(context.Background(), nqn, nsid).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test NVMeOFSubsystemNamespaceAPIService ApiNvmeofSubsystemNqnNamespaceNsidGet", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var nqn string
		var nsid string

		httpRes, err := apiClient.NVMeOFSubsystemNamespaceAPI.ApiNvmeofSubsystemNqnNamespaceNsidGet(context.Background(), nqn, nsid).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test NVMeOFSubsystemNamespaceAPIService ApiNvmeofSubsystemNqnNamespaceNsidIoStatsGet", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var nqn string
		var nsid string

		httpRes, err := apiClient.NVMeOFSubsystemNamespaceAPI.ApiNvmeofSubsystemNqnNamespaceNsidIoStatsGet(context.Background(), nqn, nsid).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test NVMeOFSubsystemNamespaceAPIService ApiNvmeofSubsystemNqnNamespaceNsidPatch", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var nqn string
		var nsid string

		httpRes, err := apiClient.NVMeOFSubsystemNamespaceAPI.ApiNvmeofSubsystemNqnNamespaceNsidPatch(context.Background(), nqn, nsid).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test NVMeOFSubsystemNamespaceAPIService ApiNvmeofSubsystemNqnNamespacePost", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var nqn string

		httpRes, err := apiClient.NVMeOFSubsystemNamespaceAPI.ApiNvmeofSubsystemNqnNamespacePost(context.Background(), nqn).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}
