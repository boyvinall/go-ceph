/*
Ceph REST API

Testing CephFSSubvolumeAPIService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package ceph

import (
	"context"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
	"testing"
	openapiclient "github.com/boyvinall/go-ceph/api"
)

func Test_ceph_CephFSSubvolumeAPIService(t *testing.T) {

	configuration := openapiclient.NewConfiguration()
	apiClient := openapiclient.NewAPIClient(configuration)

	t.Run("Test CephFSSubvolumeAPIService ApiCephfsSubvolumePost", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		httpRes, err := apiClient.CephFSSubvolumeAPI.ApiCephfsSubvolumePost(context.Background()).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test CephFSSubvolumeAPIService ApiCephfsSubvolumeVolNameDelete", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var volName string

		httpRes, err := apiClient.CephFSSubvolumeAPI.ApiCephfsSubvolumeVolNameDelete(context.Background(), volName).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test CephFSSubvolumeAPIService ApiCephfsSubvolumeVolNameExistsGet", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var volName string

		httpRes, err := apiClient.CephFSSubvolumeAPI.ApiCephfsSubvolumeVolNameExistsGet(context.Background(), volName).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test CephFSSubvolumeAPIService ApiCephfsSubvolumeVolNameGet", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var volName string

		httpRes, err := apiClient.CephFSSubvolumeAPI.ApiCephfsSubvolumeVolNameGet(context.Background(), volName).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test CephFSSubvolumeAPIService ApiCephfsSubvolumeVolNameInfoGet", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var volName string

		httpRes, err := apiClient.CephFSSubvolumeAPI.ApiCephfsSubvolumeVolNameInfoGet(context.Background(), volName).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test CephFSSubvolumeAPIService ApiCephfsSubvolumeVolNamePut", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var volName string

		httpRes, err := apiClient.CephFSSubvolumeAPI.ApiCephfsSubvolumeVolNamePut(context.Background(), volName).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}
