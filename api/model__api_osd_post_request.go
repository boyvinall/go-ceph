/*
Ceph REST API

This is the official Ceph REST API

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ceph

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ApiOsdPostRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApiOsdPostRequest{}

// ApiOsdPostRequest struct for ApiOsdPostRequest
type ApiOsdPostRequest struct {
	Data string `json:"data"`
	Method string `json:"method"`
	TrackingId string `json:"tracking_id"`
}

type _ApiOsdPostRequest ApiOsdPostRequest

// NewApiOsdPostRequest instantiates a new ApiOsdPostRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiOsdPostRequest(data string, method string, trackingId string) *ApiOsdPostRequest {
	this := ApiOsdPostRequest{}
	this.Data = data
	this.Method = method
	this.TrackingId = trackingId
	return &this
}

// NewApiOsdPostRequestWithDefaults instantiates a new ApiOsdPostRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiOsdPostRequestWithDefaults() *ApiOsdPostRequest {
	this := ApiOsdPostRequest{}
	return &this
}

// GetData returns the Data field value
func (o *ApiOsdPostRequest) GetData() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Data
}

// GetDataOk returns a tuple with the Data field value
// and a boolean to check if the value has been set.
func (o *ApiOsdPostRequest) GetDataOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Data, true
}

// SetData sets field value
func (o *ApiOsdPostRequest) SetData(v string) {
	o.Data = v
}

// GetMethod returns the Method field value
func (o *ApiOsdPostRequest) GetMethod() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Method
}

// GetMethodOk returns a tuple with the Method field value
// and a boolean to check if the value has been set.
func (o *ApiOsdPostRequest) GetMethodOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Method, true
}

// SetMethod sets field value
func (o *ApiOsdPostRequest) SetMethod(v string) {
	o.Method = v
}

// GetTrackingId returns the TrackingId field value
func (o *ApiOsdPostRequest) GetTrackingId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TrackingId
}

// GetTrackingIdOk returns a tuple with the TrackingId field value
// and a boolean to check if the value has been set.
func (o *ApiOsdPostRequest) GetTrackingIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TrackingId, true
}

// SetTrackingId sets field value
func (o *ApiOsdPostRequest) SetTrackingId(v string) {
	o.TrackingId = v
}

func (o ApiOsdPostRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApiOsdPostRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["data"] = o.Data
	toSerialize["method"] = o.Method
	toSerialize["tracking_id"] = o.TrackingId
	return toSerialize, nil
}

func (o *ApiOsdPostRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"data",
		"method",
		"tracking_id",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varApiOsdPostRequest := _ApiOsdPostRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varApiOsdPostRequest)

	if err != nil {
		return err
	}

	*o = ApiOsdPostRequest(varApiOsdPostRequest)

	return err
}

type NullableApiOsdPostRequest struct {
	value *ApiOsdPostRequest
	isSet bool
}

func (v NullableApiOsdPostRequest) Get() *ApiOsdPostRequest {
	return v.value
}

func (v *NullableApiOsdPostRequest) Set(val *ApiOsdPostRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableApiOsdPostRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableApiOsdPostRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiOsdPostRequest(val *ApiOsdPostRequest) *NullableApiOsdPostRequest {
	return &NullableApiOsdPostRequest{value: val, isSet: true}
}

func (v NullableApiOsdPostRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiOsdPostRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


