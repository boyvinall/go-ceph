/*
Ceph REST API

This is the official Ceph REST API

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ceph

import (
	"encoding/json"
)

// checks if the ApiNvmeofSubsystemNqnNamespaceNsidPatchRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApiNvmeofSubsystemNqnNamespaceNsidPatchRequest{}

// ApiNvmeofSubsystemNqnNamespaceNsidPatchRequest struct for ApiNvmeofSubsystemNqnNamespaceNsidPatchRequest
type ApiNvmeofSubsystemNqnNamespaceNsidPatchRequest struct {
	// NVMeoF gateway group
	GwGroup *string `json:"gw_group,omitempty"`
	// Load balancing group
	LoadBalancingGroup *int32 `json:"load_balancing_group,omitempty"`
	// Read MB/s
	RMbytesPerSecond *int32 `json:"r_mbytes_per_second,omitempty"`
	// RBD image size
	RbdImageSize *int32 `json:"rbd_image_size,omitempty"`
	// Read/Write IOPS
	RwIosPerSecond *int32 `json:"rw_ios_per_second,omitempty"`
	// Read/Write MB/s
	RwMbytesPerSecond *int32 `json:"rw_mbytes_per_second,omitempty"`
	// Write MB/s
	WMbytesPerSecond *int32 `json:"w_mbytes_per_second,omitempty"`
}

// NewApiNvmeofSubsystemNqnNamespaceNsidPatchRequest instantiates a new ApiNvmeofSubsystemNqnNamespaceNsidPatchRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiNvmeofSubsystemNqnNamespaceNsidPatchRequest() *ApiNvmeofSubsystemNqnNamespaceNsidPatchRequest {
	this := ApiNvmeofSubsystemNqnNamespaceNsidPatchRequest{}
	return &this
}

// NewApiNvmeofSubsystemNqnNamespaceNsidPatchRequestWithDefaults instantiates a new ApiNvmeofSubsystemNqnNamespaceNsidPatchRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiNvmeofSubsystemNqnNamespaceNsidPatchRequestWithDefaults() *ApiNvmeofSubsystemNqnNamespaceNsidPatchRequest {
	this := ApiNvmeofSubsystemNqnNamespaceNsidPatchRequest{}
	return &this
}

// GetGwGroup returns the GwGroup field value if set, zero value otherwise.
func (o *ApiNvmeofSubsystemNqnNamespaceNsidPatchRequest) GetGwGroup() string {
	if o == nil || IsNil(o.GwGroup) {
		var ret string
		return ret
	}
	return *o.GwGroup
}

// GetGwGroupOk returns a tuple with the GwGroup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiNvmeofSubsystemNqnNamespaceNsidPatchRequest) GetGwGroupOk() (*string, bool) {
	if o == nil || IsNil(o.GwGroup) {
		return nil, false
	}
	return o.GwGroup, true
}

// HasGwGroup returns a boolean if a field has been set.
func (o *ApiNvmeofSubsystemNqnNamespaceNsidPatchRequest) HasGwGroup() bool {
	if o != nil && !IsNil(o.GwGroup) {
		return true
	}

	return false
}

// SetGwGroup gets a reference to the given string and assigns it to the GwGroup field.
func (o *ApiNvmeofSubsystemNqnNamespaceNsidPatchRequest) SetGwGroup(v string) {
	o.GwGroup = &v
}

// GetLoadBalancingGroup returns the LoadBalancingGroup field value if set, zero value otherwise.
func (o *ApiNvmeofSubsystemNqnNamespaceNsidPatchRequest) GetLoadBalancingGroup() int32 {
	if o == nil || IsNil(o.LoadBalancingGroup) {
		var ret int32
		return ret
	}
	return *o.LoadBalancingGroup
}

// GetLoadBalancingGroupOk returns a tuple with the LoadBalancingGroup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiNvmeofSubsystemNqnNamespaceNsidPatchRequest) GetLoadBalancingGroupOk() (*int32, bool) {
	if o == nil || IsNil(o.LoadBalancingGroup) {
		return nil, false
	}
	return o.LoadBalancingGroup, true
}

// HasLoadBalancingGroup returns a boolean if a field has been set.
func (o *ApiNvmeofSubsystemNqnNamespaceNsidPatchRequest) HasLoadBalancingGroup() bool {
	if o != nil && !IsNil(o.LoadBalancingGroup) {
		return true
	}

	return false
}

// SetLoadBalancingGroup gets a reference to the given int32 and assigns it to the LoadBalancingGroup field.
func (o *ApiNvmeofSubsystemNqnNamespaceNsidPatchRequest) SetLoadBalancingGroup(v int32) {
	o.LoadBalancingGroup = &v
}

// GetRMbytesPerSecond returns the RMbytesPerSecond field value if set, zero value otherwise.
func (o *ApiNvmeofSubsystemNqnNamespaceNsidPatchRequest) GetRMbytesPerSecond() int32 {
	if o == nil || IsNil(o.RMbytesPerSecond) {
		var ret int32
		return ret
	}
	return *o.RMbytesPerSecond
}

// GetRMbytesPerSecondOk returns a tuple with the RMbytesPerSecond field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiNvmeofSubsystemNqnNamespaceNsidPatchRequest) GetRMbytesPerSecondOk() (*int32, bool) {
	if o == nil || IsNil(o.RMbytesPerSecond) {
		return nil, false
	}
	return o.RMbytesPerSecond, true
}

// HasRMbytesPerSecond returns a boolean if a field has been set.
func (o *ApiNvmeofSubsystemNqnNamespaceNsidPatchRequest) HasRMbytesPerSecond() bool {
	if o != nil && !IsNil(o.RMbytesPerSecond) {
		return true
	}

	return false
}

// SetRMbytesPerSecond gets a reference to the given int32 and assigns it to the RMbytesPerSecond field.
func (o *ApiNvmeofSubsystemNqnNamespaceNsidPatchRequest) SetRMbytesPerSecond(v int32) {
	o.RMbytesPerSecond = &v
}

// GetRbdImageSize returns the RbdImageSize field value if set, zero value otherwise.
func (o *ApiNvmeofSubsystemNqnNamespaceNsidPatchRequest) GetRbdImageSize() int32 {
	if o == nil || IsNil(o.RbdImageSize) {
		var ret int32
		return ret
	}
	return *o.RbdImageSize
}

// GetRbdImageSizeOk returns a tuple with the RbdImageSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiNvmeofSubsystemNqnNamespaceNsidPatchRequest) GetRbdImageSizeOk() (*int32, bool) {
	if o == nil || IsNil(o.RbdImageSize) {
		return nil, false
	}
	return o.RbdImageSize, true
}

// HasRbdImageSize returns a boolean if a field has been set.
func (o *ApiNvmeofSubsystemNqnNamespaceNsidPatchRequest) HasRbdImageSize() bool {
	if o != nil && !IsNil(o.RbdImageSize) {
		return true
	}

	return false
}

// SetRbdImageSize gets a reference to the given int32 and assigns it to the RbdImageSize field.
func (o *ApiNvmeofSubsystemNqnNamespaceNsidPatchRequest) SetRbdImageSize(v int32) {
	o.RbdImageSize = &v
}

// GetRwIosPerSecond returns the RwIosPerSecond field value if set, zero value otherwise.
func (o *ApiNvmeofSubsystemNqnNamespaceNsidPatchRequest) GetRwIosPerSecond() int32 {
	if o == nil || IsNil(o.RwIosPerSecond) {
		var ret int32
		return ret
	}
	return *o.RwIosPerSecond
}

// GetRwIosPerSecondOk returns a tuple with the RwIosPerSecond field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiNvmeofSubsystemNqnNamespaceNsidPatchRequest) GetRwIosPerSecondOk() (*int32, bool) {
	if o == nil || IsNil(o.RwIosPerSecond) {
		return nil, false
	}
	return o.RwIosPerSecond, true
}

// HasRwIosPerSecond returns a boolean if a field has been set.
func (o *ApiNvmeofSubsystemNqnNamespaceNsidPatchRequest) HasRwIosPerSecond() bool {
	if o != nil && !IsNil(o.RwIosPerSecond) {
		return true
	}

	return false
}

// SetRwIosPerSecond gets a reference to the given int32 and assigns it to the RwIosPerSecond field.
func (o *ApiNvmeofSubsystemNqnNamespaceNsidPatchRequest) SetRwIosPerSecond(v int32) {
	o.RwIosPerSecond = &v
}

// GetRwMbytesPerSecond returns the RwMbytesPerSecond field value if set, zero value otherwise.
func (o *ApiNvmeofSubsystemNqnNamespaceNsidPatchRequest) GetRwMbytesPerSecond() int32 {
	if o == nil || IsNil(o.RwMbytesPerSecond) {
		var ret int32
		return ret
	}
	return *o.RwMbytesPerSecond
}

// GetRwMbytesPerSecondOk returns a tuple with the RwMbytesPerSecond field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiNvmeofSubsystemNqnNamespaceNsidPatchRequest) GetRwMbytesPerSecondOk() (*int32, bool) {
	if o == nil || IsNil(o.RwMbytesPerSecond) {
		return nil, false
	}
	return o.RwMbytesPerSecond, true
}

// HasRwMbytesPerSecond returns a boolean if a field has been set.
func (o *ApiNvmeofSubsystemNqnNamespaceNsidPatchRequest) HasRwMbytesPerSecond() bool {
	if o != nil && !IsNil(o.RwMbytesPerSecond) {
		return true
	}

	return false
}

// SetRwMbytesPerSecond gets a reference to the given int32 and assigns it to the RwMbytesPerSecond field.
func (o *ApiNvmeofSubsystemNqnNamespaceNsidPatchRequest) SetRwMbytesPerSecond(v int32) {
	o.RwMbytesPerSecond = &v
}

// GetWMbytesPerSecond returns the WMbytesPerSecond field value if set, zero value otherwise.
func (o *ApiNvmeofSubsystemNqnNamespaceNsidPatchRequest) GetWMbytesPerSecond() int32 {
	if o == nil || IsNil(o.WMbytesPerSecond) {
		var ret int32
		return ret
	}
	return *o.WMbytesPerSecond
}

// GetWMbytesPerSecondOk returns a tuple with the WMbytesPerSecond field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiNvmeofSubsystemNqnNamespaceNsidPatchRequest) GetWMbytesPerSecondOk() (*int32, bool) {
	if o == nil || IsNil(o.WMbytesPerSecond) {
		return nil, false
	}
	return o.WMbytesPerSecond, true
}

// HasWMbytesPerSecond returns a boolean if a field has been set.
func (o *ApiNvmeofSubsystemNqnNamespaceNsidPatchRequest) HasWMbytesPerSecond() bool {
	if o != nil && !IsNil(o.WMbytesPerSecond) {
		return true
	}

	return false
}

// SetWMbytesPerSecond gets a reference to the given int32 and assigns it to the WMbytesPerSecond field.
func (o *ApiNvmeofSubsystemNqnNamespaceNsidPatchRequest) SetWMbytesPerSecond(v int32) {
	o.WMbytesPerSecond = &v
}

func (o ApiNvmeofSubsystemNqnNamespaceNsidPatchRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApiNvmeofSubsystemNqnNamespaceNsidPatchRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.GwGroup) {
		toSerialize["gw_group"] = o.GwGroup
	}
	if !IsNil(o.LoadBalancingGroup) {
		toSerialize["load_balancing_group"] = o.LoadBalancingGroup
	}
	if !IsNil(o.RMbytesPerSecond) {
		toSerialize["r_mbytes_per_second"] = o.RMbytesPerSecond
	}
	if !IsNil(o.RbdImageSize) {
		toSerialize["rbd_image_size"] = o.RbdImageSize
	}
	if !IsNil(o.RwIosPerSecond) {
		toSerialize["rw_ios_per_second"] = o.RwIosPerSecond
	}
	if !IsNil(o.RwMbytesPerSecond) {
		toSerialize["rw_mbytes_per_second"] = o.RwMbytesPerSecond
	}
	if !IsNil(o.WMbytesPerSecond) {
		toSerialize["w_mbytes_per_second"] = o.WMbytesPerSecond
	}
	return toSerialize, nil
}

type NullableApiNvmeofSubsystemNqnNamespaceNsidPatchRequest struct {
	value *ApiNvmeofSubsystemNqnNamespaceNsidPatchRequest
	isSet bool
}

func (v NullableApiNvmeofSubsystemNqnNamespaceNsidPatchRequest) Get() *ApiNvmeofSubsystemNqnNamespaceNsidPatchRequest {
	return v.value
}

func (v *NullableApiNvmeofSubsystemNqnNamespaceNsidPatchRequest) Set(val *ApiNvmeofSubsystemNqnNamespaceNsidPatchRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableApiNvmeofSubsystemNqnNamespaceNsidPatchRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableApiNvmeofSubsystemNqnNamespaceNsidPatchRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiNvmeofSubsystemNqnNamespaceNsidPatchRequest(val *ApiNvmeofSubsystemNqnNamespaceNsidPatchRequest) *NullableApiNvmeofSubsystemNqnNamespaceNsidPatchRequest {
	return &NullableApiNvmeofSubsystemNqnNamespaceNsidPatchRequest{value: val, isSet: true}
}

func (v NullableApiNvmeofSubsystemNqnNamespaceNsidPatchRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiNvmeofSubsystemNqnNamespaceNsidPatchRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


