/*
Ceph REST API

This is the official Ceph REST API

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ceph

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ApiRgwUserPostRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApiRgwUserPostRequest{}

// ApiRgwUserPostRequest struct for ApiRgwUserPostRequest
type ApiRgwUserPostRequest struct {
	AccessKey *string `json:"access_key,omitempty"`
	DaemonName *string `json:"daemon_name,omitempty"`
	DisplayName string `json:"display_name"`
	Email *string `json:"email,omitempty"`
	GenerateKey *string `json:"generate_key,omitempty"`
	MaxBuckets *string `json:"max_buckets,omitempty"`
	SecretKey *string `json:"secret_key,omitempty"`
	Suspended *string `json:"suspended,omitempty"`
	System *string `json:"system,omitempty"`
	Uid string `json:"uid"`
}

type _ApiRgwUserPostRequest ApiRgwUserPostRequest

// NewApiRgwUserPostRequest instantiates a new ApiRgwUserPostRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiRgwUserPostRequest(displayName string, uid string) *ApiRgwUserPostRequest {
	this := ApiRgwUserPostRequest{}
	this.DisplayName = displayName
	this.Uid = uid
	return &this
}

// NewApiRgwUserPostRequestWithDefaults instantiates a new ApiRgwUserPostRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiRgwUserPostRequestWithDefaults() *ApiRgwUserPostRequest {
	this := ApiRgwUserPostRequest{}
	return &this
}

// GetAccessKey returns the AccessKey field value if set, zero value otherwise.
func (o *ApiRgwUserPostRequest) GetAccessKey() string {
	if o == nil || IsNil(o.AccessKey) {
		var ret string
		return ret
	}
	return *o.AccessKey
}

// GetAccessKeyOk returns a tuple with the AccessKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiRgwUserPostRequest) GetAccessKeyOk() (*string, bool) {
	if o == nil || IsNil(o.AccessKey) {
		return nil, false
	}
	return o.AccessKey, true
}

// HasAccessKey returns a boolean if a field has been set.
func (o *ApiRgwUserPostRequest) HasAccessKey() bool {
	if o != nil && !IsNil(o.AccessKey) {
		return true
	}

	return false
}

// SetAccessKey gets a reference to the given string and assigns it to the AccessKey field.
func (o *ApiRgwUserPostRequest) SetAccessKey(v string) {
	o.AccessKey = &v
}

// GetDaemonName returns the DaemonName field value if set, zero value otherwise.
func (o *ApiRgwUserPostRequest) GetDaemonName() string {
	if o == nil || IsNil(o.DaemonName) {
		var ret string
		return ret
	}
	return *o.DaemonName
}

// GetDaemonNameOk returns a tuple with the DaemonName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiRgwUserPostRequest) GetDaemonNameOk() (*string, bool) {
	if o == nil || IsNil(o.DaemonName) {
		return nil, false
	}
	return o.DaemonName, true
}

// HasDaemonName returns a boolean if a field has been set.
func (o *ApiRgwUserPostRequest) HasDaemonName() bool {
	if o != nil && !IsNil(o.DaemonName) {
		return true
	}

	return false
}

// SetDaemonName gets a reference to the given string and assigns it to the DaemonName field.
func (o *ApiRgwUserPostRequest) SetDaemonName(v string) {
	o.DaemonName = &v
}

// GetDisplayName returns the DisplayName field value
func (o *ApiRgwUserPostRequest) GetDisplayName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field value
// and a boolean to check if the value has been set.
func (o *ApiRgwUserPostRequest) GetDisplayNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DisplayName, true
}

// SetDisplayName sets field value
func (o *ApiRgwUserPostRequest) SetDisplayName(v string) {
	o.DisplayName = v
}

// GetEmail returns the Email field value if set, zero value otherwise.
func (o *ApiRgwUserPostRequest) GetEmail() string {
	if o == nil || IsNil(o.Email) {
		var ret string
		return ret
	}
	return *o.Email
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiRgwUserPostRequest) GetEmailOk() (*string, bool) {
	if o == nil || IsNil(o.Email) {
		return nil, false
	}
	return o.Email, true
}

// HasEmail returns a boolean if a field has been set.
func (o *ApiRgwUserPostRequest) HasEmail() bool {
	if o != nil && !IsNil(o.Email) {
		return true
	}

	return false
}

// SetEmail gets a reference to the given string and assigns it to the Email field.
func (o *ApiRgwUserPostRequest) SetEmail(v string) {
	o.Email = &v
}

// GetGenerateKey returns the GenerateKey field value if set, zero value otherwise.
func (o *ApiRgwUserPostRequest) GetGenerateKey() string {
	if o == nil || IsNil(o.GenerateKey) {
		var ret string
		return ret
	}
	return *o.GenerateKey
}

// GetGenerateKeyOk returns a tuple with the GenerateKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiRgwUserPostRequest) GetGenerateKeyOk() (*string, bool) {
	if o == nil || IsNil(o.GenerateKey) {
		return nil, false
	}
	return o.GenerateKey, true
}

// HasGenerateKey returns a boolean if a field has been set.
func (o *ApiRgwUserPostRequest) HasGenerateKey() bool {
	if o != nil && !IsNil(o.GenerateKey) {
		return true
	}

	return false
}

// SetGenerateKey gets a reference to the given string and assigns it to the GenerateKey field.
func (o *ApiRgwUserPostRequest) SetGenerateKey(v string) {
	o.GenerateKey = &v
}

// GetMaxBuckets returns the MaxBuckets field value if set, zero value otherwise.
func (o *ApiRgwUserPostRequest) GetMaxBuckets() string {
	if o == nil || IsNil(o.MaxBuckets) {
		var ret string
		return ret
	}
	return *o.MaxBuckets
}

// GetMaxBucketsOk returns a tuple with the MaxBuckets field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiRgwUserPostRequest) GetMaxBucketsOk() (*string, bool) {
	if o == nil || IsNil(o.MaxBuckets) {
		return nil, false
	}
	return o.MaxBuckets, true
}

// HasMaxBuckets returns a boolean if a field has been set.
func (o *ApiRgwUserPostRequest) HasMaxBuckets() bool {
	if o != nil && !IsNil(o.MaxBuckets) {
		return true
	}

	return false
}

// SetMaxBuckets gets a reference to the given string and assigns it to the MaxBuckets field.
func (o *ApiRgwUserPostRequest) SetMaxBuckets(v string) {
	o.MaxBuckets = &v
}

// GetSecretKey returns the SecretKey field value if set, zero value otherwise.
func (o *ApiRgwUserPostRequest) GetSecretKey() string {
	if o == nil || IsNil(o.SecretKey) {
		var ret string
		return ret
	}
	return *o.SecretKey
}

// GetSecretKeyOk returns a tuple with the SecretKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiRgwUserPostRequest) GetSecretKeyOk() (*string, bool) {
	if o == nil || IsNil(o.SecretKey) {
		return nil, false
	}
	return o.SecretKey, true
}

// HasSecretKey returns a boolean if a field has been set.
func (o *ApiRgwUserPostRequest) HasSecretKey() bool {
	if o != nil && !IsNil(o.SecretKey) {
		return true
	}

	return false
}

// SetSecretKey gets a reference to the given string and assigns it to the SecretKey field.
func (o *ApiRgwUserPostRequest) SetSecretKey(v string) {
	o.SecretKey = &v
}

// GetSuspended returns the Suspended field value if set, zero value otherwise.
func (o *ApiRgwUserPostRequest) GetSuspended() string {
	if o == nil || IsNil(o.Suspended) {
		var ret string
		return ret
	}
	return *o.Suspended
}

// GetSuspendedOk returns a tuple with the Suspended field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiRgwUserPostRequest) GetSuspendedOk() (*string, bool) {
	if o == nil || IsNil(o.Suspended) {
		return nil, false
	}
	return o.Suspended, true
}

// HasSuspended returns a boolean if a field has been set.
func (o *ApiRgwUserPostRequest) HasSuspended() bool {
	if o != nil && !IsNil(o.Suspended) {
		return true
	}

	return false
}

// SetSuspended gets a reference to the given string and assigns it to the Suspended field.
func (o *ApiRgwUserPostRequest) SetSuspended(v string) {
	o.Suspended = &v
}

// GetSystem returns the System field value if set, zero value otherwise.
func (o *ApiRgwUserPostRequest) GetSystem() string {
	if o == nil || IsNil(o.System) {
		var ret string
		return ret
	}
	return *o.System
}

// GetSystemOk returns a tuple with the System field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiRgwUserPostRequest) GetSystemOk() (*string, bool) {
	if o == nil || IsNil(o.System) {
		return nil, false
	}
	return o.System, true
}

// HasSystem returns a boolean if a field has been set.
func (o *ApiRgwUserPostRequest) HasSystem() bool {
	if o != nil && !IsNil(o.System) {
		return true
	}

	return false
}

// SetSystem gets a reference to the given string and assigns it to the System field.
func (o *ApiRgwUserPostRequest) SetSystem(v string) {
	o.System = &v
}

// GetUid returns the Uid field value
func (o *ApiRgwUserPostRequest) GetUid() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Uid
}

// GetUidOk returns a tuple with the Uid field value
// and a boolean to check if the value has been set.
func (o *ApiRgwUserPostRequest) GetUidOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Uid, true
}

// SetUid sets field value
func (o *ApiRgwUserPostRequest) SetUid(v string) {
	o.Uid = v
}

func (o ApiRgwUserPostRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApiRgwUserPostRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AccessKey) {
		toSerialize["access_key"] = o.AccessKey
	}
	if !IsNil(o.DaemonName) {
		toSerialize["daemon_name"] = o.DaemonName
	}
	toSerialize["display_name"] = o.DisplayName
	if !IsNil(o.Email) {
		toSerialize["email"] = o.Email
	}
	if !IsNil(o.GenerateKey) {
		toSerialize["generate_key"] = o.GenerateKey
	}
	if !IsNil(o.MaxBuckets) {
		toSerialize["max_buckets"] = o.MaxBuckets
	}
	if !IsNil(o.SecretKey) {
		toSerialize["secret_key"] = o.SecretKey
	}
	if !IsNil(o.Suspended) {
		toSerialize["suspended"] = o.Suspended
	}
	if !IsNil(o.System) {
		toSerialize["system"] = o.System
	}
	toSerialize["uid"] = o.Uid
	return toSerialize, nil
}

func (o *ApiRgwUserPostRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"display_name",
		"uid",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varApiRgwUserPostRequest := _ApiRgwUserPostRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varApiRgwUserPostRequest)

	if err != nil {
		return err
	}

	*o = ApiRgwUserPostRequest(varApiRgwUserPostRequest)

	return err
}

type NullableApiRgwUserPostRequest struct {
	value *ApiRgwUserPostRequest
	isSet bool
}

func (v NullableApiRgwUserPostRequest) Get() *ApiRgwUserPostRequest {
	return v.value
}

func (v *NullableApiRgwUserPostRequest) Set(val *ApiRgwUserPostRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableApiRgwUserPostRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableApiRgwUserPostRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiRgwUserPostRequest(val *ApiRgwUserPostRequest) *NullableApiRgwUserPostRequest {
	return &NullableApiRgwUserPostRequest{value: val, isSet: true}
}

func (v NullableApiRgwUserPostRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiRgwUserPostRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


