/*
Ceph REST API

This is the official Ceph REST API

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ceph

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ApiTelemetryReportGet200ResponseReportMetadata type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApiTelemetryReportGet200ResponseReportMetadata{}

// ApiTelemetryReportGet200ResponseReportMetadata 
type ApiTelemetryReportGet200ResponseReportMetadata struct {
	Mon ApiTelemetryReportGet200ResponseReportMetadataMon `json:"mon"`
	Osd ApiTelemetryReportGet200ResponseReportMetadataOsd `json:"osd"`
}

type _ApiTelemetryReportGet200ResponseReportMetadata ApiTelemetryReportGet200ResponseReportMetadata

// NewApiTelemetryReportGet200ResponseReportMetadata instantiates a new ApiTelemetryReportGet200ResponseReportMetadata object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiTelemetryReportGet200ResponseReportMetadata(mon ApiTelemetryReportGet200ResponseReportMetadataMon, osd ApiTelemetryReportGet200ResponseReportMetadataOsd) *ApiTelemetryReportGet200ResponseReportMetadata {
	this := ApiTelemetryReportGet200ResponseReportMetadata{}
	this.Mon = mon
	this.Osd = osd
	return &this
}

// NewApiTelemetryReportGet200ResponseReportMetadataWithDefaults instantiates a new ApiTelemetryReportGet200ResponseReportMetadata object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiTelemetryReportGet200ResponseReportMetadataWithDefaults() *ApiTelemetryReportGet200ResponseReportMetadata {
	this := ApiTelemetryReportGet200ResponseReportMetadata{}
	return &this
}

// GetMon returns the Mon field value
func (o *ApiTelemetryReportGet200ResponseReportMetadata) GetMon() ApiTelemetryReportGet200ResponseReportMetadataMon {
	if o == nil {
		var ret ApiTelemetryReportGet200ResponseReportMetadataMon
		return ret
	}

	return o.Mon
}

// GetMonOk returns a tuple with the Mon field value
// and a boolean to check if the value has been set.
func (o *ApiTelemetryReportGet200ResponseReportMetadata) GetMonOk() (*ApiTelemetryReportGet200ResponseReportMetadataMon, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Mon, true
}

// SetMon sets field value
func (o *ApiTelemetryReportGet200ResponseReportMetadata) SetMon(v ApiTelemetryReportGet200ResponseReportMetadataMon) {
	o.Mon = v
}

// GetOsd returns the Osd field value
func (o *ApiTelemetryReportGet200ResponseReportMetadata) GetOsd() ApiTelemetryReportGet200ResponseReportMetadataOsd {
	if o == nil {
		var ret ApiTelemetryReportGet200ResponseReportMetadataOsd
		return ret
	}

	return o.Osd
}

// GetOsdOk returns a tuple with the Osd field value
// and a boolean to check if the value has been set.
func (o *ApiTelemetryReportGet200ResponseReportMetadata) GetOsdOk() (*ApiTelemetryReportGet200ResponseReportMetadataOsd, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Osd, true
}

// SetOsd sets field value
func (o *ApiTelemetryReportGet200ResponseReportMetadata) SetOsd(v ApiTelemetryReportGet200ResponseReportMetadataOsd) {
	o.Osd = v
}

func (o ApiTelemetryReportGet200ResponseReportMetadata) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApiTelemetryReportGet200ResponseReportMetadata) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["mon"] = o.Mon
	toSerialize["osd"] = o.Osd
	return toSerialize, nil
}

func (o *ApiTelemetryReportGet200ResponseReportMetadata) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"mon",
		"osd",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varApiTelemetryReportGet200ResponseReportMetadata := _ApiTelemetryReportGet200ResponseReportMetadata{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varApiTelemetryReportGet200ResponseReportMetadata)

	if err != nil {
		return err
	}

	*o = ApiTelemetryReportGet200ResponseReportMetadata(varApiTelemetryReportGet200ResponseReportMetadata)

	return err
}

type NullableApiTelemetryReportGet200ResponseReportMetadata struct {
	value *ApiTelemetryReportGet200ResponseReportMetadata
	isSet bool
}

func (v NullableApiTelemetryReportGet200ResponseReportMetadata) Get() *ApiTelemetryReportGet200ResponseReportMetadata {
	return v.value
}

func (v *NullableApiTelemetryReportGet200ResponseReportMetadata) Set(val *ApiTelemetryReportGet200ResponseReportMetadata) {
	v.value = val
	v.isSet = true
}

func (v NullableApiTelemetryReportGet200ResponseReportMetadata) IsSet() bool {
	return v.isSet
}

func (v *NullableApiTelemetryReportGet200ResponseReportMetadata) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiTelemetryReportGet200ResponseReportMetadata(val *ApiTelemetryReportGet200ResponseReportMetadata) *NullableApiTelemetryReportGet200ResponseReportMetadata {
	return &NullableApiTelemetryReportGet200ResponseReportMetadata{value: val, isSet: true}
}

func (v NullableApiTelemetryReportGet200ResponseReportMetadata) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiTelemetryReportGet200ResponseReportMetadata) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


