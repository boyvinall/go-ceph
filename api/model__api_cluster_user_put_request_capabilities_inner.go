/*
Ceph REST API

This is the official Ceph REST API

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ceph

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ApiClusterUserPutRequestCapabilitiesInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApiClusterUserPutRequestCapabilitiesInner{}

// ApiClusterUserPutRequestCapabilitiesInner struct for ApiClusterUserPutRequestCapabilitiesInner
type ApiClusterUserPutRequestCapabilitiesInner struct {
	// Capability to edit; eg. allow *
	Cap string `json:"cap"`
	// Entity to edit
	Entity string `json:"entity"`
}

type _ApiClusterUserPutRequestCapabilitiesInner ApiClusterUserPutRequestCapabilitiesInner

// NewApiClusterUserPutRequestCapabilitiesInner instantiates a new ApiClusterUserPutRequestCapabilitiesInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiClusterUserPutRequestCapabilitiesInner(cap string, entity string) *ApiClusterUserPutRequestCapabilitiesInner {
	this := ApiClusterUserPutRequestCapabilitiesInner{}
	this.Cap = cap
	this.Entity = entity
	return &this
}

// NewApiClusterUserPutRequestCapabilitiesInnerWithDefaults instantiates a new ApiClusterUserPutRequestCapabilitiesInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiClusterUserPutRequestCapabilitiesInnerWithDefaults() *ApiClusterUserPutRequestCapabilitiesInner {
	this := ApiClusterUserPutRequestCapabilitiesInner{}
	return &this
}

// GetCap returns the Cap field value
func (o *ApiClusterUserPutRequestCapabilitiesInner) GetCap() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Cap
}

// GetCapOk returns a tuple with the Cap field value
// and a boolean to check if the value has been set.
func (o *ApiClusterUserPutRequestCapabilitiesInner) GetCapOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Cap, true
}

// SetCap sets field value
func (o *ApiClusterUserPutRequestCapabilitiesInner) SetCap(v string) {
	o.Cap = v
}

// GetEntity returns the Entity field value
func (o *ApiClusterUserPutRequestCapabilitiesInner) GetEntity() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Entity
}

// GetEntityOk returns a tuple with the Entity field value
// and a boolean to check if the value has been set.
func (o *ApiClusterUserPutRequestCapabilitiesInner) GetEntityOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Entity, true
}

// SetEntity sets field value
func (o *ApiClusterUserPutRequestCapabilitiesInner) SetEntity(v string) {
	o.Entity = v
}

func (o ApiClusterUserPutRequestCapabilitiesInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApiClusterUserPutRequestCapabilitiesInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["cap"] = o.Cap
	toSerialize["entity"] = o.Entity
	return toSerialize, nil
}

func (o *ApiClusterUserPutRequestCapabilitiesInner) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"cap",
		"entity",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varApiClusterUserPutRequestCapabilitiesInner := _ApiClusterUserPutRequestCapabilitiesInner{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varApiClusterUserPutRequestCapabilitiesInner)

	if err != nil {
		return err
	}

	*o = ApiClusterUserPutRequestCapabilitiesInner(varApiClusterUserPutRequestCapabilitiesInner)

	return err
}

type NullableApiClusterUserPutRequestCapabilitiesInner struct {
	value *ApiClusterUserPutRequestCapabilitiesInner
	isSet bool
}

func (v NullableApiClusterUserPutRequestCapabilitiesInner) Get() *ApiClusterUserPutRequestCapabilitiesInner {
	return v.value
}

func (v *NullableApiClusterUserPutRequestCapabilitiesInner) Set(val *ApiClusterUserPutRequestCapabilitiesInner) {
	v.value = val
	v.isSet = true
}

func (v NullableApiClusterUserPutRequestCapabilitiesInner) IsSet() bool {
	return v.isSet
}

func (v *NullableApiClusterUserPutRequestCapabilitiesInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiClusterUserPutRequestCapabilitiesInner(val *ApiClusterUserPutRequestCapabilitiesInner) *NullableApiClusterUserPutRequestCapabilitiesInner {
	return &NullableApiClusterUserPutRequestCapabilitiesInner{value: val, isSet: true}
}

func (v NullableApiClusterUserPutRequestCapabilitiesInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiClusterUserPutRequestCapabilitiesInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


