/*
Ceph REST API

This is the official Ceph REST API

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ceph

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ApiHealthMinimalGet200ResponseDfStats type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApiHealthMinimalGet200ResponseDfStats{}

// ApiHealthMinimalGet200ResponseDfStats 
type ApiHealthMinimalGet200ResponseDfStats struct {
	// 
	TotalAvailBytes int32 `json:"total_avail_bytes"`
	// 
	TotalBytes int32 `json:"total_bytes"`
	// 
	TotalUsedRawBytes int32 `json:"total_used_raw_bytes"`
}

type _ApiHealthMinimalGet200ResponseDfStats ApiHealthMinimalGet200ResponseDfStats

// NewApiHealthMinimalGet200ResponseDfStats instantiates a new ApiHealthMinimalGet200ResponseDfStats object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiHealthMinimalGet200ResponseDfStats(totalAvailBytes int32, totalBytes int32, totalUsedRawBytes int32) *ApiHealthMinimalGet200ResponseDfStats {
	this := ApiHealthMinimalGet200ResponseDfStats{}
	this.TotalAvailBytes = totalAvailBytes
	this.TotalBytes = totalBytes
	this.TotalUsedRawBytes = totalUsedRawBytes
	return &this
}

// NewApiHealthMinimalGet200ResponseDfStatsWithDefaults instantiates a new ApiHealthMinimalGet200ResponseDfStats object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiHealthMinimalGet200ResponseDfStatsWithDefaults() *ApiHealthMinimalGet200ResponseDfStats {
	this := ApiHealthMinimalGet200ResponseDfStats{}
	return &this
}

// GetTotalAvailBytes returns the TotalAvailBytes field value
func (o *ApiHealthMinimalGet200ResponseDfStats) GetTotalAvailBytes() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.TotalAvailBytes
}

// GetTotalAvailBytesOk returns a tuple with the TotalAvailBytes field value
// and a boolean to check if the value has been set.
func (o *ApiHealthMinimalGet200ResponseDfStats) GetTotalAvailBytesOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TotalAvailBytes, true
}

// SetTotalAvailBytes sets field value
func (o *ApiHealthMinimalGet200ResponseDfStats) SetTotalAvailBytes(v int32) {
	o.TotalAvailBytes = v
}

// GetTotalBytes returns the TotalBytes field value
func (o *ApiHealthMinimalGet200ResponseDfStats) GetTotalBytes() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.TotalBytes
}

// GetTotalBytesOk returns a tuple with the TotalBytes field value
// and a boolean to check if the value has been set.
func (o *ApiHealthMinimalGet200ResponseDfStats) GetTotalBytesOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TotalBytes, true
}

// SetTotalBytes sets field value
func (o *ApiHealthMinimalGet200ResponseDfStats) SetTotalBytes(v int32) {
	o.TotalBytes = v
}

// GetTotalUsedRawBytes returns the TotalUsedRawBytes field value
func (o *ApiHealthMinimalGet200ResponseDfStats) GetTotalUsedRawBytes() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.TotalUsedRawBytes
}

// GetTotalUsedRawBytesOk returns a tuple with the TotalUsedRawBytes field value
// and a boolean to check if the value has been set.
func (o *ApiHealthMinimalGet200ResponseDfStats) GetTotalUsedRawBytesOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TotalUsedRawBytes, true
}

// SetTotalUsedRawBytes sets field value
func (o *ApiHealthMinimalGet200ResponseDfStats) SetTotalUsedRawBytes(v int32) {
	o.TotalUsedRawBytes = v
}

func (o ApiHealthMinimalGet200ResponseDfStats) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApiHealthMinimalGet200ResponseDfStats) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["total_avail_bytes"] = o.TotalAvailBytes
	toSerialize["total_bytes"] = o.TotalBytes
	toSerialize["total_used_raw_bytes"] = o.TotalUsedRawBytes
	return toSerialize, nil
}

func (o *ApiHealthMinimalGet200ResponseDfStats) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"total_avail_bytes",
		"total_bytes",
		"total_used_raw_bytes",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varApiHealthMinimalGet200ResponseDfStats := _ApiHealthMinimalGet200ResponseDfStats{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varApiHealthMinimalGet200ResponseDfStats)

	if err != nil {
		return err
	}

	*o = ApiHealthMinimalGet200ResponseDfStats(varApiHealthMinimalGet200ResponseDfStats)

	return err
}

type NullableApiHealthMinimalGet200ResponseDfStats struct {
	value *ApiHealthMinimalGet200ResponseDfStats
	isSet bool
}

func (v NullableApiHealthMinimalGet200ResponseDfStats) Get() *ApiHealthMinimalGet200ResponseDfStats {
	return v.value
}

func (v *NullableApiHealthMinimalGet200ResponseDfStats) Set(val *ApiHealthMinimalGet200ResponseDfStats) {
	v.value = val
	v.isSet = true
}

func (v NullableApiHealthMinimalGet200ResponseDfStats) IsSet() bool {
	return v.isSet
}

func (v *NullableApiHealthMinimalGet200ResponseDfStats) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiHealthMinimalGet200ResponseDfStats(val *ApiHealthMinimalGet200ResponseDfStats) *NullableApiHealthMinimalGet200ResponseDfStats {
	return &NullableApiHealthMinimalGet200ResponseDfStats{value: val, isSet: true}
}

func (v NullableApiHealthMinimalGet200ResponseDfStats) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiHealthMinimalGet200ResponseDfStats) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


