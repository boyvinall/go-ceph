/*
Ceph REST API

This is the official Ceph REST API

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ceph

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ApiTelemetryReportGet200ResponseReportMetadataMonDistroDescription type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApiTelemetryReportGet200ResponseReportMetadataMonDistroDescription{}

// ApiTelemetryReportGet200ResponseReportMetadataMonDistroDescription 
type ApiTelemetryReportGet200ResponseReportMetadataMonDistroDescription struct {
	// 
	CentOSLinux8Core int32 `json:"CentOS Linux 8 (Core)"`
}

type _ApiTelemetryReportGet200ResponseReportMetadataMonDistroDescription ApiTelemetryReportGet200ResponseReportMetadataMonDistroDescription

// NewApiTelemetryReportGet200ResponseReportMetadataMonDistroDescription instantiates a new ApiTelemetryReportGet200ResponseReportMetadataMonDistroDescription object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiTelemetryReportGet200ResponseReportMetadataMonDistroDescription(centOSLinux8Core int32) *ApiTelemetryReportGet200ResponseReportMetadataMonDistroDescription {
	this := ApiTelemetryReportGet200ResponseReportMetadataMonDistroDescription{}
	this.CentOSLinux8Core = centOSLinux8Core
	return &this
}

// NewApiTelemetryReportGet200ResponseReportMetadataMonDistroDescriptionWithDefaults instantiates a new ApiTelemetryReportGet200ResponseReportMetadataMonDistroDescription object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiTelemetryReportGet200ResponseReportMetadataMonDistroDescriptionWithDefaults() *ApiTelemetryReportGet200ResponseReportMetadataMonDistroDescription {
	this := ApiTelemetryReportGet200ResponseReportMetadataMonDistroDescription{}
	return &this
}

// GetCentOSLinux8Core returns the CentOSLinux8Core field value
func (o *ApiTelemetryReportGet200ResponseReportMetadataMonDistroDescription) GetCentOSLinux8Core() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.CentOSLinux8Core
}

// GetCentOSLinux8CoreOk returns a tuple with the CentOSLinux8Core field value
// and a boolean to check if the value has been set.
func (o *ApiTelemetryReportGet200ResponseReportMetadataMonDistroDescription) GetCentOSLinux8CoreOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CentOSLinux8Core, true
}

// SetCentOSLinux8Core sets field value
func (o *ApiTelemetryReportGet200ResponseReportMetadataMonDistroDescription) SetCentOSLinux8Core(v int32) {
	o.CentOSLinux8Core = v
}

func (o ApiTelemetryReportGet200ResponseReportMetadataMonDistroDescription) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApiTelemetryReportGet200ResponseReportMetadataMonDistroDescription) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["CentOS Linux 8 (Core)"] = o.CentOSLinux8Core
	return toSerialize, nil
}

func (o *ApiTelemetryReportGet200ResponseReportMetadataMonDistroDescription) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"CentOS Linux 8 (Core)",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varApiTelemetryReportGet200ResponseReportMetadataMonDistroDescription := _ApiTelemetryReportGet200ResponseReportMetadataMonDistroDescription{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varApiTelemetryReportGet200ResponseReportMetadataMonDistroDescription)

	if err != nil {
		return err
	}

	*o = ApiTelemetryReportGet200ResponseReportMetadataMonDistroDescription(varApiTelemetryReportGet200ResponseReportMetadataMonDistroDescription)

	return err
}

type NullableApiTelemetryReportGet200ResponseReportMetadataMonDistroDescription struct {
	value *ApiTelemetryReportGet200ResponseReportMetadataMonDistroDescription
	isSet bool
}

func (v NullableApiTelemetryReportGet200ResponseReportMetadataMonDistroDescription) Get() *ApiTelemetryReportGet200ResponseReportMetadataMonDistroDescription {
	return v.value
}

func (v *NullableApiTelemetryReportGet200ResponseReportMetadataMonDistroDescription) Set(val *ApiTelemetryReportGet200ResponseReportMetadataMonDistroDescription) {
	v.value = val
	v.isSet = true
}

func (v NullableApiTelemetryReportGet200ResponseReportMetadataMonDistroDescription) IsSet() bool {
	return v.isSet
}

func (v *NullableApiTelemetryReportGet200ResponseReportMetadataMonDistroDescription) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiTelemetryReportGet200ResponseReportMetadataMonDistroDescription(val *ApiTelemetryReportGet200ResponseReportMetadataMonDistroDescription) *NullableApiTelemetryReportGet200ResponseReportMetadataMonDistroDescription {
	return &NullableApiTelemetryReportGet200ResponseReportMetadataMonDistroDescription{value: val, isSet: true}
}

func (v NullableApiTelemetryReportGet200ResponseReportMetadataMonDistroDescription) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiTelemetryReportGet200ResponseReportMetadataMonDistroDescription) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


