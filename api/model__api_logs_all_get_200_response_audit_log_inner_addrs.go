/*
Ceph REST API

This is the official Ceph REST API

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ceph

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ApiLogsAllGet200ResponseAuditLogInnerAddrs type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApiLogsAllGet200ResponseAuditLogInnerAddrs{}

// ApiLogsAllGet200ResponseAuditLogInnerAddrs 
type ApiLogsAllGet200ResponseAuditLogInnerAddrs struct {
	// 
	Addrvec []ApiLogsAllGet200ResponseAuditLogInnerAddrsAddrvecInner `json:"addrvec"`
}

type _ApiLogsAllGet200ResponseAuditLogInnerAddrs ApiLogsAllGet200ResponseAuditLogInnerAddrs

// NewApiLogsAllGet200ResponseAuditLogInnerAddrs instantiates a new ApiLogsAllGet200ResponseAuditLogInnerAddrs object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiLogsAllGet200ResponseAuditLogInnerAddrs(addrvec []ApiLogsAllGet200ResponseAuditLogInnerAddrsAddrvecInner) *ApiLogsAllGet200ResponseAuditLogInnerAddrs {
	this := ApiLogsAllGet200ResponseAuditLogInnerAddrs{}
	this.Addrvec = addrvec
	return &this
}

// NewApiLogsAllGet200ResponseAuditLogInnerAddrsWithDefaults instantiates a new ApiLogsAllGet200ResponseAuditLogInnerAddrs object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiLogsAllGet200ResponseAuditLogInnerAddrsWithDefaults() *ApiLogsAllGet200ResponseAuditLogInnerAddrs {
	this := ApiLogsAllGet200ResponseAuditLogInnerAddrs{}
	return &this
}

// GetAddrvec returns the Addrvec field value
func (o *ApiLogsAllGet200ResponseAuditLogInnerAddrs) GetAddrvec() []ApiLogsAllGet200ResponseAuditLogInnerAddrsAddrvecInner {
	if o == nil {
		var ret []ApiLogsAllGet200ResponseAuditLogInnerAddrsAddrvecInner
		return ret
	}

	return o.Addrvec
}

// GetAddrvecOk returns a tuple with the Addrvec field value
// and a boolean to check if the value has been set.
func (o *ApiLogsAllGet200ResponseAuditLogInnerAddrs) GetAddrvecOk() ([]ApiLogsAllGet200ResponseAuditLogInnerAddrsAddrvecInner, bool) {
	if o == nil {
		return nil, false
	}
	return o.Addrvec, true
}

// SetAddrvec sets field value
func (o *ApiLogsAllGet200ResponseAuditLogInnerAddrs) SetAddrvec(v []ApiLogsAllGet200ResponseAuditLogInnerAddrsAddrvecInner) {
	o.Addrvec = v
}

func (o ApiLogsAllGet200ResponseAuditLogInnerAddrs) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApiLogsAllGet200ResponseAuditLogInnerAddrs) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["addrvec"] = o.Addrvec
	return toSerialize, nil
}

func (o *ApiLogsAllGet200ResponseAuditLogInnerAddrs) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"addrvec",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varApiLogsAllGet200ResponseAuditLogInnerAddrs := _ApiLogsAllGet200ResponseAuditLogInnerAddrs{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varApiLogsAllGet200ResponseAuditLogInnerAddrs)

	if err != nil {
		return err
	}

	*o = ApiLogsAllGet200ResponseAuditLogInnerAddrs(varApiLogsAllGet200ResponseAuditLogInnerAddrs)

	return err
}

type NullableApiLogsAllGet200ResponseAuditLogInnerAddrs struct {
	value *ApiLogsAllGet200ResponseAuditLogInnerAddrs
	isSet bool
}

func (v NullableApiLogsAllGet200ResponseAuditLogInnerAddrs) Get() *ApiLogsAllGet200ResponseAuditLogInnerAddrs {
	return v.value
}

func (v *NullableApiLogsAllGet200ResponseAuditLogInnerAddrs) Set(val *ApiLogsAllGet200ResponseAuditLogInnerAddrs) {
	v.value = val
	v.isSet = true
}

func (v NullableApiLogsAllGet200ResponseAuditLogInnerAddrs) IsSet() bool {
	return v.isSet
}

func (v *NullableApiLogsAllGet200ResponseAuditLogInnerAddrs) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiLogsAllGet200ResponseAuditLogInnerAddrs(val *ApiLogsAllGet200ResponseAuditLogInnerAddrs) *NullableApiLogsAllGet200ResponseAuditLogInnerAddrs {
	return &NullableApiLogsAllGet200ResponseAuditLogInnerAddrs{value: val, isSet: true}
}

func (v NullableApiLogsAllGet200ResponseAuditLogInnerAddrs) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiLogsAllGet200ResponseAuditLogInnerAddrs) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


