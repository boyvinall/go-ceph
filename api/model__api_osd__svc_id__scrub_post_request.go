/*
Ceph REST API

This is the official Ceph REST API

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ceph

import (
	"encoding/json"
)

// checks if the ApiOsdSvcIdScrubPostRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApiOsdSvcIdScrubPostRequest{}

// ApiOsdSvcIdScrubPostRequest struct for ApiOsdSvcIdScrubPostRequest
type ApiOsdSvcIdScrubPostRequest struct {
	Deep *bool `json:"deep,omitempty"`
}

// NewApiOsdSvcIdScrubPostRequest instantiates a new ApiOsdSvcIdScrubPostRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiOsdSvcIdScrubPostRequest() *ApiOsdSvcIdScrubPostRequest {
	this := ApiOsdSvcIdScrubPostRequest{}
	var deep bool = false
	this.Deep = &deep
	return &this
}

// NewApiOsdSvcIdScrubPostRequestWithDefaults instantiates a new ApiOsdSvcIdScrubPostRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiOsdSvcIdScrubPostRequestWithDefaults() *ApiOsdSvcIdScrubPostRequest {
	this := ApiOsdSvcIdScrubPostRequest{}
	var deep bool = false
	this.Deep = &deep
	return &this
}

// GetDeep returns the Deep field value if set, zero value otherwise.
func (o *ApiOsdSvcIdScrubPostRequest) GetDeep() bool {
	if o == nil || IsNil(o.Deep) {
		var ret bool
		return ret
	}
	return *o.Deep
}

// GetDeepOk returns a tuple with the Deep field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiOsdSvcIdScrubPostRequest) GetDeepOk() (*bool, bool) {
	if o == nil || IsNil(o.Deep) {
		return nil, false
	}
	return o.Deep, true
}

// HasDeep returns a boolean if a field has been set.
func (o *ApiOsdSvcIdScrubPostRequest) HasDeep() bool {
	if o != nil && !IsNil(o.Deep) {
		return true
	}

	return false
}

// SetDeep gets a reference to the given bool and assigns it to the Deep field.
func (o *ApiOsdSvcIdScrubPostRequest) SetDeep(v bool) {
	o.Deep = &v
}

func (o ApiOsdSvcIdScrubPostRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApiOsdSvcIdScrubPostRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Deep) {
		toSerialize["deep"] = o.Deep
	}
	return toSerialize, nil
}

type NullableApiOsdSvcIdScrubPostRequest struct {
	value *ApiOsdSvcIdScrubPostRequest
	isSet bool
}

func (v NullableApiOsdSvcIdScrubPostRequest) Get() *ApiOsdSvcIdScrubPostRequest {
	return v.value
}

func (v *NullableApiOsdSvcIdScrubPostRequest) Set(val *ApiOsdSvcIdScrubPostRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableApiOsdSvcIdScrubPostRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableApiOsdSvcIdScrubPostRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiOsdSvcIdScrubPostRequest(val *ApiOsdSvcIdScrubPostRequest) *NullableApiOsdSvcIdScrubPostRequest {
	return &NullableApiOsdSvcIdScrubPostRequest{value: val, isSet: true}
}

func (v NullableApiOsdSvcIdScrubPostRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiOsdSvcIdScrubPostRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


