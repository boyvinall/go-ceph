/*
Ceph REST API

This is the official Ceph REST API

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ceph

import (
	"encoding/json"
)

// checks if the ApiUserPostRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApiUserPostRequest{}

// ApiUserPostRequest struct for ApiUserPostRequest
type ApiUserPostRequest struct {
	Email *string `json:"email,omitempty"`
	Enabled *bool `json:"enabled,omitempty"`
	Name *string `json:"name,omitempty"`
	Password *string `json:"password,omitempty"`
	PwdExpirationDate *string `json:"pwdExpirationDate,omitempty"`
	PwdUpdateRequired *bool `json:"pwdUpdateRequired,omitempty"`
	Roles *string `json:"roles,omitempty"`
	Username *string `json:"username,omitempty"`
}

// NewApiUserPostRequest instantiates a new ApiUserPostRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiUserPostRequest() *ApiUserPostRequest {
	this := ApiUserPostRequest{}
	var enabled bool = true
	this.Enabled = &enabled
	var pwdUpdateRequired bool = true
	this.PwdUpdateRequired = &pwdUpdateRequired
	return &this
}

// NewApiUserPostRequestWithDefaults instantiates a new ApiUserPostRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiUserPostRequestWithDefaults() *ApiUserPostRequest {
	this := ApiUserPostRequest{}
	var enabled bool = true
	this.Enabled = &enabled
	var pwdUpdateRequired bool = true
	this.PwdUpdateRequired = &pwdUpdateRequired
	return &this
}

// GetEmail returns the Email field value if set, zero value otherwise.
func (o *ApiUserPostRequest) GetEmail() string {
	if o == nil || IsNil(o.Email) {
		var ret string
		return ret
	}
	return *o.Email
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiUserPostRequest) GetEmailOk() (*string, bool) {
	if o == nil || IsNil(o.Email) {
		return nil, false
	}
	return o.Email, true
}

// HasEmail returns a boolean if a field has been set.
func (o *ApiUserPostRequest) HasEmail() bool {
	if o != nil && !IsNil(o.Email) {
		return true
	}

	return false
}

// SetEmail gets a reference to the given string and assigns it to the Email field.
func (o *ApiUserPostRequest) SetEmail(v string) {
	o.Email = &v
}

// GetEnabled returns the Enabled field value if set, zero value otherwise.
func (o *ApiUserPostRequest) GetEnabled() bool {
	if o == nil || IsNil(o.Enabled) {
		var ret bool
		return ret
	}
	return *o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiUserPostRequest) GetEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.Enabled) {
		return nil, false
	}
	return o.Enabled, true
}

// HasEnabled returns a boolean if a field has been set.
func (o *ApiUserPostRequest) HasEnabled() bool {
	if o != nil && !IsNil(o.Enabled) {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given bool and assigns it to the Enabled field.
func (o *ApiUserPostRequest) SetEnabled(v bool) {
	o.Enabled = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ApiUserPostRequest) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiUserPostRequest) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ApiUserPostRequest) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ApiUserPostRequest) SetName(v string) {
	o.Name = &v
}

// GetPassword returns the Password field value if set, zero value otherwise.
func (o *ApiUserPostRequest) GetPassword() string {
	if o == nil || IsNil(o.Password) {
		var ret string
		return ret
	}
	return *o.Password
}

// GetPasswordOk returns a tuple with the Password field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiUserPostRequest) GetPasswordOk() (*string, bool) {
	if o == nil || IsNil(o.Password) {
		return nil, false
	}
	return o.Password, true
}

// HasPassword returns a boolean if a field has been set.
func (o *ApiUserPostRequest) HasPassword() bool {
	if o != nil && !IsNil(o.Password) {
		return true
	}

	return false
}

// SetPassword gets a reference to the given string and assigns it to the Password field.
func (o *ApiUserPostRequest) SetPassword(v string) {
	o.Password = &v
}

// GetPwdExpirationDate returns the PwdExpirationDate field value if set, zero value otherwise.
func (o *ApiUserPostRequest) GetPwdExpirationDate() string {
	if o == nil || IsNil(o.PwdExpirationDate) {
		var ret string
		return ret
	}
	return *o.PwdExpirationDate
}

// GetPwdExpirationDateOk returns a tuple with the PwdExpirationDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiUserPostRequest) GetPwdExpirationDateOk() (*string, bool) {
	if o == nil || IsNil(o.PwdExpirationDate) {
		return nil, false
	}
	return o.PwdExpirationDate, true
}

// HasPwdExpirationDate returns a boolean if a field has been set.
func (o *ApiUserPostRequest) HasPwdExpirationDate() bool {
	if o != nil && !IsNil(o.PwdExpirationDate) {
		return true
	}

	return false
}

// SetPwdExpirationDate gets a reference to the given string and assigns it to the PwdExpirationDate field.
func (o *ApiUserPostRequest) SetPwdExpirationDate(v string) {
	o.PwdExpirationDate = &v
}

// GetPwdUpdateRequired returns the PwdUpdateRequired field value if set, zero value otherwise.
func (o *ApiUserPostRequest) GetPwdUpdateRequired() bool {
	if o == nil || IsNil(o.PwdUpdateRequired) {
		var ret bool
		return ret
	}
	return *o.PwdUpdateRequired
}

// GetPwdUpdateRequiredOk returns a tuple with the PwdUpdateRequired field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiUserPostRequest) GetPwdUpdateRequiredOk() (*bool, bool) {
	if o == nil || IsNil(o.PwdUpdateRequired) {
		return nil, false
	}
	return o.PwdUpdateRequired, true
}

// HasPwdUpdateRequired returns a boolean if a field has been set.
func (o *ApiUserPostRequest) HasPwdUpdateRequired() bool {
	if o != nil && !IsNil(o.PwdUpdateRequired) {
		return true
	}

	return false
}

// SetPwdUpdateRequired gets a reference to the given bool and assigns it to the PwdUpdateRequired field.
func (o *ApiUserPostRequest) SetPwdUpdateRequired(v bool) {
	o.PwdUpdateRequired = &v
}

// GetRoles returns the Roles field value if set, zero value otherwise.
func (o *ApiUserPostRequest) GetRoles() string {
	if o == nil || IsNil(o.Roles) {
		var ret string
		return ret
	}
	return *o.Roles
}

// GetRolesOk returns a tuple with the Roles field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiUserPostRequest) GetRolesOk() (*string, bool) {
	if o == nil || IsNil(o.Roles) {
		return nil, false
	}
	return o.Roles, true
}

// HasRoles returns a boolean if a field has been set.
func (o *ApiUserPostRequest) HasRoles() bool {
	if o != nil && !IsNil(o.Roles) {
		return true
	}

	return false
}

// SetRoles gets a reference to the given string and assigns it to the Roles field.
func (o *ApiUserPostRequest) SetRoles(v string) {
	o.Roles = &v
}

// GetUsername returns the Username field value if set, zero value otherwise.
func (o *ApiUserPostRequest) GetUsername() string {
	if o == nil || IsNil(o.Username) {
		var ret string
		return ret
	}
	return *o.Username
}

// GetUsernameOk returns a tuple with the Username field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiUserPostRequest) GetUsernameOk() (*string, bool) {
	if o == nil || IsNil(o.Username) {
		return nil, false
	}
	return o.Username, true
}

// HasUsername returns a boolean if a field has been set.
func (o *ApiUserPostRequest) HasUsername() bool {
	if o != nil && !IsNil(o.Username) {
		return true
	}

	return false
}

// SetUsername gets a reference to the given string and assigns it to the Username field.
func (o *ApiUserPostRequest) SetUsername(v string) {
	o.Username = &v
}

func (o ApiUserPostRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApiUserPostRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Email) {
		toSerialize["email"] = o.Email
	}
	if !IsNil(o.Enabled) {
		toSerialize["enabled"] = o.Enabled
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Password) {
		toSerialize["password"] = o.Password
	}
	if !IsNil(o.PwdExpirationDate) {
		toSerialize["pwdExpirationDate"] = o.PwdExpirationDate
	}
	if !IsNil(o.PwdUpdateRequired) {
		toSerialize["pwdUpdateRequired"] = o.PwdUpdateRequired
	}
	if !IsNil(o.Roles) {
		toSerialize["roles"] = o.Roles
	}
	if !IsNil(o.Username) {
		toSerialize["username"] = o.Username
	}
	return toSerialize, nil
}

type NullableApiUserPostRequest struct {
	value *ApiUserPostRequest
	isSet bool
}

func (v NullableApiUserPostRequest) Get() *ApiUserPostRequest {
	return v.value
}

func (v *NullableApiUserPostRequest) Set(val *ApiUserPostRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableApiUserPostRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableApiUserPostRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiUserPostRequest(val *ApiUserPostRequest) *NullableApiUserPostRequest {
	return &NullableApiUserPostRequest{value: val, isSet: true}
}

func (v NullableApiUserPostRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiUserPostRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


