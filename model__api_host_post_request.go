/*
Ceph REST API

This is the official Ceph REST API

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ceph

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ApiHostPostRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApiHostPostRequest{}

// ApiHostPostRequest struct for ApiHostPostRequest
type ApiHostPostRequest struct {
	// Network Address
	Addr *string `json:"addr,omitempty"`
	// Hostname
	Hostname string `json:"hostname"`
	// Host Labels
	Labels []string `json:"labels,omitempty"`
	// Host Status
	Status *string `json:"status,omitempty"`
}

type _ApiHostPostRequest ApiHostPostRequest

// NewApiHostPostRequest instantiates a new ApiHostPostRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiHostPostRequest(hostname string) *ApiHostPostRequest {
	this := ApiHostPostRequest{}
	this.Hostname = hostname
	return &this
}

// NewApiHostPostRequestWithDefaults instantiates a new ApiHostPostRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiHostPostRequestWithDefaults() *ApiHostPostRequest {
	this := ApiHostPostRequest{}
	return &this
}

// GetAddr returns the Addr field value if set, zero value otherwise.
func (o *ApiHostPostRequest) GetAddr() string {
	if o == nil || IsNil(o.Addr) {
		var ret string
		return ret
	}
	return *o.Addr
}

// GetAddrOk returns a tuple with the Addr field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiHostPostRequest) GetAddrOk() (*string, bool) {
	if o == nil || IsNil(o.Addr) {
		return nil, false
	}
	return o.Addr, true
}

// HasAddr returns a boolean if a field has been set.
func (o *ApiHostPostRequest) HasAddr() bool {
	if o != nil && !IsNil(o.Addr) {
		return true
	}

	return false
}

// SetAddr gets a reference to the given string and assigns it to the Addr field.
func (o *ApiHostPostRequest) SetAddr(v string) {
	o.Addr = &v
}

// GetHostname returns the Hostname field value
func (o *ApiHostPostRequest) GetHostname() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Hostname
}

// GetHostnameOk returns a tuple with the Hostname field value
// and a boolean to check if the value has been set.
func (o *ApiHostPostRequest) GetHostnameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Hostname, true
}

// SetHostname sets field value
func (o *ApiHostPostRequest) SetHostname(v string) {
	o.Hostname = v
}

// GetLabels returns the Labels field value if set, zero value otherwise.
func (o *ApiHostPostRequest) GetLabels() []string {
	if o == nil || IsNil(o.Labels) {
		var ret []string
		return ret
	}
	return o.Labels
}

// GetLabelsOk returns a tuple with the Labels field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiHostPostRequest) GetLabelsOk() ([]string, bool) {
	if o == nil || IsNil(o.Labels) {
		return nil, false
	}
	return o.Labels, true
}

// HasLabels returns a boolean if a field has been set.
func (o *ApiHostPostRequest) HasLabels() bool {
	if o != nil && !IsNil(o.Labels) {
		return true
	}

	return false
}

// SetLabels gets a reference to the given []string and assigns it to the Labels field.
func (o *ApiHostPostRequest) SetLabels(v []string) {
	o.Labels = v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *ApiHostPostRequest) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiHostPostRequest) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *ApiHostPostRequest) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *ApiHostPostRequest) SetStatus(v string) {
	o.Status = &v
}

func (o ApiHostPostRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApiHostPostRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Addr) {
		toSerialize["addr"] = o.Addr
	}
	toSerialize["hostname"] = o.Hostname
	if !IsNil(o.Labels) {
		toSerialize["labels"] = o.Labels
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	return toSerialize, nil
}

func (o *ApiHostPostRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"hostname",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varApiHostPostRequest := _ApiHostPostRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varApiHostPostRequest)

	if err != nil {
		return err
	}

	*o = ApiHostPostRequest(varApiHostPostRequest)

	return err
}

type NullableApiHostPostRequest struct {
	value *ApiHostPostRequest
	isSet bool
}

func (v NullableApiHostPostRequest) Get() *ApiHostPostRequest {
	return v.value
}

func (v *NullableApiHostPostRequest) Set(val *ApiHostPostRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableApiHostPostRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableApiHostPostRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiHostPostRequest(val *ApiHostPostRequest) *NullableApiHostPostRequest {
	return &NullableApiHostPostRequest{value: val, isSet: true}
}

func (v NullableApiHostPostRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiHostPostRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


