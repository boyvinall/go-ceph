/*
Ceph REST API

This is the official Ceph REST API

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ceph

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ApiHealthMinimalGet200ResponseDf type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApiHealthMinimalGet200ResponseDf{}

// ApiHealthMinimalGet200ResponseDf 
type ApiHealthMinimalGet200ResponseDf struct {
	Stats ApiHealthMinimalGet200ResponseDfStats `json:"stats"`
}

type _ApiHealthMinimalGet200ResponseDf ApiHealthMinimalGet200ResponseDf

// NewApiHealthMinimalGet200ResponseDf instantiates a new ApiHealthMinimalGet200ResponseDf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiHealthMinimalGet200ResponseDf(stats ApiHealthMinimalGet200ResponseDfStats) *ApiHealthMinimalGet200ResponseDf {
	this := ApiHealthMinimalGet200ResponseDf{}
	this.Stats = stats
	return &this
}

// NewApiHealthMinimalGet200ResponseDfWithDefaults instantiates a new ApiHealthMinimalGet200ResponseDf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiHealthMinimalGet200ResponseDfWithDefaults() *ApiHealthMinimalGet200ResponseDf {
	this := ApiHealthMinimalGet200ResponseDf{}
	return &this
}

// GetStats returns the Stats field value
func (o *ApiHealthMinimalGet200ResponseDf) GetStats() ApiHealthMinimalGet200ResponseDfStats {
	if o == nil {
		var ret ApiHealthMinimalGet200ResponseDfStats
		return ret
	}

	return o.Stats
}

// GetStatsOk returns a tuple with the Stats field value
// and a boolean to check if the value has been set.
func (o *ApiHealthMinimalGet200ResponseDf) GetStatsOk() (*ApiHealthMinimalGet200ResponseDfStats, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Stats, true
}

// SetStats sets field value
func (o *ApiHealthMinimalGet200ResponseDf) SetStats(v ApiHealthMinimalGet200ResponseDfStats) {
	o.Stats = v
}

func (o ApiHealthMinimalGet200ResponseDf) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApiHealthMinimalGet200ResponseDf) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["stats"] = o.Stats
	return toSerialize, nil
}

func (o *ApiHealthMinimalGet200ResponseDf) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"stats",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varApiHealthMinimalGet200ResponseDf := _ApiHealthMinimalGet200ResponseDf{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varApiHealthMinimalGet200ResponseDf)

	if err != nil {
		return err
	}

	*o = ApiHealthMinimalGet200ResponseDf(varApiHealthMinimalGet200ResponseDf)

	return err
}

type NullableApiHealthMinimalGet200ResponseDf struct {
	value *ApiHealthMinimalGet200ResponseDf
	isSet bool
}

func (v NullableApiHealthMinimalGet200ResponseDf) Get() *ApiHealthMinimalGet200ResponseDf {
	return v.value
}

func (v *NullableApiHealthMinimalGet200ResponseDf) Set(val *ApiHealthMinimalGet200ResponseDf) {
	v.value = val
	v.isSet = true
}

func (v NullableApiHealthMinimalGet200ResponseDf) IsSet() bool {
	return v.isSet
}

func (v *NullableApiHealthMinimalGet200ResponseDf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiHealthMinimalGet200ResponseDf(val *ApiHealthMinimalGet200ResponseDf) *NullableApiHealthMinimalGet200ResponseDf {
	return &NullableApiHealthMinimalGet200ResponseDf{value: val, isSet: true}
}

func (v NullableApiHealthMinimalGet200ResponseDf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiHealthMinimalGet200ResponseDf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


