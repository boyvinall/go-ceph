/*
Ceph REST API

This is the official Ceph REST API

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ceph

import (
	"encoding/json"
)

// checks if the ApiPoolPoolNamePutRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApiPoolPoolNamePutRequest{}

// ApiPoolPoolNamePutRequest struct for ApiPoolPoolNamePutRequest
type ApiPoolPoolNamePutRequest struct {
	ApplicationMetadata *string `json:"application_metadata,omitempty"`
	Configuration *string `json:"configuration,omitempty"`
	Flags *string `json:"flags,omitempty"`
	RbdMirroring *string `json:"rbd_mirroring,omitempty"`
}

// NewApiPoolPoolNamePutRequest instantiates a new ApiPoolPoolNamePutRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiPoolPoolNamePutRequest() *ApiPoolPoolNamePutRequest {
	this := ApiPoolPoolNamePutRequest{}
	return &this
}

// NewApiPoolPoolNamePutRequestWithDefaults instantiates a new ApiPoolPoolNamePutRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiPoolPoolNamePutRequestWithDefaults() *ApiPoolPoolNamePutRequest {
	this := ApiPoolPoolNamePutRequest{}
	return &this
}

// GetApplicationMetadata returns the ApplicationMetadata field value if set, zero value otherwise.
func (o *ApiPoolPoolNamePutRequest) GetApplicationMetadata() string {
	if o == nil || IsNil(o.ApplicationMetadata) {
		var ret string
		return ret
	}
	return *o.ApplicationMetadata
}

// GetApplicationMetadataOk returns a tuple with the ApplicationMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiPoolPoolNamePutRequest) GetApplicationMetadataOk() (*string, bool) {
	if o == nil || IsNil(o.ApplicationMetadata) {
		return nil, false
	}
	return o.ApplicationMetadata, true
}

// HasApplicationMetadata returns a boolean if a field has been set.
func (o *ApiPoolPoolNamePutRequest) HasApplicationMetadata() bool {
	if o != nil && !IsNil(o.ApplicationMetadata) {
		return true
	}

	return false
}

// SetApplicationMetadata gets a reference to the given string and assigns it to the ApplicationMetadata field.
func (o *ApiPoolPoolNamePutRequest) SetApplicationMetadata(v string) {
	o.ApplicationMetadata = &v
}

// GetConfiguration returns the Configuration field value if set, zero value otherwise.
func (o *ApiPoolPoolNamePutRequest) GetConfiguration() string {
	if o == nil || IsNil(o.Configuration) {
		var ret string
		return ret
	}
	return *o.Configuration
}

// GetConfigurationOk returns a tuple with the Configuration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiPoolPoolNamePutRequest) GetConfigurationOk() (*string, bool) {
	if o == nil || IsNil(o.Configuration) {
		return nil, false
	}
	return o.Configuration, true
}

// HasConfiguration returns a boolean if a field has been set.
func (o *ApiPoolPoolNamePutRequest) HasConfiguration() bool {
	if o != nil && !IsNil(o.Configuration) {
		return true
	}

	return false
}

// SetConfiguration gets a reference to the given string and assigns it to the Configuration field.
func (o *ApiPoolPoolNamePutRequest) SetConfiguration(v string) {
	o.Configuration = &v
}

// GetFlags returns the Flags field value if set, zero value otherwise.
func (o *ApiPoolPoolNamePutRequest) GetFlags() string {
	if o == nil || IsNil(o.Flags) {
		var ret string
		return ret
	}
	return *o.Flags
}

// GetFlagsOk returns a tuple with the Flags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiPoolPoolNamePutRequest) GetFlagsOk() (*string, bool) {
	if o == nil || IsNil(o.Flags) {
		return nil, false
	}
	return o.Flags, true
}

// HasFlags returns a boolean if a field has been set.
func (o *ApiPoolPoolNamePutRequest) HasFlags() bool {
	if o != nil && !IsNil(o.Flags) {
		return true
	}

	return false
}

// SetFlags gets a reference to the given string and assigns it to the Flags field.
func (o *ApiPoolPoolNamePutRequest) SetFlags(v string) {
	o.Flags = &v
}

// GetRbdMirroring returns the RbdMirroring field value if set, zero value otherwise.
func (o *ApiPoolPoolNamePutRequest) GetRbdMirroring() string {
	if o == nil || IsNil(o.RbdMirroring) {
		var ret string
		return ret
	}
	return *o.RbdMirroring
}

// GetRbdMirroringOk returns a tuple with the RbdMirroring field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiPoolPoolNamePutRequest) GetRbdMirroringOk() (*string, bool) {
	if o == nil || IsNil(o.RbdMirroring) {
		return nil, false
	}
	return o.RbdMirroring, true
}

// HasRbdMirroring returns a boolean if a field has been set.
func (o *ApiPoolPoolNamePutRequest) HasRbdMirroring() bool {
	if o != nil && !IsNil(o.RbdMirroring) {
		return true
	}

	return false
}

// SetRbdMirroring gets a reference to the given string and assigns it to the RbdMirroring field.
func (o *ApiPoolPoolNamePutRequest) SetRbdMirroring(v string) {
	o.RbdMirroring = &v
}

func (o ApiPoolPoolNamePutRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApiPoolPoolNamePutRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ApplicationMetadata) {
		toSerialize["application_metadata"] = o.ApplicationMetadata
	}
	if !IsNil(o.Configuration) {
		toSerialize["configuration"] = o.Configuration
	}
	if !IsNil(o.Flags) {
		toSerialize["flags"] = o.Flags
	}
	if !IsNil(o.RbdMirroring) {
		toSerialize["rbd_mirroring"] = o.RbdMirroring
	}
	return toSerialize, nil
}

type NullableApiPoolPoolNamePutRequest struct {
	value *ApiPoolPoolNamePutRequest
	isSet bool
}

func (v NullableApiPoolPoolNamePutRequest) Get() *ApiPoolPoolNamePutRequest {
	return v.value
}

func (v *NullableApiPoolPoolNamePutRequest) Set(val *ApiPoolPoolNamePutRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableApiPoolPoolNamePutRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableApiPoolPoolNamePutRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiPoolPoolNamePutRequest(val *ApiPoolPoolNamePutRequest) *NullableApiPoolPoolNamePutRequest {
	return &NullableApiPoolPoolNamePutRequest{value: val, isSet: true}
}

func (v NullableApiPoolPoolNamePutRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiPoolPoolNamePutRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


