/*
Ceph REST API

This is the official Ceph REST API

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ceph

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ApiRgwZoneCreateSystemUserPutRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApiRgwZoneCreateSystemUserPutRequest{}

// ApiRgwZoneCreateSystemUserPutRequest struct for ApiRgwZoneCreateSystemUserPutRequest
type ApiRgwZoneCreateSystemUserPutRequest struct {
	UserName string `json:"userName"`
	ZoneName string `json:"zoneName"`
}

type _ApiRgwZoneCreateSystemUserPutRequest ApiRgwZoneCreateSystemUserPutRequest

// NewApiRgwZoneCreateSystemUserPutRequest instantiates a new ApiRgwZoneCreateSystemUserPutRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiRgwZoneCreateSystemUserPutRequest(userName string, zoneName string) *ApiRgwZoneCreateSystemUserPutRequest {
	this := ApiRgwZoneCreateSystemUserPutRequest{}
	this.UserName = userName
	this.ZoneName = zoneName
	return &this
}

// NewApiRgwZoneCreateSystemUserPutRequestWithDefaults instantiates a new ApiRgwZoneCreateSystemUserPutRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiRgwZoneCreateSystemUserPutRequestWithDefaults() *ApiRgwZoneCreateSystemUserPutRequest {
	this := ApiRgwZoneCreateSystemUserPutRequest{}
	return &this
}

// GetUserName returns the UserName field value
func (o *ApiRgwZoneCreateSystemUserPutRequest) GetUserName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UserName
}

// GetUserNameOk returns a tuple with the UserName field value
// and a boolean to check if the value has been set.
func (o *ApiRgwZoneCreateSystemUserPutRequest) GetUserNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UserName, true
}

// SetUserName sets field value
func (o *ApiRgwZoneCreateSystemUserPutRequest) SetUserName(v string) {
	o.UserName = v
}

// GetZoneName returns the ZoneName field value
func (o *ApiRgwZoneCreateSystemUserPutRequest) GetZoneName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ZoneName
}

// GetZoneNameOk returns a tuple with the ZoneName field value
// and a boolean to check if the value has been set.
func (o *ApiRgwZoneCreateSystemUserPutRequest) GetZoneNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ZoneName, true
}

// SetZoneName sets field value
func (o *ApiRgwZoneCreateSystemUserPutRequest) SetZoneName(v string) {
	o.ZoneName = v
}

func (o ApiRgwZoneCreateSystemUserPutRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApiRgwZoneCreateSystemUserPutRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["userName"] = o.UserName
	toSerialize["zoneName"] = o.ZoneName
	return toSerialize, nil
}

func (o *ApiRgwZoneCreateSystemUserPutRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"userName",
		"zoneName",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varApiRgwZoneCreateSystemUserPutRequest := _ApiRgwZoneCreateSystemUserPutRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varApiRgwZoneCreateSystemUserPutRequest)

	if err != nil {
		return err
	}

	*o = ApiRgwZoneCreateSystemUserPutRequest(varApiRgwZoneCreateSystemUserPutRequest)

	return err
}

type NullableApiRgwZoneCreateSystemUserPutRequest struct {
	value *ApiRgwZoneCreateSystemUserPutRequest
	isSet bool
}

func (v NullableApiRgwZoneCreateSystemUserPutRequest) Get() *ApiRgwZoneCreateSystemUserPutRequest {
	return v.value
}

func (v *NullableApiRgwZoneCreateSystemUserPutRequest) Set(val *ApiRgwZoneCreateSystemUserPutRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableApiRgwZoneCreateSystemUserPutRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableApiRgwZoneCreateSystemUserPutRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiRgwZoneCreateSystemUserPutRequest(val *ApiRgwZoneCreateSystemUserPutRequest) *NullableApiRgwZoneCreateSystemUserPutRequest {
	return &NullableApiRgwZoneCreateSystemUserPutRequest{value: val, isSet: true}
}

func (v NullableApiRgwZoneCreateSystemUserPutRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiRgwZoneCreateSystemUserPutRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


