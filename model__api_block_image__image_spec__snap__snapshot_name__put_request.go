/*
Ceph REST API

This is the official Ceph REST API

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ceph

import (
	"encoding/json"
)

// checks if the ApiBlockImageImageSpecSnapSnapshotNamePutRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApiBlockImageImageSpecSnapSnapshotNamePutRequest{}

// ApiBlockImageImageSpecSnapSnapshotNamePutRequest struct for ApiBlockImageImageSpecSnapSnapshotNamePutRequest
type ApiBlockImageImageSpecSnapSnapshotNamePutRequest struct {
	IsProtected *bool `json:"is_protected,omitempty"`
	NewSnapName *string `json:"new_snap_name,omitempty"`
}

// NewApiBlockImageImageSpecSnapSnapshotNamePutRequest instantiates a new ApiBlockImageImageSpecSnapSnapshotNamePutRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiBlockImageImageSpecSnapSnapshotNamePutRequest() *ApiBlockImageImageSpecSnapSnapshotNamePutRequest {
	this := ApiBlockImageImageSpecSnapSnapshotNamePutRequest{}
	return &this
}

// NewApiBlockImageImageSpecSnapSnapshotNamePutRequestWithDefaults instantiates a new ApiBlockImageImageSpecSnapSnapshotNamePutRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiBlockImageImageSpecSnapSnapshotNamePutRequestWithDefaults() *ApiBlockImageImageSpecSnapSnapshotNamePutRequest {
	this := ApiBlockImageImageSpecSnapSnapshotNamePutRequest{}
	return &this
}

// GetIsProtected returns the IsProtected field value if set, zero value otherwise.
func (o *ApiBlockImageImageSpecSnapSnapshotNamePutRequest) GetIsProtected() bool {
	if o == nil || IsNil(o.IsProtected) {
		var ret bool
		return ret
	}
	return *o.IsProtected
}

// GetIsProtectedOk returns a tuple with the IsProtected field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiBlockImageImageSpecSnapSnapshotNamePutRequest) GetIsProtectedOk() (*bool, bool) {
	if o == nil || IsNil(o.IsProtected) {
		return nil, false
	}
	return o.IsProtected, true
}

// HasIsProtected returns a boolean if a field has been set.
func (o *ApiBlockImageImageSpecSnapSnapshotNamePutRequest) HasIsProtected() bool {
	if o != nil && !IsNil(o.IsProtected) {
		return true
	}

	return false
}

// SetIsProtected gets a reference to the given bool and assigns it to the IsProtected field.
func (o *ApiBlockImageImageSpecSnapSnapshotNamePutRequest) SetIsProtected(v bool) {
	o.IsProtected = &v
}

// GetNewSnapName returns the NewSnapName field value if set, zero value otherwise.
func (o *ApiBlockImageImageSpecSnapSnapshotNamePutRequest) GetNewSnapName() string {
	if o == nil || IsNil(o.NewSnapName) {
		var ret string
		return ret
	}
	return *o.NewSnapName
}

// GetNewSnapNameOk returns a tuple with the NewSnapName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiBlockImageImageSpecSnapSnapshotNamePutRequest) GetNewSnapNameOk() (*string, bool) {
	if o == nil || IsNil(o.NewSnapName) {
		return nil, false
	}
	return o.NewSnapName, true
}

// HasNewSnapName returns a boolean if a field has been set.
func (o *ApiBlockImageImageSpecSnapSnapshotNamePutRequest) HasNewSnapName() bool {
	if o != nil && !IsNil(o.NewSnapName) {
		return true
	}

	return false
}

// SetNewSnapName gets a reference to the given string and assigns it to the NewSnapName field.
func (o *ApiBlockImageImageSpecSnapSnapshotNamePutRequest) SetNewSnapName(v string) {
	o.NewSnapName = &v
}

func (o ApiBlockImageImageSpecSnapSnapshotNamePutRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApiBlockImageImageSpecSnapSnapshotNamePutRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.IsProtected) {
		toSerialize["is_protected"] = o.IsProtected
	}
	if !IsNil(o.NewSnapName) {
		toSerialize["new_snap_name"] = o.NewSnapName
	}
	return toSerialize, nil
}

type NullableApiBlockImageImageSpecSnapSnapshotNamePutRequest struct {
	value *ApiBlockImageImageSpecSnapSnapshotNamePutRequest
	isSet bool
}

func (v NullableApiBlockImageImageSpecSnapSnapshotNamePutRequest) Get() *ApiBlockImageImageSpecSnapSnapshotNamePutRequest {
	return v.value
}

func (v *NullableApiBlockImageImageSpecSnapSnapshotNamePutRequest) Set(val *ApiBlockImageImageSpecSnapSnapshotNamePutRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableApiBlockImageImageSpecSnapSnapshotNamePutRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableApiBlockImageImageSpecSnapSnapshotNamePutRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiBlockImageImageSpecSnapSnapshotNamePutRequest(val *ApiBlockImageImageSpecSnapSnapshotNamePutRequest) *NullableApiBlockImageImageSpecSnapSnapshotNamePutRequest {
	return &NullableApiBlockImageImageSpecSnapSnapshotNamePutRequest{value: val, isSet: true}
}

func (v NullableApiBlockImageImageSpecSnapSnapshotNamePutRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiBlockImageImageSpecSnapSnapshotNamePutRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


