/*
Ceph REST API

This is the official Ceph REST API

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ceph

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ApiRgwUserUidQuotaPutRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApiRgwUserUidQuotaPutRequest{}

// ApiRgwUserUidQuotaPutRequest struct for ApiRgwUserUidQuotaPutRequest
type ApiRgwUserUidQuotaPutRequest struct {
	DaemonName *string `json:"daemon_name,omitempty"`
	Enabled string `json:"enabled"`
	MaxObjects string `json:"max_objects"`
	MaxSizeKb int32 `json:"max_size_kb"`
	QuotaType string `json:"quota_type"`
}

type _ApiRgwUserUidQuotaPutRequest ApiRgwUserUidQuotaPutRequest

// NewApiRgwUserUidQuotaPutRequest instantiates a new ApiRgwUserUidQuotaPutRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiRgwUserUidQuotaPutRequest(enabled string, maxObjects string, maxSizeKb int32, quotaType string) *ApiRgwUserUidQuotaPutRequest {
	this := ApiRgwUserUidQuotaPutRequest{}
	this.Enabled = enabled
	this.MaxObjects = maxObjects
	this.MaxSizeKb = maxSizeKb
	this.QuotaType = quotaType
	return &this
}

// NewApiRgwUserUidQuotaPutRequestWithDefaults instantiates a new ApiRgwUserUidQuotaPutRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiRgwUserUidQuotaPutRequestWithDefaults() *ApiRgwUserUidQuotaPutRequest {
	this := ApiRgwUserUidQuotaPutRequest{}
	return &this
}

// GetDaemonName returns the DaemonName field value if set, zero value otherwise.
func (o *ApiRgwUserUidQuotaPutRequest) GetDaemonName() string {
	if o == nil || IsNil(o.DaemonName) {
		var ret string
		return ret
	}
	return *o.DaemonName
}

// GetDaemonNameOk returns a tuple with the DaemonName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiRgwUserUidQuotaPutRequest) GetDaemonNameOk() (*string, bool) {
	if o == nil || IsNil(o.DaemonName) {
		return nil, false
	}
	return o.DaemonName, true
}

// HasDaemonName returns a boolean if a field has been set.
func (o *ApiRgwUserUidQuotaPutRequest) HasDaemonName() bool {
	if o != nil && !IsNil(o.DaemonName) {
		return true
	}

	return false
}

// SetDaemonName gets a reference to the given string and assigns it to the DaemonName field.
func (o *ApiRgwUserUidQuotaPutRequest) SetDaemonName(v string) {
	o.DaemonName = &v
}

// GetEnabled returns the Enabled field value
func (o *ApiRgwUserUidQuotaPutRequest) GetEnabled() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value
// and a boolean to check if the value has been set.
func (o *ApiRgwUserUidQuotaPutRequest) GetEnabledOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Enabled, true
}

// SetEnabled sets field value
func (o *ApiRgwUserUidQuotaPutRequest) SetEnabled(v string) {
	o.Enabled = v
}

// GetMaxObjects returns the MaxObjects field value
func (o *ApiRgwUserUidQuotaPutRequest) GetMaxObjects() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MaxObjects
}

// GetMaxObjectsOk returns a tuple with the MaxObjects field value
// and a boolean to check if the value has been set.
func (o *ApiRgwUserUidQuotaPutRequest) GetMaxObjectsOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MaxObjects, true
}

// SetMaxObjects sets field value
func (o *ApiRgwUserUidQuotaPutRequest) SetMaxObjects(v string) {
	o.MaxObjects = v
}

// GetMaxSizeKb returns the MaxSizeKb field value
func (o *ApiRgwUserUidQuotaPutRequest) GetMaxSizeKb() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.MaxSizeKb
}

// GetMaxSizeKbOk returns a tuple with the MaxSizeKb field value
// and a boolean to check if the value has been set.
func (o *ApiRgwUserUidQuotaPutRequest) GetMaxSizeKbOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MaxSizeKb, true
}

// SetMaxSizeKb sets field value
func (o *ApiRgwUserUidQuotaPutRequest) SetMaxSizeKb(v int32) {
	o.MaxSizeKb = v
}

// GetQuotaType returns the QuotaType field value
func (o *ApiRgwUserUidQuotaPutRequest) GetQuotaType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.QuotaType
}

// GetQuotaTypeOk returns a tuple with the QuotaType field value
// and a boolean to check if the value has been set.
func (o *ApiRgwUserUidQuotaPutRequest) GetQuotaTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.QuotaType, true
}

// SetQuotaType sets field value
func (o *ApiRgwUserUidQuotaPutRequest) SetQuotaType(v string) {
	o.QuotaType = v
}

func (o ApiRgwUserUidQuotaPutRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApiRgwUserUidQuotaPutRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DaemonName) {
		toSerialize["daemon_name"] = o.DaemonName
	}
	toSerialize["enabled"] = o.Enabled
	toSerialize["max_objects"] = o.MaxObjects
	toSerialize["max_size_kb"] = o.MaxSizeKb
	toSerialize["quota_type"] = o.QuotaType
	return toSerialize, nil
}

func (o *ApiRgwUserUidQuotaPutRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"enabled",
		"max_objects",
		"max_size_kb",
		"quota_type",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varApiRgwUserUidQuotaPutRequest := _ApiRgwUserUidQuotaPutRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varApiRgwUserUidQuotaPutRequest)

	if err != nil {
		return err
	}

	*o = ApiRgwUserUidQuotaPutRequest(varApiRgwUserUidQuotaPutRequest)

	return err
}

type NullableApiRgwUserUidQuotaPutRequest struct {
	value *ApiRgwUserUidQuotaPutRequest
	isSet bool
}

func (v NullableApiRgwUserUidQuotaPutRequest) Get() *ApiRgwUserUidQuotaPutRequest {
	return v.value
}

func (v *NullableApiRgwUserUidQuotaPutRequest) Set(val *ApiRgwUserUidQuotaPutRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableApiRgwUserUidQuotaPutRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableApiRgwUserUidQuotaPutRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiRgwUserUidQuotaPutRequest(val *ApiRgwUserUidQuotaPutRequest) *NullableApiRgwUserUidQuotaPutRequest {
	return &NullableApiRgwUserUidQuotaPutRequest{value: val, isSet: true}
}

func (v NullableApiRgwUserUidQuotaPutRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiRgwUserUidQuotaPutRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


