/*
Ceph REST API

This is the official Ceph REST API

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ceph

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ApiOsdSafeToDestroyGet200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApiOsdSafeToDestroyGet200Response{}

// ApiOsdSafeToDestroyGet200Response struct for ApiOsdSafeToDestroyGet200Response
type ApiOsdSafeToDestroyGet200Response struct {
	// 
	Active []int32 `json:"active"`
	// Is OSD safe to destroy?
	IsSafeToDestroy bool `json:"is_safe_to_destroy"`
	// 
	MissingStats []string `json:"missing_stats"`
	// Is OSD safe to destroy?
	SafeToDestroy []string `json:"safe_to_destroy"`
	// Stored Pool groups in Osd
	StoredPgs []string `json:"stored_pgs"`
}

type _ApiOsdSafeToDestroyGet200Response ApiOsdSafeToDestroyGet200Response

// NewApiOsdSafeToDestroyGet200Response instantiates a new ApiOsdSafeToDestroyGet200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiOsdSafeToDestroyGet200Response(active []int32, isSafeToDestroy bool, missingStats []string, safeToDestroy []string, storedPgs []string) *ApiOsdSafeToDestroyGet200Response {
	this := ApiOsdSafeToDestroyGet200Response{}
	this.Active = active
	this.IsSafeToDestroy = isSafeToDestroy
	this.MissingStats = missingStats
	this.SafeToDestroy = safeToDestroy
	this.StoredPgs = storedPgs
	return &this
}

// NewApiOsdSafeToDestroyGet200ResponseWithDefaults instantiates a new ApiOsdSafeToDestroyGet200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiOsdSafeToDestroyGet200ResponseWithDefaults() *ApiOsdSafeToDestroyGet200Response {
	this := ApiOsdSafeToDestroyGet200Response{}
	return &this
}

// GetActive returns the Active field value
func (o *ApiOsdSafeToDestroyGet200Response) GetActive() []int32 {
	if o == nil {
		var ret []int32
		return ret
	}

	return o.Active
}

// GetActiveOk returns a tuple with the Active field value
// and a boolean to check if the value has been set.
func (o *ApiOsdSafeToDestroyGet200Response) GetActiveOk() ([]int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.Active, true
}

// SetActive sets field value
func (o *ApiOsdSafeToDestroyGet200Response) SetActive(v []int32) {
	o.Active = v
}

// GetIsSafeToDestroy returns the IsSafeToDestroy field value
func (o *ApiOsdSafeToDestroyGet200Response) GetIsSafeToDestroy() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsSafeToDestroy
}

// GetIsSafeToDestroyOk returns a tuple with the IsSafeToDestroy field value
// and a boolean to check if the value has been set.
func (o *ApiOsdSafeToDestroyGet200Response) GetIsSafeToDestroyOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IsSafeToDestroy, true
}

// SetIsSafeToDestroy sets field value
func (o *ApiOsdSafeToDestroyGet200Response) SetIsSafeToDestroy(v bool) {
	o.IsSafeToDestroy = v
}

// GetMissingStats returns the MissingStats field value
func (o *ApiOsdSafeToDestroyGet200Response) GetMissingStats() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.MissingStats
}

// GetMissingStatsOk returns a tuple with the MissingStats field value
// and a boolean to check if the value has been set.
func (o *ApiOsdSafeToDestroyGet200Response) GetMissingStatsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.MissingStats, true
}

// SetMissingStats sets field value
func (o *ApiOsdSafeToDestroyGet200Response) SetMissingStats(v []string) {
	o.MissingStats = v
}

// GetSafeToDestroy returns the SafeToDestroy field value
func (o *ApiOsdSafeToDestroyGet200Response) GetSafeToDestroy() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.SafeToDestroy
}

// GetSafeToDestroyOk returns a tuple with the SafeToDestroy field value
// and a boolean to check if the value has been set.
func (o *ApiOsdSafeToDestroyGet200Response) GetSafeToDestroyOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SafeToDestroy, true
}

// SetSafeToDestroy sets field value
func (o *ApiOsdSafeToDestroyGet200Response) SetSafeToDestroy(v []string) {
	o.SafeToDestroy = v
}

// GetStoredPgs returns the StoredPgs field value
func (o *ApiOsdSafeToDestroyGet200Response) GetStoredPgs() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.StoredPgs
}

// GetStoredPgsOk returns a tuple with the StoredPgs field value
// and a boolean to check if the value has been set.
func (o *ApiOsdSafeToDestroyGet200Response) GetStoredPgsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.StoredPgs, true
}

// SetStoredPgs sets field value
func (o *ApiOsdSafeToDestroyGet200Response) SetStoredPgs(v []string) {
	o.StoredPgs = v
}

func (o ApiOsdSafeToDestroyGet200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApiOsdSafeToDestroyGet200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["active"] = o.Active
	toSerialize["is_safe_to_destroy"] = o.IsSafeToDestroy
	toSerialize["missing_stats"] = o.MissingStats
	toSerialize["safe_to_destroy"] = o.SafeToDestroy
	toSerialize["stored_pgs"] = o.StoredPgs
	return toSerialize, nil
}

func (o *ApiOsdSafeToDestroyGet200Response) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"active",
		"is_safe_to_destroy",
		"missing_stats",
		"safe_to_destroy",
		"stored_pgs",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varApiOsdSafeToDestroyGet200Response := _ApiOsdSafeToDestroyGet200Response{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varApiOsdSafeToDestroyGet200Response)

	if err != nil {
		return err
	}

	*o = ApiOsdSafeToDestroyGet200Response(varApiOsdSafeToDestroyGet200Response)

	return err
}

type NullableApiOsdSafeToDestroyGet200Response struct {
	value *ApiOsdSafeToDestroyGet200Response
	isSet bool
}

func (v NullableApiOsdSafeToDestroyGet200Response) Get() *ApiOsdSafeToDestroyGet200Response {
	return v.value
}

func (v *NullableApiOsdSafeToDestroyGet200Response) Set(val *ApiOsdSafeToDestroyGet200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableApiOsdSafeToDestroyGet200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableApiOsdSafeToDestroyGet200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiOsdSafeToDestroyGet200Response(val *ApiOsdSafeToDestroyGet200Response) *NullableApiOsdSafeToDestroyGet200Response {
	return &NullableApiOsdSafeToDestroyGet200Response{value: val, isSet: true}
}

func (v NullableApiOsdSafeToDestroyGet200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiOsdSafeToDestroyGet200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


