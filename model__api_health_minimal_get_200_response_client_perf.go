/*
Ceph REST API

This is the official Ceph REST API

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ceph

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ApiHealthMinimalGet200ResponseClientPerf type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApiHealthMinimalGet200ResponseClientPerf{}

// ApiHealthMinimalGet200ResponseClientPerf 
type ApiHealthMinimalGet200ResponseClientPerf struct {
	// 
	ReadBytesSec int32 `json:"read_bytes_sec"`
	// 
	ReadOpPerSec int32 `json:"read_op_per_sec"`
	// 
	RecoveringBytesPerSec int32 `json:"recovering_bytes_per_sec"`
	// 
	WriteBytesSec int32 `json:"write_bytes_sec"`
	// 
	WriteOpPerSec int32 `json:"write_op_per_sec"`
}

type _ApiHealthMinimalGet200ResponseClientPerf ApiHealthMinimalGet200ResponseClientPerf

// NewApiHealthMinimalGet200ResponseClientPerf instantiates a new ApiHealthMinimalGet200ResponseClientPerf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiHealthMinimalGet200ResponseClientPerf(readBytesSec int32, readOpPerSec int32, recoveringBytesPerSec int32, writeBytesSec int32, writeOpPerSec int32) *ApiHealthMinimalGet200ResponseClientPerf {
	this := ApiHealthMinimalGet200ResponseClientPerf{}
	this.ReadBytesSec = readBytesSec
	this.ReadOpPerSec = readOpPerSec
	this.RecoveringBytesPerSec = recoveringBytesPerSec
	this.WriteBytesSec = writeBytesSec
	this.WriteOpPerSec = writeOpPerSec
	return &this
}

// NewApiHealthMinimalGet200ResponseClientPerfWithDefaults instantiates a new ApiHealthMinimalGet200ResponseClientPerf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiHealthMinimalGet200ResponseClientPerfWithDefaults() *ApiHealthMinimalGet200ResponseClientPerf {
	this := ApiHealthMinimalGet200ResponseClientPerf{}
	return &this
}

// GetReadBytesSec returns the ReadBytesSec field value
func (o *ApiHealthMinimalGet200ResponseClientPerf) GetReadBytesSec() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.ReadBytesSec
}

// GetReadBytesSecOk returns a tuple with the ReadBytesSec field value
// and a boolean to check if the value has been set.
func (o *ApiHealthMinimalGet200ResponseClientPerf) GetReadBytesSecOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ReadBytesSec, true
}

// SetReadBytesSec sets field value
func (o *ApiHealthMinimalGet200ResponseClientPerf) SetReadBytesSec(v int32) {
	o.ReadBytesSec = v
}

// GetReadOpPerSec returns the ReadOpPerSec field value
func (o *ApiHealthMinimalGet200ResponseClientPerf) GetReadOpPerSec() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.ReadOpPerSec
}

// GetReadOpPerSecOk returns a tuple with the ReadOpPerSec field value
// and a boolean to check if the value has been set.
func (o *ApiHealthMinimalGet200ResponseClientPerf) GetReadOpPerSecOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ReadOpPerSec, true
}

// SetReadOpPerSec sets field value
func (o *ApiHealthMinimalGet200ResponseClientPerf) SetReadOpPerSec(v int32) {
	o.ReadOpPerSec = v
}

// GetRecoveringBytesPerSec returns the RecoveringBytesPerSec field value
func (o *ApiHealthMinimalGet200ResponseClientPerf) GetRecoveringBytesPerSec() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.RecoveringBytesPerSec
}

// GetRecoveringBytesPerSecOk returns a tuple with the RecoveringBytesPerSec field value
// and a boolean to check if the value has been set.
func (o *ApiHealthMinimalGet200ResponseClientPerf) GetRecoveringBytesPerSecOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RecoveringBytesPerSec, true
}

// SetRecoveringBytesPerSec sets field value
func (o *ApiHealthMinimalGet200ResponseClientPerf) SetRecoveringBytesPerSec(v int32) {
	o.RecoveringBytesPerSec = v
}

// GetWriteBytesSec returns the WriteBytesSec field value
func (o *ApiHealthMinimalGet200ResponseClientPerf) GetWriteBytesSec() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.WriteBytesSec
}

// GetWriteBytesSecOk returns a tuple with the WriteBytesSec field value
// and a boolean to check if the value has been set.
func (o *ApiHealthMinimalGet200ResponseClientPerf) GetWriteBytesSecOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.WriteBytesSec, true
}

// SetWriteBytesSec sets field value
func (o *ApiHealthMinimalGet200ResponseClientPerf) SetWriteBytesSec(v int32) {
	o.WriteBytesSec = v
}

// GetWriteOpPerSec returns the WriteOpPerSec field value
func (o *ApiHealthMinimalGet200ResponseClientPerf) GetWriteOpPerSec() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.WriteOpPerSec
}

// GetWriteOpPerSecOk returns a tuple with the WriteOpPerSec field value
// and a boolean to check if the value has been set.
func (o *ApiHealthMinimalGet200ResponseClientPerf) GetWriteOpPerSecOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.WriteOpPerSec, true
}

// SetWriteOpPerSec sets field value
func (o *ApiHealthMinimalGet200ResponseClientPerf) SetWriteOpPerSec(v int32) {
	o.WriteOpPerSec = v
}

func (o ApiHealthMinimalGet200ResponseClientPerf) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApiHealthMinimalGet200ResponseClientPerf) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["read_bytes_sec"] = o.ReadBytesSec
	toSerialize["read_op_per_sec"] = o.ReadOpPerSec
	toSerialize["recovering_bytes_per_sec"] = o.RecoveringBytesPerSec
	toSerialize["write_bytes_sec"] = o.WriteBytesSec
	toSerialize["write_op_per_sec"] = o.WriteOpPerSec
	return toSerialize, nil
}

func (o *ApiHealthMinimalGet200ResponseClientPerf) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"read_bytes_sec",
		"read_op_per_sec",
		"recovering_bytes_per_sec",
		"write_bytes_sec",
		"write_op_per_sec",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varApiHealthMinimalGet200ResponseClientPerf := _ApiHealthMinimalGet200ResponseClientPerf{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varApiHealthMinimalGet200ResponseClientPerf)

	if err != nil {
		return err
	}

	*o = ApiHealthMinimalGet200ResponseClientPerf(varApiHealthMinimalGet200ResponseClientPerf)

	return err
}

type NullableApiHealthMinimalGet200ResponseClientPerf struct {
	value *ApiHealthMinimalGet200ResponseClientPerf
	isSet bool
}

func (v NullableApiHealthMinimalGet200ResponseClientPerf) Get() *ApiHealthMinimalGet200ResponseClientPerf {
	return v.value
}

func (v *NullableApiHealthMinimalGet200ResponseClientPerf) Set(val *ApiHealthMinimalGet200ResponseClientPerf) {
	v.value = val
	v.isSet = true
}

func (v NullableApiHealthMinimalGet200ResponseClientPerf) IsSet() bool {
	return v.isSet
}

func (v *NullableApiHealthMinimalGet200ResponseClientPerf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiHealthMinimalGet200ResponseClientPerf(val *ApiHealthMinimalGet200ResponseClientPerf) *NullableApiHealthMinimalGet200ResponseClientPerf {
	return &NullableApiHealthMinimalGet200ResponseClientPerf{value: val, isSet: true}
}

func (v NullableApiHealthMinimalGet200ResponseClientPerf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiHealthMinimalGet200ResponseClientPerf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


