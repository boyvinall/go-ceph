/*
Ceph REST API

This is the official Ceph REST API

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ceph

import (
	"encoding/json"
)

// checks if the ApiOsdFlagsIndividualPutRequestFlags type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApiOsdFlagsIndividualPutRequestFlags{}

// ApiOsdFlagsIndividualPutRequestFlags Directory of flags to set or unset. The flags `noin`, `noout`, `noup` and `nodown` are going to be considered only.
type ApiOsdFlagsIndividualPutRequestFlags struct {
	// Sets/unsets `nodown`
	Nodown *bool `json:"nodown,omitempty"`
	// Sets/unsets `noin`
	Noin *bool `json:"noin,omitempty"`
	// Sets/unsets `noout`
	Noout *bool `json:"noout,omitempty"`
	// Sets/unsets `noup`
	Noup *bool `json:"noup,omitempty"`
}

// NewApiOsdFlagsIndividualPutRequestFlags instantiates a new ApiOsdFlagsIndividualPutRequestFlags object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiOsdFlagsIndividualPutRequestFlags() *ApiOsdFlagsIndividualPutRequestFlags {
	this := ApiOsdFlagsIndividualPutRequestFlags{}
	return &this
}

// NewApiOsdFlagsIndividualPutRequestFlagsWithDefaults instantiates a new ApiOsdFlagsIndividualPutRequestFlags object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiOsdFlagsIndividualPutRequestFlagsWithDefaults() *ApiOsdFlagsIndividualPutRequestFlags {
	this := ApiOsdFlagsIndividualPutRequestFlags{}
	return &this
}

// GetNodown returns the Nodown field value if set, zero value otherwise.
func (o *ApiOsdFlagsIndividualPutRequestFlags) GetNodown() bool {
	if o == nil || IsNil(o.Nodown) {
		var ret bool
		return ret
	}
	return *o.Nodown
}

// GetNodownOk returns a tuple with the Nodown field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiOsdFlagsIndividualPutRequestFlags) GetNodownOk() (*bool, bool) {
	if o == nil || IsNil(o.Nodown) {
		return nil, false
	}
	return o.Nodown, true
}

// HasNodown returns a boolean if a field has been set.
func (o *ApiOsdFlagsIndividualPutRequestFlags) HasNodown() bool {
	if o != nil && !IsNil(o.Nodown) {
		return true
	}

	return false
}

// SetNodown gets a reference to the given bool and assigns it to the Nodown field.
func (o *ApiOsdFlagsIndividualPutRequestFlags) SetNodown(v bool) {
	o.Nodown = &v
}

// GetNoin returns the Noin field value if set, zero value otherwise.
func (o *ApiOsdFlagsIndividualPutRequestFlags) GetNoin() bool {
	if o == nil || IsNil(o.Noin) {
		var ret bool
		return ret
	}
	return *o.Noin
}

// GetNoinOk returns a tuple with the Noin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiOsdFlagsIndividualPutRequestFlags) GetNoinOk() (*bool, bool) {
	if o == nil || IsNil(o.Noin) {
		return nil, false
	}
	return o.Noin, true
}

// HasNoin returns a boolean if a field has been set.
func (o *ApiOsdFlagsIndividualPutRequestFlags) HasNoin() bool {
	if o != nil && !IsNil(o.Noin) {
		return true
	}

	return false
}

// SetNoin gets a reference to the given bool and assigns it to the Noin field.
func (o *ApiOsdFlagsIndividualPutRequestFlags) SetNoin(v bool) {
	o.Noin = &v
}

// GetNoout returns the Noout field value if set, zero value otherwise.
func (o *ApiOsdFlagsIndividualPutRequestFlags) GetNoout() bool {
	if o == nil || IsNil(o.Noout) {
		var ret bool
		return ret
	}
	return *o.Noout
}

// GetNooutOk returns a tuple with the Noout field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiOsdFlagsIndividualPutRequestFlags) GetNooutOk() (*bool, bool) {
	if o == nil || IsNil(o.Noout) {
		return nil, false
	}
	return o.Noout, true
}

// HasNoout returns a boolean if a field has been set.
func (o *ApiOsdFlagsIndividualPutRequestFlags) HasNoout() bool {
	if o != nil && !IsNil(o.Noout) {
		return true
	}

	return false
}

// SetNoout gets a reference to the given bool and assigns it to the Noout field.
func (o *ApiOsdFlagsIndividualPutRequestFlags) SetNoout(v bool) {
	o.Noout = &v
}

// GetNoup returns the Noup field value if set, zero value otherwise.
func (o *ApiOsdFlagsIndividualPutRequestFlags) GetNoup() bool {
	if o == nil || IsNil(o.Noup) {
		var ret bool
		return ret
	}
	return *o.Noup
}

// GetNoupOk returns a tuple with the Noup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiOsdFlagsIndividualPutRequestFlags) GetNoupOk() (*bool, bool) {
	if o == nil || IsNil(o.Noup) {
		return nil, false
	}
	return o.Noup, true
}

// HasNoup returns a boolean if a field has been set.
func (o *ApiOsdFlagsIndividualPutRequestFlags) HasNoup() bool {
	if o != nil && !IsNil(o.Noup) {
		return true
	}

	return false
}

// SetNoup gets a reference to the given bool and assigns it to the Noup field.
func (o *ApiOsdFlagsIndividualPutRequestFlags) SetNoup(v bool) {
	o.Noup = &v
}

func (o ApiOsdFlagsIndividualPutRequestFlags) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApiOsdFlagsIndividualPutRequestFlags) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Nodown) {
		toSerialize["nodown"] = o.Nodown
	}
	if !IsNil(o.Noin) {
		toSerialize["noin"] = o.Noin
	}
	if !IsNil(o.Noout) {
		toSerialize["noout"] = o.Noout
	}
	if !IsNil(o.Noup) {
		toSerialize["noup"] = o.Noup
	}
	return toSerialize, nil
}

type NullableApiOsdFlagsIndividualPutRequestFlags struct {
	value *ApiOsdFlagsIndividualPutRequestFlags
	isSet bool
}

func (v NullableApiOsdFlagsIndividualPutRequestFlags) Get() *ApiOsdFlagsIndividualPutRequestFlags {
	return v.value
}

func (v *NullableApiOsdFlagsIndividualPutRequestFlags) Set(val *ApiOsdFlagsIndividualPutRequestFlags) {
	v.value = val
	v.isSet = true
}

func (v NullableApiOsdFlagsIndividualPutRequestFlags) IsSet() bool {
	return v.isSet
}

func (v *NullableApiOsdFlagsIndividualPutRequestFlags) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiOsdFlagsIndividualPutRequestFlags(val *ApiOsdFlagsIndividualPutRequestFlags) *NullableApiOsdFlagsIndividualPutRequestFlags {
	return &NullableApiOsdFlagsIndividualPutRequestFlags{value: val, isSet: true}
}

func (v NullableApiOsdFlagsIndividualPutRequestFlags) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiOsdFlagsIndividualPutRequestFlags) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


