/*
Ceph REST API

This is the official Ceph REST API

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ceph

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ApiHealthMinimalGet200ResponseIscsiDaemons type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApiHealthMinimalGet200ResponseIscsiDaemons{}

// ApiHealthMinimalGet200ResponseIscsiDaemons 
type ApiHealthMinimalGet200ResponseIscsiDaemons struct {
	// 
	Down int32 `json:"down"`
	// 
	Up int32 `json:"up"`
}

type _ApiHealthMinimalGet200ResponseIscsiDaemons ApiHealthMinimalGet200ResponseIscsiDaemons

// NewApiHealthMinimalGet200ResponseIscsiDaemons instantiates a new ApiHealthMinimalGet200ResponseIscsiDaemons object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiHealthMinimalGet200ResponseIscsiDaemons(down int32, up int32) *ApiHealthMinimalGet200ResponseIscsiDaemons {
	this := ApiHealthMinimalGet200ResponseIscsiDaemons{}
	this.Down = down
	this.Up = up
	return &this
}

// NewApiHealthMinimalGet200ResponseIscsiDaemonsWithDefaults instantiates a new ApiHealthMinimalGet200ResponseIscsiDaemons object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiHealthMinimalGet200ResponseIscsiDaemonsWithDefaults() *ApiHealthMinimalGet200ResponseIscsiDaemons {
	this := ApiHealthMinimalGet200ResponseIscsiDaemons{}
	return &this
}

// GetDown returns the Down field value
func (o *ApiHealthMinimalGet200ResponseIscsiDaemons) GetDown() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Down
}

// GetDownOk returns a tuple with the Down field value
// and a boolean to check if the value has been set.
func (o *ApiHealthMinimalGet200ResponseIscsiDaemons) GetDownOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Down, true
}

// SetDown sets field value
func (o *ApiHealthMinimalGet200ResponseIscsiDaemons) SetDown(v int32) {
	o.Down = v
}

// GetUp returns the Up field value
func (o *ApiHealthMinimalGet200ResponseIscsiDaemons) GetUp() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Up
}

// GetUpOk returns a tuple with the Up field value
// and a boolean to check if the value has been set.
func (o *ApiHealthMinimalGet200ResponseIscsiDaemons) GetUpOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Up, true
}

// SetUp sets field value
func (o *ApiHealthMinimalGet200ResponseIscsiDaemons) SetUp(v int32) {
	o.Up = v
}

func (o ApiHealthMinimalGet200ResponseIscsiDaemons) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApiHealthMinimalGet200ResponseIscsiDaemons) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["down"] = o.Down
	toSerialize["up"] = o.Up
	return toSerialize, nil
}

func (o *ApiHealthMinimalGet200ResponseIscsiDaemons) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"down",
		"up",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varApiHealthMinimalGet200ResponseIscsiDaemons := _ApiHealthMinimalGet200ResponseIscsiDaemons{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varApiHealthMinimalGet200ResponseIscsiDaemons)

	if err != nil {
		return err
	}

	*o = ApiHealthMinimalGet200ResponseIscsiDaemons(varApiHealthMinimalGet200ResponseIscsiDaemons)

	return err
}

type NullableApiHealthMinimalGet200ResponseIscsiDaemons struct {
	value *ApiHealthMinimalGet200ResponseIscsiDaemons
	isSet bool
}

func (v NullableApiHealthMinimalGet200ResponseIscsiDaemons) Get() *ApiHealthMinimalGet200ResponseIscsiDaemons {
	return v.value
}

func (v *NullableApiHealthMinimalGet200ResponseIscsiDaemons) Set(val *ApiHealthMinimalGet200ResponseIscsiDaemons) {
	v.value = val
	v.isSet = true
}

func (v NullableApiHealthMinimalGet200ResponseIscsiDaemons) IsSet() bool {
	return v.isSet
}

func (v *NullableApiHealthMinimalGet200ResponseIscsiDaemons) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiHealthMinimalGet200ResponseIscsiDaemons(val *ApiHealthMinimalGet200ResponseIscsiDaemons) *NullableApiHealthMinimalGet200ResponseIscsiDaemons {
	return &NullableApiHealthMinimalGet200ResponseIscsiDaemons{value: val, isSet: true}
}

func (v NullableApiHealthMinimalGet200ResponseIscsiDaemons) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiHealthMinimalGet200ResponseIscsiDaemons) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


