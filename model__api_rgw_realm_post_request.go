/*
Ceph REST API

This is the official Ceph REST API

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ceph

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ApiRgwRealmPostRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApiRgwRealmPostRequest{}

// ApiRgwRealmPostRequest struct for ApiRgwRealmPostRequest
type ApiRgwRealmPostRequest struct {
	Default string `json:"default"`
	RealmName string `json:"realm_name"`
}

type _ApiRgwRealmPostRequest ApiRgwRealmPostRequest

// NewApiRgwRealmPostRequest instantiates a new ApiRgwRealmPostRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiRgwRealmPostRequest(default_ string, realmName string) *ApiRgwRealmPostRequest {
	this := ApiRgwRealmPostRequest{}
	this.Default = default_
	this.RealmName = realmName
	return &this
}

// NewApiRgwRealmPostRequestWithDefaults instantiates a new ApiRgwRealmPostRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiRgwRealmPostRequestWithDefaults() *ApiRgwRealmPostRequest {
	this := ApiRgwRealmPostRequest{}
	return &this
}

// GetDefault returns the Default field value
func (o *ApiRgwRealmPostRequest) GetDefault() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Default
}

// GetDefaultOk returns a tuple with the Default field value
// and a boolean to check if the value has been set.
func (o *ApiRgwRealmPostRequest) GetDefaultOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Default, true
}

// SetDefault sets field value
func (o *ApiRgwRealmPostRequest) SetDefault(v string) {
	o.Default = v
}

// GetRealmName returns the RealmName field value
func (o *ApiRgwRealmPostRequest) GetRealmName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RealmName
}

// GetRealmNameOk returns a tuple with the RealmName field value
// and a boolean to check if the value has been set.
func (o *ApiRgwRealmPostRequest) GetRealmNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RealmName, true
}

// SetRealmName sets field value
func (o *ApiRgwRealmPostRequest) SetRealmName(v string) {
	o.RealmName = v
}

func (o ApiRgwRealmPostRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApiRgwRealmPostRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["default"] = o.Default
	toSerialize["realm_name"] = o.RealmName
	return toSerialize, nil
}

func (o *ApiRgwRealmPostRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"default",
		"realm_name",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varApiRgwRealmPostRequest := _ApiRgwRealmPostRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varApiRgwRealmPostRequest)

	if err != nil {
		return err
	}

	*o = ApiRgwRealmPostRequest(varApiRgwRealmPostRequest)

	return err
}

type NullableApiRgwRealmPostRequest struct {
	value *ApiRgwRealmPostRequest
	isSet bool
}

func (v NullableApiRgwRealmPostRequest) Get() *ApiRgwRealmPostRequest {
	return v.value
}

func (v *NullableApiRgwRealmPostRequest) Set(val *ApiRgwRealmPostRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableApiRgwRealmPostRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableApiRgwRealmPostRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiRgwRealmPostRequest(val *ApiRgwRealmPostRequest) *NullableApiRgwRealmPostRequest {
	return &NullableApiRgwRealmPostRequest{value: val, isSet: true}
}

func (v NullableApiRgwRealmPostRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiRgwRealmPostRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


