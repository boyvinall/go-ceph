/*
Ceph REST API

This is the official Ceph REST API

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ceph

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ApiHostHostnameInventoryGet200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApiHostHostnameInventoryGet200Response{}

// ApiHostHostnameInventoryGet200Response struct for ApiHostHostnameInventoryGet200Response
type ApiHostHostnameInventoryGet200Response struct {
	// Host address
	Addr string `json:"addr"`
	// Host devices
	Devices []ApiHostHostnameInventoryGet200ResponseDevicesInner `json:"devices"`
	// Host labels
	Labels []string `json:"labels"`
	// Hostname
	Name string `json:"name"`
}

type _ApiHostHostnameInventoryGet200Response ApiHostHostnameInventoryGet200Response

// NewApiHostHostnameInventoryGet200Response instantiates a new ApiHostHostnameInventoryGet200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiHostHostnameInventoryGet200Response(addr string, devices []ApiHostHostnameInventoryGet200ResponseDevicesInner, labels []string, name string) *ApiHostHostnameInventoryGet200Response {
	this := ApiHostHostnameInventoryGet200Response{}
	this.Addr = addr
	this.Devices = devices
	this.Labels = labels
	this.Name = name
	return &this
}

// NewApiHostHostnameInventoryGet200ResponseWithDefaults instantiates a new ApiHostHostnameInventoryGet200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiHostHostnameInventoryGet200ResponseWithDefaults() *ApiHostHostnameInventoryGet200Response {
	this := ApiHostHostnameInventoryGet200Response{}
	return &this
}

// GetAddr returns the Addr field value
func (o *ApiHostHostnameInventoryGet200Response) GetAddr() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Addr
}

// GetAddrOk returns a tuple with the Addr field value
// and a boolean to check if the value has been set.
func (o *ApiHostHostnameInventoryGet200Response) GetAddrOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Addr, true
}

// SetAddr sets field value
func (o *ApiHostHostnameInventoryGet200Response) SetAddr(v string) {
	o.Addr = v
}

// GetDevices returns the Devices field value
func (o *ApiHostHostnameInventoryGet200Response) GetDevices() []ApiHostHostnameInventoryGet200ResponseDevicesInner {
	if o == nil {
		var ret []ApiHostHostnameInventoryGet200ResponseDevicesInner
		return ret
	}

	return o.Devices
}

// GetDevicesOk returns a tuple with the Devices field value
// and a boolean to check if the value has been set.
func (o *ApiHostHostnameInventoryGet200Response) GetDevicesOk() ([]ApiHostHostnameInventoryGet200ResponseDevicesInner, bool) {
	if o == nil {
		return nil, false
	}
	return o.Devices, true
}

// SetDevices sets field value
func (o *ApiHostHostnameInventoryGet200Response) SetDevices(v []ApiHostHostnameInventoryGet200ResponseDevicesInner) {
	o.Devices = v
}

// GetLabels returns the Labels field value
func (o *ApiHostHostnameInventoryGet200Response) GetLabels() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Labels
}

// GetLabelsOk returns a tuple with the Labels field value
// and a boolean to check if the value has been set.
func (o *ApiHostHostnameInventoryGet200Response) GetLabelsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Labels, true
}

// SetLabels sets field value
func (o *ApiHostHostnameInventoryGet200Response) SetLabels(v []string) {
	o.Labels = v
}

// GetName returns the Name field value
func (o *ApiHostHostnameInventoryGet200Response) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *ApiHostHostnameInventoryGet200Response) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *ApiHostHostnameInventoryGet200Response) SetName(v string) {
	o.Name = v
}

func (o ApiHostHostnameInventoryGet200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApiHostHostnameInventoryGet200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["addr"] = o.Addr
	toSerialize["devices"] = o.Devices
	toSerialize["labels"] = o.Labels
	toSerialize["name"] = o.Name
	return toSerialize, nil
}

func (o *ApiHostHostnameInventoryGet200Response) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"addr",
		"devices",
		"labels",
		"name",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varApiHostHostnameInventoryGet200Response := _ApiHostHostnameInventoryGet200Response{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varApiHostHostnameInventoryGet200Response)

	if err != nil {
		return err
	}

	*o = ApiHostHostnameInventoryGet200Response(varApiHostHostnameInventoryGet200Response)

	return err
}

type NullableApiHostHostnameInventoryGet200Response struct {
	value *ApiHostHostnameInventoryGet200Response
	isSet bool
}

func (v NullableApiHostHostnameInventoryGet200Response) Get() *ApiHostHostnameInventoryGet200Response {
	return v.value
}

func (v *NullableApiHostHostnameInventoryGet200Response) Set(val *ApiHostHostnameInventoryGet200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableApiHostHostnameInventoryGet200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableApiHostHostnameInventoryGet200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiHostHostnameInventoryGet200Response(val *ApiHostHostnameInventoryGet200Response) *NullableApiHostHostnameInventoryGet200Response {
	return &NullableApiHostHostnameInventoryGet200Response{value: val, isSet: true}
}

func (v NullableApiHostHostnameInventoryGet200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiHostHostnameInventoryGet200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


