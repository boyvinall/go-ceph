/*
Ceph REST API

This is the official Ceph REST API

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ceph

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ApiCephfsFsIdQuotaGet200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApiCephfsFsIdQuotaGet200Response{}

// ApiCephfsFsIdQuotaGet200Response struct for ApiCephfsFsIdQuotaGet200Response
type ApiCephfsFsIdQuotaGet200Response struct {
	// 
	MaxBytes int32 `json:"max_bytes"`
	// 
	MaxFiles int32 `json:"max_files"`
}

type _ApiCephfsFsIdQuotaGet200Response ApiCephfsFsIdQuotaGet200Response

// NewApiCephfsFsIdQuotaGet200Response instantiates a new ApiCephfsFsIdQuotaGet200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiCephfsFsIdQuotaGet200Response(maxBytes int32, maxFiles int32) *ApiCephfsFsIdQuotaGet200Response {
	this := ApiCephfsFsIdQuotaGet200Response{}
	this.MaxBytes = maxBytes
	this.MaxFiles = maxFiles
	return &this
}

// NewApiCephfsFsIdQuotaGet200ResponseWithDefaults instantiates a new ApiCephfsFsIdQuotaGet200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiCephfsFsIdQuotaGet200ResponseWithDefaults() *ApiCephfsFsIdQuotaGet200Response {
	this := ApiCephfsFsIdQuotaGet200Response{}
	return &this
}

// GetMaxBytes returns the MaxBytes field value
func (o *ApiCephfsFsIdQuotaGet200Response) GetMaxBytes() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.MaxBytes
}

// GetMaxBytesOk returns a tuple with the MaxBytes field value
// and a boolean to check if the value has been set.
func (o *ApiCephfsFsIdQuotaGet200Response) GetMaxBytesOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MaxBytes, true
}

// SetMaxBytes sets field value
func (o *ApiCephfsFsIdQuotaGet200Response) SetMaxBytes(v int32) {
	o.MaxBytes = v
}

// GetMaxFiles returns the MaxFiles field value
func (o *ApiCephfsFsIdQuotaGet200Response) GetMaxFiles() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.MaxFiles
}

// GetMaxFilesOk returns a tuple with the MaxFiles field value
// and a boolean to check if the value has been set.
func (o *ApiCephfsFsIdQuotaGet200Response) GetMaxFilesOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MaxFiles, true
}

// SetMaxFiles sets field value
func (o *ApiCephfsFsIdQuotaGet200Response) SetMaxFiles(v int32) {
	o.MaxFiles = v
}

func (o ApiCephfsFsIdQuotaGet200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApiCephfsFsIdQuotaGet200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["max_bytes"] = o.MaxBytes
	toSerialize["max_files"] = o.MaxFiles
	return toSerialize, nil
}

func (o *ApiCephfsFsIdQuotaGet200Response) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"max_bytes",
		"max_files",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varApiCephfsFsIdQuotaGet200Response := _ApiCephfsFsIdQuotaGet200Response{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varApiCephfsFsIdQuotaGet200Response)

	if err != nil {
		return err
	}

	*o = ApiCephfsFsIdQuotaGet200Response(varApiCephfsFsIdQuotaGet200Response)

	return err
}

type NullableApiCephfsFsIdQuotaGet200Response struct {
	value *ApiCephfsFsIdQuotaGet200Response
	isSet bool
}

func (v NullableApiCephfsFsIdQuotaGet200Response) Get() *ApiCephfsFsIdQuotaGet200Response {
	return v.value
}

func (v *NullableApiCephfsFsIdQuotaGet200Response) Set(val *ApiCephfsFsIdQuotaGet200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableApiCephfsFsIdQuotaGet200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableApiCephfsFsIdQuotaGet200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiCephfsFsIdQuotaGet200Response(val *ApiCephfsFsIdQuotaGet200Response) *NullableApiCephfsFsIdQuotaGet200Response {
	return &NullableApiCephfsFsIdQuotaGet200Response{value: val, isSet: true}
}

func (v NullableApiCephfsFsIdQuotaGet200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiCephfsFsIdQuotaGet200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


