/*
Ceph REST API

This is the official Ceph REST API

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ceph

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ApiBlockMirroringPoolPoolNamePeerPostRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApiBlockMirroringPoolPoolNamePeerPostRequest{}

// ApiBlockMirroringPoolPoolNamePeerPostRequest struct for ApiBlockMirroringPoolPoolNamePeerPostRequest
type ApiBlockMirroringPoolPoolNamePeerPostRequest struct {
	ClientId string `json:"client_id"`
	ClusterName string `json:"cluster_name"`
	Key *string `json:"key,omitempty"`
	MonHost *string `json:"mon_host,omitempty"`
}

type _ApiBlockMirroringPoolPoolNamePeerPostRequest ApiBlockMirroringPoolPoolNamePeerPostRequest

// NewApiBlockMirroringPoolPoolNamePeerPostRequest instantiates a new ApiBlockMirroringPoolPoolNamePeerPostRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiBlockMirroringPoolPoolNamePeerPostRequest(clientId string, clusterName string) *ApiBlockMirroringPoolPoolNamePeerPostRequest {
	this := ApiBlockMirroringPoolPoolNamePeerPostRequest{}
	this.ClientId = clientId
	this.ClusterName = clusterName
	return &this
}

// NewApiBlockMirroringPoolPoolNamePeerPostRequestWithDefaults instantiates a new ApiBlockMirroringPoolPoolNamePeerPostRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiBlockMirroringPoolPoolNamePeerPostRequestWithDefaults() *ApiBlockMirroringPoolPoolNamePeerPostRequest {
	this := ApiBlockMirroringPoolPoolNamePeerPostRequest{}
	return &this
}

// GetClientId returns the ClientId field value
func (o *ApiBlockMirroringPoolPoolNamePeerPostRequest) GetClientId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ClientId
}

// GetClientIdOk returns a tuple with the ClientId field value
// and a boolean to check if the value has been set.
func (o *ApiBlockMirroringPoolPoolNamePeerPostRequest) GetClientIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ClientId, true
}

// SetClientId sets field value
func (o *ApiBlockMirroringPoolPoolNamePeerPostRequest) SetClientId(v string) {
	o.ClientId = v
}

// GetClusterName returns the ClusterName field value
func (o *ApiBlockMirroringPoolPoolNamePeerPostRequest) GetClusterName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ClusterName
}

// GetClusterNameOk returns a tuple with the ClusterName field value
// and a boolean to check if the value has been set.
func (o *ApiBlockMirroringPoolPoolNamePeerPostRequest) GetClusterNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ClusterName, true
}

// SetClusterName sets field value
func (o *ApiBlockMirroringPoolPoolNamePeerPostRequest) SetClusterName(v string) {
	o.ClusterName = v
}

// GetKey returns the Key field value if set, zero value otherwise.
func (o *ApiBlockMirroringPoolPoolNamePeerPostRequest) GetKey() string {
	if o == nil || IsNil(o.Key) {
		var ret string
		return ret
	}
	return *o.Key
}

// GetKeyOk returns a tuple with the Key field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiBlockMirroringPoolPoolNamePeerPostRequest) GetKeyOk() (*string, bool) {
	if o == nil || IsNil(o.Key) {
		return nil, false
	}
	return o.Key, true
}

// HasKey returns a boolean if a field has been set.
func (o *ApiBlockMirroringPoolPoolNamePeerPostRequest) HasKey() bool {
	if o != nil && !IsNil(o.Key) {
		return true
	}

	return false
}

// SetKey gets a reference to the given string and assigns it to the Key field.
func (o *ApiBlockMirroringPoolPoolNamePeerPostRequest) SetKey(v string) {
	o.Key = &v
}

// GetMonHost returns the MonHost field value if set, zero value otherwise.
func (o *ApiBlockMirroringPoolPoolNamePeerPostRequest) GetMonHost() string {
	if o == nil || IsNil(o.MonHost) {
		var ret string
		return ret
	}
	return *o.MonHost
}

// GetMonHostOk returns a tuple with the MonHost field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiBlockMirroringPoolPoolNamePeerPostRequest) GetMonHostOk() (*string, bool) {
	if o == nil || IsNil(o.MonHost) {
		return nil, false
	}
	return o.MonHost, true
}

// HasMonHost returns a boolean if a field has been set.
func (o *ApiBlockMirroringPoolPoolNamePeerPostRequest) HasMonHost() bool {
	if o != nil && !IsNil(o.MonHost) {
		return true
	}

	return false
}

// SetMonHost gets a reference to the given string and assigns it to the MonHost field.
func (o *ApiBlockMirroringPoolPoolNamePeerPostRequest) SetMonHost(v string) {
	o.MonHost = &v
}

func (o ApiBlockMirroringPoolPoolNamePeerPostRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApiBlockMirroringPoolPoolNamePeerPostRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["client_id"] = o.ClientId
	toSerialize["cluster_name"] = o.ClusterName
	if !IsNil(o.Key) {
		toSerialize["key"] = o.Key
	}
	if !IsNil(o.MonHost) {
		toSerialize["mon_host"] = o.MonHost
	}
	return toSerialize, nil
}

func (o *ApiBlockMirroringPoolPoolNamePeerPostRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"client_id",
		"cluster_name",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varApiBlockMirroringPoolPoolNamePeerPostRequest := _ApiBlockMirroringPoolPoolNamePeerPostRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varApiBlockMirroringPoolPoolNamePeerPostRequest)

	if err != nil {
		return err
	}

	*o = ApiBlockMirroringPoolPoolNamePeerPostRequest(varApiBlockMirroringPoolPoolNamePeerPostRequest)

	return err
}

type NullableApiBlockMirroringPoolPoolNamePeerPostRequest struct {
	value *ApiBlockMirroringPoolPoolNamePeerPostRequest
	isSet bool
}

func (v NullableApiBlockMirroringPoolPoolNamePeerPostRequest) Get() *ApiBlockMirroringPoolPoolNamePeerPostRequest {
	return v.value
}

func (v *NullableApiBlockMirroringPoolPoolNamePeerPostRequest) Set(val *ApiBlockMirroringPoolPoolNamePeerPostRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableApiBlockMirroringPoolPoolNamePeerPostRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableApiBlockMirroringPoolPoolNamePeerPostRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiBlockMirroringPoolPoolNamePeerPostRequest(val *ApiBlockMirroringPoolPoolNamePeerPostRequest) *NullableApiBlockMirroringPoolPoolNamePeerPostRequest {
	return &NullableApiBlockMirroringPoolPoolNamePeerPostRequest{value: val, isSet: true}
}

func (v NullableApiBlockMirroringPoolPoolNamePeerPostRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiBlockMirroringPoolPoolNamePeerPostRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


