/*
Ceph REST API

This is the official Ceph REST API

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ceph

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ApiCrushRuleGet200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApiCrushRuleGet200Response{}

// ApiCrushRuleGet200Response struct for ApiCrushRuleGet200Response
type ApiCrushRuleGet200Response struct {
	// Maximum size of Rule
	MaxSize int32 `json:"max_size"`
	// Minimum size of Rule
	MinSize int32 `json:"min_size"`
	// Rule ID
	RuleId int32 `json:"rule_id"`
	// Rule Name
	RuleName string `json:"rule_name"`
	// RuleSet related to the rule
	Ruleset int32 `json:"ruleset"`
	// Steps included in the rule
	Steps []map[string]interface{} `json:"steps"`
	// Type of Rule
	Type int32 `json:"type"`
}

type _ApiCrushRuleGet200Response ApiCrushRuleGet200Response

// NewApiCrushRuleGet200Response instantiates a new ApiCrushRuleGet200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiCrushRuleGet200Response(maxSize int32, minSize int32, ruleId int32, ruleName string, ruleset int32, steps []map[string]interface{}, type_ int32) *ApiCrushRuleGet200Response {
	this := ApiCrushRuleGet200Response{}
	this.MaxSize = maxSize
	this.MinSize = minSize
	this.RuleId = ruleId
	this.RuleName = ruleName
	this.Ruleset = ruleset
	this.Steps = steps
	this.Type = type_
	return &this
}

// NewApiCrushRuleGet200ResponseWithDefaults instantiates a new ApiCrushRuleGet200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiCrushRuleGet200ResponseWithDefaults() *ApiCrushRuleGet200Response {
	this := ApiCrushRuleGet200Response{}
	return &this
}

// GetMaxSize returns the MaxSize field value
func (o *ApiCrushRuleGet200Response) GetMaxSize() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.MaxSize
}

// GetMaxSizeOk returns a tuple with the MaxSize field value
// and a boolean to check if the value has been set.
func (o *ApiCrushRuleGet200Response) GetMaxSizeOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MaxSize, true
}

// SetMaxSize sets field value
func (o *ApiCrushRuleGet200Response) SetMaxSize(v int32) {
	o.MaxSize = v
}

// GetMinSize returns the MinSize field value
func (o *ApiCrushRuleGet200Response) GetMinSize() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.MinSize
}

// GetMinSizeOk returns a tuple with the MinSize field value
// and a boolean to check if the value has been set.
func (o *ApiCrushRuleGet200Response) GetMinSizeOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MinSize, true
}

// SetMinSize sets field value
func (o *ApiCrushRuleGet200Response) SetMinSize(v int32) {
	o.MinSize = v
}

// GetRuleId returns the RuleId field value
func (o *ApiCrushRuleGet200Response) GetRuleId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.RuleId
}

// GetRuleIdOk returns a tuple with the RuleId field value
// and a boolean to check if the value has been set.
func (o *ApiCrushRuleGet200Response) GetRuleIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RuleId, true
}

// SetRuleId sets field value
func (o *ApiCrushRuleGet200Response) SetRuleId(v int32) {
	o.RuleId = v
}

// GetRuleName returns the RuleName field value
func (o *ApiCrushRuleGet200Response) GetRuleName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RuleName
}

// GetRuleNameOk returns a tuple with the RuleName field value
// and a boolean to check if the value has been set.
func (o *ApiCrushRuleGet200Response) GetRuleNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RuleName, true
}

// SetRuleName sets field value
func (o *ApiCrushRuleGet200Response) SetRuleName(v string) {
	o.RuleName = v
}

// GetRuleset returns the Ruleset field value
func (o *ApiCrushRuleGet200Response) GetRuleset() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Ruleset
}

// GetRulesetOk returns a tuple with the Ruleset field value
// and a boolean to check if the value has been set.
func (o *ApiCrushRuleGet200Response) GetRulesetOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Ruleset, true
}

// SetRuleset sets field value
func (o *ApiCrushRuleGet200Response) SetRuleset(v int32) {
	o.Ruleset = v
}

// GetSteps returns the Steps field value
func (o *ApiCrushRuleGet200Response) GetSteps() []map[string]interface{} {
	if o == nil {
		var ret []map[string]interface{}
		return ret
	}

	return o.Steps
}

// GetStepsOk returns a tuple with the Steps field value
// and a boolean to check if the value has been set.
func (o *ApiCrushRuleGet200Response) GetStepsOk() ([]map[string]interface{}, bool) {
	if o == nil {
		return nil, false
	}
	return o.Steps, true
}

// SetSteps sets field value
func (o *ApiCrushRuleGet200Response) SetSteps(v []map[string]interface{}) {
	o.Steps = v
}

// GetType returns the Type field value
func (o *ApiCrushRuleGet200Response) GetType() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *ApiCrushRuleGet200Response) GetTypeOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *ApiCrushRuleGet200Response) SetType(v int32) {
	o.Type = v
}

func (o ApiCrushRuleGet200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApiCrushRuleGet200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["max_size"] = o.MaxSize
	toSerialize["min_size"] = o.MinSize
	toSerialize["rule_id"] = o.RuleId
	toSerialize["rule_name"] = o.RuleName
	toSerialize["ruleset"] = o.Ruleset
	toSerialize["steps"] = o.Steps
	toSerialize["type"] = o.Type
	return toSerialize, nil
}

func (o *ApiCrushRuleGet200Response) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"max_size",
		"min_size",
		"rule_id",
		"rule_name",
		"ruleset",
		"steps",
		"type",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varApiCrushRuleGet200Response := _ApiCrushRuleGet200Response{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varApiCrushRuleGet200Response)

	if err != nil {
		return err
	}

	*o = ApiCrushRuleGet200Response(varApiCrushRuleGet200Response)

	return err
}

type NullableApiCrushRuleGet200Response struct {
	value *ApiCrushRuleGet200Response
	isSet bool
}

func (v NullableApiCrushRuleGet200Response) Get() *ApiCrushRuleGet200Response {
	return v.value
}

func (v *NullableApiCrushRuleGet200Response) Set(val *ApiCrushRuleGet200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableApiCrushRuleGet200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableApiCrushRuleGet200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiCrushRuleGet200Response(val *ApiCrushRuleGet200Response) *NullableApiCrushRuleGet200Response {
	return &NullableApiCrushRuleGet200Response{value: val, isSet: true}
}

func (v NullableApiCrushRuleGet200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiCrushRuleGet200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


