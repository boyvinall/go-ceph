/*
Ceph REST API

This is the official Ceph REST API

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ceph

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ApiMonitorGet200ResponseMonStatusMonmap type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApiMonitorGet200ResponseMonStatusMonmap{}

// ApiMonitorGet200ResponseMonStatusMonmap 
type ApiMonitorGet200ResponseMonStatusMonmap struct {
	// 
	Created string `json:"created"`
	// 
	Epoch int32 `json:"epoch"`
	Features ApiMonitorGet200ResponseMonStatusMonmapFeatures `json:"features"`
	// 
	Fsid string `json:"fsid"`
	// 
	MinMonRelease int32 `json:"min_mon_release"`
	// 
	MinMonReleaseName string `json:"min_mon_release_name"`
	// 
	Modified string `json:"modified"`
	// 
	Mons []ApiMonitorGet200ResponseInQuorumInner `json:"mons"`
}

type _ApiMonitorGet200ResponseMonStatusMonmap ApiMonitorGet200ResponseMonStatusMonmap

// NewApiMonitorGet200ResponseMonStatusMonmap instantiates a new ApiMonitorGet200ResponseMonStatusMonmap object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiMonitorGet200ResponseMonStatusMonmap(created string, epoch int32, features ApiMonitorGet200ResponseMonStatusMonmapFeatures, fsid string, minMonRelease int32, minMonReleaseName string, modified string, mons []ApiMonitorGet200ResponseInQuorumInner) *ApiMonitorGet200ResponseMonStatusMonmap {
	this := ApiMonitorGet200ResponseMonStatusMonmap{}
	this.Created = created
	this.Epoch = epoch
	this.Features = features
	this.Fsid = fsid
	this.MinMonRelease = minMonRelease
	this.MinMonReleaseName = minMonReleaseName
	this.Modified = modified
	this.Mons = mons
	return &this
}

// NewApiMonitorGet200ResponseMonStatusMonmapWithDefaults instantiates a new ApiMonitorGet200ResponseMonStatusMonmap object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiMonitorGet200ResponseMonStatusMonmapWithDefaults() *ApiMonitorGet200ResponseMonStatusMonmap {
	this := ApiMonitorGet200ResponseMonStatusMonmap{}
	return &this
}

// GetCreated returns the Created field value
func (o *ApiMonitorGet200ResponseMonStatusMonmap) GetCreated() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Created
}

// GetCreatedOk returns a tuple with the Created field value
// and a boolean to check if the value has been set.
func (o *ApiMonitorGet200ResponseMonStatusMonmap) GetCreatedOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Created, true
}

// SetCreated sets field value
func (o *ApiMonitorGet200ResponseMonStatusMonmap) SetCreated(v string) {
	o.Created = v
}

// GetEpoch returns the Epoch field value
func (o *ApiMonitorGet200ResponseMonStatusMonmap) GetEpoch() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Epoch
}

// GetEpochOk returns a tuple with the Epoch field value
// and a boolean to check if the value has been set.
func (o *ApiMonitorGet200ResponseMonStatusMonmap) GetEpochOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Epoch, true
}

// SetEpoch sets field value
func (o *ApiMonitorGet200ResponseMonStatusMonmap) SetEpoch(v int32) {
	o.Epoch = v
}

// GetFeatures returns the Features field value
func (o *ApiMonitorGet200ResponseMonStatusMonmap) GetFeatures() ApiMonitorGet200ResponseMonStatusMonmapFeatures {
	if o == nil {
		var ret ApiMonitorGet200ResponseMonStatusMonmapFeatures
		return ret
	}

	return o.Features
}

// GetFeaturesOk returns a tuple with the Features field value
// and a boolean to check if the value has been set.
func (o *ApiMonitorGet200ResponseMonStatusMonmap) GetFeaturesOk() (*ApiMonitorGet200ResponseMonStatusMonmapFeatures, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Features, true
}

// SetFeatures sets field value
func (o *ApiMonitorGet200ResponseMonStatusMonmap) SetFeatures(v ApiMonitorGet200ResponseMonStatusMonmapFeatures) {
	o.Features = v
}

// GetFsid returns the Fsid field value
func (o *ApiMonitorGet200ResponseMonStatusMonmap) GetFsid() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Fsid
}

// GetFsidOk returns a tuple with the Fsid field value
// and a boolean to check if the value has been set.
func (o *ApiMonitorGet200ResponseMonStatusMonmap) GetFsidOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Fsid, true
}

// SetFsid sets field value
func (o *ApiMonitorGet200ResponseMonStatusMonmap) SetFsid(v string) {
	o.Fsid = v
}

// GetMinMonRelease returns the MinMonRelease field value
func (o *ApiMonitorGet200ResponseMonStatusMonmap) GetMinMonRelease() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.MinMonRelease
}

// GetMinMonReleaseOk returns a tuple with the MinMonRelease field value
// and a boolean to check if the value has been set.
func (o *ApiMonitorGet200ResponseMonStatusMonmap) GetMinMonReleaseOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MinMonRelease, true
}

// SetMinMonRelease sets field value
func (o *ApiMonitorGet200ResponseMonStatusMonmap) SetMinMonRelease(v int32) {
	o.MinMonRelease = v
}

// GetMinMonReleaseName returns the MinMonReleaseName field value
func (o *ApiMonitorGet200ResponseMonStatusMonmap) GetMinMonReleaseName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MinMonReleaseName
}

// GetMinMonReleaseNameOk returns a tuple with the MinMonReleaseName field value
// and a boolean to check if the value has been set.
func (o *ApiMonitorGet200ResponseMonStatusMonmap) GetMinMonReleaseNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MinMonReleaseName, true
}

// SetMinMonReleaseName sets field value
func (o *ApiMonitorGet200ResponseMonStatusMonmap) SetMinMonReleaseName(v string) {
	o.MinMonReleaseName = v
}

// GetModified returns the Modified field value
func (o *ApiMonitorGet200ResponseMonStatusMonmap) GetModified() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Modified
}

// GetModifiedOk returns a tuple with the Modified field value
// and a boolean to check if the value has been set.
func (o *ApiMonitorGet200ResponseMonStatusMonmap) GetModifiedOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Modified, true
}

// SetModified sets field value
func (o *ApiMonitorGet200ResponseMonStatusMonmap) SetModified(v string) {
	o.Modified = v
}

// GetMons returns the Mons field value
func (o *ApiMonitorGet200ResponseMonStatusMonmap) GetMons() []ApiMonitorGet200ResponseInQuorumInner {
	if o == nil {
		var ret []ApiMonitorGet200ResponseInQuorumInner
		return ret
	}

	return o.Mons
}

// GetMonsOk returns a tuple with the Mons field value
// and a boolean to check if the value has been set.
func (o *ApiMonitorGet200ResponseMonStatusMonmap) GetMonsOk() ([]ApiMonitorGet200ResponseInQuorumInner, bool) {
	if o == nil {
		return nil, false
	}
	return o.Mons, true
}

// SetMons sets field value
func (o *ApiMonitorGet200ResponseMonStatusMonmap) SetMons(v []ApiMonitorGet200ResponseInQuorumInner) {
	o.Mons = v
}

func (o ApiMonitorGet200ResponseMonStatusMonmap) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApiMonitorGet200ResponseMonStatusMonmap) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["created"] = o.Created
	toSerialize["epoch"] = o.Epoch
	toSerialize["features"] = o.Features
	toSerialize["fsid"] = o.Fsid
	toSerialize["min_mon_release"] = o.MinMonRelease
	toSerialize["min_mon_release_name"] = o.MinMonReleaseName
	toSerialize["modified"] = o.Modified
	toSerialize["mons"] = o.Mons
	return toSerialize, nil
}

func (o *ApiMonitorGet200ResponseMonStatusMonmap) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"created",
		"epoch",
		"features",
		"fsid",
		"min_mon_release",
		"min_mon_release_name",
		"modified",
		"mons",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varApiMonitorGet200ResponseMonStatusMonmap := _ApiMonitorGet200ResponseMonStatusMonmap{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varApiMonitorGet200ResponseMonStatusMonmap)

	if err != nil {
		return err
	}

	*o = ApiMonitorGet200ResponseMonStatusMonmap(varApiMonitorGet200ResponseMonStatusMonmap)

	return err
}

type NullableApiMonitorGet200ResponseMonStatusMonmap struct {
	value *ApiMonitorGet200ResponseMonStatusMonmap
	isSet bool
}

func (v NullableApiMonitorGet200ResponseMonStatusMonmap) Get() *ApiMonitorGet200ResponseMonStatusMonmap {
	return v.value
}

func (v *NullableApiMonitorGet200ResponseMonStatusMonmap) Set(val *ApiMonitorGet200ResponseMonStatusMonmap) {
	v.value = val
	v.isSet = true
}

func (v NullableApiMonitorGet200ResponseMonStatusMonmap) IsSet() bool {
	return v.isSet
}

func (v *NullableApiMonitorGet200ResponseMonStatusMonmap) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiMonitorGet200ResponseMonStatusMonmap(val *ApiMonitorGet200ResponseMonStatusMonmap) *NullableApiMonitorGet200ResponseMonStatusMonmap {
	return &NullableApiMonitorGet200ResponseMonStatusMonmap{value: val, isSet: true}
}

func (v NullableApiMonitorGet200ResponseMonStatusMonmap) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiMonitorGet200ResponseMonStatusMonmap) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


