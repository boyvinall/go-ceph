/*
Ceph REST API

This is the official Ceph REST API

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ceph

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ApiTaskGet200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApiTaskGet200Response{}

// ApiTaskGet200Response struct for ApiTaskGet200Response
type ApiTaskGet200Response struct {
	// ongoing executing tasks
	ExecutingTasks string `json:"executing_tasks"`
	// 
	FinishedTasks []ApiTaskGet200ResponseFinishedTasksInner `json:"finished_tasks"`
}

type _ApiTaskGet200Response ApiTaskGet200Response

// NewApiTaskGet200Response instantiates a new ApiTaskGet200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiTaskGet200Response(executingTasks string, finishedTasks []ApiTaskGet200ResponseFinishedTasksInner) *ApiTaskGet200Response {
	this := ApiTaskGet200Response{}
	this.ExecutingTasks = executingTasks
	this.FinishedTasks = finishedTasks
	return &this
}

// NewApiTaskGet200ResponseWithDefaults instantiates a new ApiTaskGet200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiTaskGet200ResponseWithDefaults() *ApiTaskGet200Response {
	this := ApiTaskGet200Response{}
	return &this
}

// GetExecutingTasks returns the ExecutingTasks field value
func (o *ApiTaskGet200Response) GetExecutingTasks() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ExecutingTasks
}

// GetExecutingTasksOk returns a tuple with the ExecutingTasks field value
// and a boolean to check if the value has been set.
func (o *ApiTaskGet200Response) GetExecutingTasksOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ExecutingTasks, true
}

// SetExecutingTasks sets field value
func (o *ApiTaskGet200Response) SetExecutingTasks(v string) {
	o.ExecutingTasks = v
}

// GetFinishedTasks returns the FinishedTasks field value
func (o *ApiTaskGet200Response) GetFinishedTasks() []ApiTaskGet200ResponseFinishedTasksInner {
	if o == nil {
		var ret []ApiTaskGet200ResponseFinishedTasksInner
		return ret
	}

	return o.FinishedTasks
}

// GetFinishedTasksOk returns a tuple with the FinishedTasks field value
// and a boolean to check if the value has been set.
func (o *ApiTaskGet200Response) GetFinishedTasksOk() ([]ApiTaskGet200ResponseFinishedTasksInner, bool) {
	if o == nil {
		return nil, false
	}
	return o.FinishedTasks, true
}

// SetFinishedTasks sets field value
func (o *ApiTaskGet200Response) SetFinishedTasks(v []ApiTaskGet200ResponseFinishedTasksInner) {
	o.FinishedTasks = v
}

func (o ApiTaskGet200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApiTaskGet200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["executing_tasks"] = o.ExecutingTasks
	toSerialize["finished_tasks"] = o.FinishedTasks
	return toSerialize, nil
}

func (o *ApiTaskGet200Response) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"executing_tasks",
		"finished_tasks",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varApiTaskGet200Response := _ApiTaskGet200Response{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varApiTaskGet200Response)

	if err != nil {
		return err
	}

	*o = ApiTaskGet200Response(varApiTaskGet200Response)

	return err
}

type NullableApiTaskGet200Response struct {
	value *ApiTaskGet200Response
	isSet bool
}

func (v NullableApiTaskGet200Response) Get() *ApiTaskGet200Response {
	return v.value
}

func (v *NullableApiTaskGet200Response) Set(val *ApiTaskGet200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableApiTaskGet200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableApiTaskGet200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiTaskGet200Response(val *ApiTaskGet200Response) *NullableApiTaskGet200Response {
	return &NullableApiTaskGet200Response{value: val, isSet: true}
}

func (v NullableApiTaskGet200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiTaskGet200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


