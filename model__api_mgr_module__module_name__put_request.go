/*
Ceph REST API

This is the official Ceph REST API

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ceph

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ApiMgrModuleModuleNamePutRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApiMgrModuleModuleNamePutRequest{}

// ApiMgrModuleModuleNamePutRequest struct for ApiMgrModuleModuleNamePutRequest
type ApiMgrModuleModuleNamePutRequest struct {
	Config string `json:"config"`
}

type _ApiMgrModuleModuleNamePutRequest ApiMgrModuleModuleNamePutRequest

// NewApiMgrModuleModuleNamePutRequest instantiates a new ApiMgrModuleModuleNamePutRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiMgrModuleModuleNamePutRequest(config string) *ApiMgrModuleModuleNamePutRequest {
	this := ApiMgrModuleModuleNamePutRequest{}
	this.Config = config
	return &this
}

// NewApiMgrModuleModuleNamePutRequestWithDefaults instantiates a new ApiMgrModuleModuleNamePutRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiMgrModuleModuleNamePutRequestWithDefaults() *ApiMgrModuleModuleNamePutRequest {
	this := ApiMgrModuleModuleNamePutRequest{}
	return &this
}

// GetConfig returns the Config field value
func (o *ApiMgrModuleModuleNamePutRequest) GetConfig() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Config
}

// GetConfigOk returns a tuple with the Config field value
// and a boolean to check if the value has been set.
func (o *ApiMgrModuleModuleNamePutRequest) GetConfigOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Config, true
}

// SetConfig sets field value
func (o *ApiMgrModuleModuleNamePutRequest) SetConfig(v string) {
	o.Config = v
}

func (o ApiMgrModuleModuleNamePutRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApiMgrModuleModuleNamePutRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["config"] = o.Config
	return toSerialize, nil
}

func (o *ApiMgrModuleModuleNamePutRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"config",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varApiMgrModuleModuleNamePutRequest := _ApiMgrModuleModuleNamePutRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varApiMgrModuleModuleNamePutRequest)

	if err != nil {
		return err
	}

	*o = ApiMgrModuleModuleNamePutRequest(varApiMgrModuleModuleNamePutRequest)

	return err
}

type NullableApiMgrModuleModuleNamePutRequest struct {
	value *ApiMgrModuleModuleNamePutRequest
	isSet bool
}

func (v NullableApiMgrModuleModuleNamePutRequest) Get() *ApiMgrModuleModuleNamePutRequest {
	return v.value
}

func (v *NullableApiMgrModuleModuleNamePutRequest) Set(val *ApiMgrModuleModuleNamePutRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableApiMgrModuleModuleNamePutRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableApiMgrModuleModuleNamePutRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiMgrModuleModuleNamePutRequest(val *ApiMgrModuleModuleNamePutRequest) *NullableApiMgrModuleModuleNamePutRequest {
	return &NullableApiMgrModuleModuleNamePutRequest{value: val, isSet: true}
}

func (v NullableApiMgrModuleModuleNamePutRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiMgrModuleModuleNamePutRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


