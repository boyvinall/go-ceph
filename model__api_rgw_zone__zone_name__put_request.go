/*
Ceph REST API

This is the official Ceph REST API

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ceph

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ApiRgwZoneZoneNamePutRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApiRgwZoneZoneNamePutRequest{}

// ApiRgwZoneZoneNamePutRequest struct for ApiRgwZoneZoneNamePutRequest
type ApiRgwZoneZoneNamePutRequest struct {
	AccessKey *string `json:"access_key,omitempty"`
	Compression *string `json:"compression,omitempty"`
	DataExtraPool *string `json:"data_extra_pool,omitempty"`
	DataPool *string `json:"data_pool,omitempty"`
	DataPoolClass *string `json:"data_pool_class,omitempty"`
	Default *string `json:"default,omitempty"`
	IndexPool *string `json:"index_pool,omitempty"`
	Master *string `json:"master,omitempty"`
	NewZoneName string `json:"new_zone_name"`
	PlacementTarget *string `json:"placement_target,omitempty"`
	SecretKey *string `json:"secret_key,omitempty"`
	StorageClass *string `json:"storage_class,omitempty"`
	ZoneEndpoints *string `json:"zone_endpoints,omitempty"`
	ZonegroupName string `json:"zonegroup_name"`
}

type _ApiRgwZoneZoneNamePutRequest ApiRgwZoneZoneNamePutRequest

// NewApiRgwZoneZoneNamePutRequest instantiates a new ApiRgwZoneZoneNamePutRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiRgwZoneZoneNamePutRequest(newZoneName string, zonegroupName string) *ApiRgwZoneZoneNamePutRequest {
	this := ApiRgwZoneZoneNamePutRequest{}
	var accessKey string = ""
	this.AccessKey = &accessKey
	var compression string = ""
	this.Compression = &compression
	var dataExtraPool string = ""
	this.DataExtraPool = &dataExtraPool
	var dataPool string = ""
	this.DataPool = &dataPool
	var dataPoolClass string = ""
	this.DataPoolClass = &dataPoolClass
	var default_ string = ""
	this.Default = &default_
	var indexPool string = ""
	this.IndexPool = &indexPool
	var master string = ""
	this.Master = &master
	this.NewZoneName = newZoneName
	var placementTarget string = ""
	this.PlacementTarget = &placementTarget
	var secretKey string = ""
	this.SecretKey = &secretKey
	var storageClass string = ""
	this.StorageClass = &storageClass
	var zoneEndpoints string = ""
	this.ZoneEndpoints = &zoneEndpoints
	this.ZonegroupName = zonegroupName
	return &this
}

// NewApiRgwZoneZoneNamePutRequestWithDefaults instantiates a new ApiRgwZoneZoneNamePutRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiRgwZoneZoneNamePutRequestWithDefaults() *ApiRgwZoneZoneNamePutRequest {
	this := ApiRgwZoneZoneNamePutRequest{}
	var accessKey string = ""
	this.AccessKey = &accessKey
	var compression string = ""
	this.Compression = &compression
	var dataExtraPool string = ""
	this.DataExtraPool = &dataExtraPool
	var dataPool string = ""
	this.DataPool = &dataPool
	var dataPoolClass string = ""
	this.DataPoolClass = &dataPoolClass
	var default_ string = ""
	this.Default = &default_
	var indexPool string = ""
	this.IndexPool = &indexPool
	var master string = ""
	this.Master = &master
	var placementTarget string = ""
	this.PlacementTarget = &placementTarget
	var secretKey string = ""
	this.SecretKey = &secretKey
	var storageClass string = ""
	this.StorageClass = &storageClass
	var zoneEndpoints string = ""
	this.ZoneEndpoints = &zoneEndpoints
	return &this
}

// GetAccessKey returns the AccessKey field value if set, zero value otherwise.
func (o *ApiRgwZoneZoneNamePutRequest) GetAccessKey() string {
	if o == nil || IsNil(o.AccessKey) {
		var ret string
		return ret
	}
	return *o.AccessKey
}

// GetAccessKeyOk returns a tuple with the AccessKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiRgwZoneZoneNamePutRequest) GetAccessKeyOk() (*string, bool) {
	if o == nil || IsNil(o.AccessKey) {
		return nil, false
	}
	return o.AccessKey, true
}

// HasAccessKey returns a boolean if a field has been set.
func (o *ApiRgwZoneZoneNamePutRequest) HasAccessKey() bool {
	if o != nil && !IsNil(o.AccessKey) {
		return true
	}

	return false
}

// SetAccessKey gets a reference to the given string and assigns it to the AccessKey field.
func (o *ApiRgwZoneZoneNamePutRequest) SetAccessKey(v string) {
	o.AccessKey = &v
}

// GetCompression returns the Compression field value if set, zero value otherwise.
func (o *ApiRgwZoneZoneNamePutRequest) GetCompression() string {
	if o == nil || IsNil(o.Compression) {
		var ret string
		return ret
	}
	return *o.Compression
}

// GetCompressionOk returns a tuple with the Compression field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiRgwZoneZoneNamePutRequest) GetCompressionOk() (*string, bool) {
	if o == nil || IsNil(o.Compression) {
		return nil, false
	}
	return o.Compression, true
}

// HasCompression returns a boolean if a field has been set.
func (o *ApiRgwZoneZoneNamePutRequest) HasCompression() bool {
	if o != nil && !IsNil(o.Compression) {
		return true
	}

	return false
}

// SetCompression gets a reference to the given string and assigns it to the Compression field.
func (o *ApiRgwZoneZoneNamePutRequest) SetCompression(v string) {
	o.Compression = &v
}

// GetDataExtraPool returns the DataExtraPool field value if set, zero value otherwise.
func (o *ApiRgwZoneZoneNamePutRequest) GetDataExtraPool() string {
	if o == nil || IsNil(o.DataExtraPool) {
		var ret string
		return ret
	}
	return *o.DataExtraPool
}

// GetDataExtraPoolOk returns a tuple with the DataExtraPool field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiRgwZoneZoneNamePutRequest) GetDataExtraPoolOk() (*string, bool) {
	if o == nil || IsNil(o.DataExtraPool) {
		return nil, false
	}
	return o.DataExtraPool, true
}

// HasDataExtraPool returns a boolean if a field has been set.
func (o *ApiRgwZoneZoneNamePutRequest) HasDataExtraPool() bool {
	if o != nil && !IsNil(o.DataExtraPool) {
		return true
	}

	return false
}

// SetDataExtraPool gets a reference to the given string and assigns it to the DataExtraPool field.
func (o *ApiRgwZoneZoneNamePutRequest) SetDataExtraPool(v string) {
	o.DataExtraPool = &v
}

// GetDataPool returns the DataPool field value if set, zero value otherwise.
func (o *ApiRgwZoneZoneNamePutRequest) GetDataPool() string {
	if o == nil || IsNil(o.DataPool) {
		var ret string
		return ret
	}
	return *o.DataPool
}

// GetDataPoolOk returns a tuple with the DataPool field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiRgwZoneZoneNamePutRequest) GetDataPoolOk() (*string, bool) {
	if o == nil || IsNil(o.DataPool) {
		return nil, false
	}
	return o.DataPool, true
}

// HasDataPool returns a boolean if a field has been set.
func (o *ApiRgwZoneZoneNamePutRequest) HasDataPool() bool {
	if o != nil && !IsNil(o.DataPool) {
		return true
	}

	return false
}

// SetDataPool gets a reference to the given string and assigns it to the DataPool field.
func (o *ApiRgwZoneZoneNamePutRequest) SetDataPool(v string) {
	o.DataPool = &v
}

// GetDataPoolClass returns the DataPoolClass field value if set, zero value otherwise.
func (o *ApiRgwZoneZoneNamePutRequest) GetDataPoolClass() string {
	if o == nil || IsNil(o.DataPoolClass) {
		var ret string
		return ret
	}
	return *o.DataPoolClass
}

// GetDataPoolClassOk returns a tuple with the DataPoolClass field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiRgwZoneZoneNamePutRequest) GetDataPoolClassOk() (*string, bool) {
	if o == nil || IsNil(o.DataPoolClass) {
		return nil, false
	}
	return o.DataPoolClass, true
}

// HasDataPoolClass returns a boolean if a field has been set.
func (o *ApiRgwZoneZoneNamePutRequest) HasDataPoolClass() bool {
	if o != nil && !IsNil(o.DataPoolClass) {
		return true
	}

	return false
}

// SetDataPoolClass gets a reference to the given string and assigns it to the DataPoolClass field.
func (o *ApiRgwZoneZoneNamePutRequest) SetDataPoolClass(v string) {
	o.DataPoolClass = &v
}

// GetDefault returns the Default field value if set, zero value otherwise.
func (o *ApiRgwZoneZoneNamePutRequest) GetDefault() string {
	if o == nil || IsNil(o.Default) {
		var ret string
		return ret
	}
	return *o.Default
}

// GetDefaultOk returns a tuple with the Default field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiRgwZoneZoneNamePutRequest) GetDefaultOk() (*string, bool) {
	if o == nil || IsNil(o.Default) {
		return nil, false
	}
	return o.Default, true
}

// HasDefault returns a boolean if a field has been set.
func (o *ApiRgwZoneZoneNamePutRequest) HasDefault() bool {
	if o != nil && !IsNil(o.Default) {
		return true
	}

	return false
}

// SetDefault gets a reference to the given string and assigns it to the Default field.
func (o *ApiRgwZoneZoneNamePutRequest) SetDefault(v string) {
	o.Default = &v
}

// GetIndexPool returns the IndexPool field value if set, zero value otherwise.
func (o *ApiRgwZoneZoneNamePutRequest) GetIndexPool() string {
	if o == nil || IsNil(o.IndexPool) {
		var ret string
		return ret
	}
	return *o.IndexPool
}

// GetIndexPoolOk returns a tuple with the IndexPool field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiRgwZoneZoneNamePutRequest) GetIndexPoolOk() (*string, bool) {
	if o == nil || IsNil(o.IndexPool) {
		return nil, false
	}
	return o.IndexPool, true
}

// HasIndexPool returns a boolean if a field has been set.
func (o *ApiRgwZoneZoneNamePutRequest) HasIndexPool() bool {
	if o != nil && !IsNil(o.IndexPool) {
		return true
	}

	return false
}

// SetIndexPool gets a reference to the given string and assigns it to the IndexPool field.
func (o *ApiRgwZoneZoneNamePutRequest) SetIndexPool(v string) {
	o.IndexPool = &v
}

// GetMaster returns the Master field value if set, zero value otherwise.
func (o *ApiRgwZoneZoneNamePutRequest) GetMaster() string {
	if o == nil || IsNil(o.Master) {
		var ret string
		return ret
	}
	return *o.Master
}

// GetMasterOk returns a tuple with the Master field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiRgwZoneZoneNamePutRequest) GetMasterOk() (*string, bool) {
	if o == nil || IsNil(o.Master) {
		return nil, false
	}
	return o.Master, true
}

// HasMaster returns a boolean if a field has been set.
func (o *ApiRgwZoneZoneNamePutRequest) HasMaster() bool {
	if o != nil && !IsNil(o.Master) {
		return true
	}

	return false
}

// SetMaster gets a reference to the given string and assigns it to the Master field.
func (o *ApiRgwZoneZoneNamePutRequest) SetMaster(v string) {
	o.Master = &v
}

// GetNewZoneName returns the NewZoneName field value
func (o *ApiRgwZoneZoneNamePutRequest) GetNewZoneName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.NewZoneName
}

// GetNewZoneNameOk returns a tuple with the NewZoneName field value
// and a boolean to check if the value has been set.
func (o *ApiRgwZoneZoneNamePutRequest) GetNewZoneNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.NewZoneName, true
}

// SetNewZoneName sets field value
func (o *ApiRgwZoneZoneNamePutRequest) SetNewZoneName(v string) {
	o.NewZoneName = v
}

// GetPlacementTarget returns the PlacementTarget field value if set, zero value otherwise.
func (o *ApiRgwZoneZoneNamePutRequest) GetPlacementTarget() string {
	if o == nil || IsNil(o.PlacementTarget) {
		var ret string
		return ret
	}
	return *o.PlacementTarget
}

// GetPlacementTargetOk returns a tuple with the PlacementTarget field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiRgwZoneZoneNamePutRequest) GetPlacementTargetOk() (*string, bool) {
	if o == nil || IsNil(o.PlacementTarget) {
		return nil, false
	}
	return o.PlacementTarget, true
}

// HasPlacementTarget returns a boolean if a field has been set.
func (o *ApiRgwZoneZoneNamePutRequest) HasPlacementTarget() bool {
	if o != nil && !IsNil(o.PlacementTarget) {
		return true
	}

	return false
}

// SetPlacementTarget gets a reference to the given string and assigns it to the PlacementTarget field.
func (o *ApiRgwZoneZoneNamePutRequest) SetPlacementTarget(v string) {
	o.PlacementTarget = &v
}

// GetSecretKey returns the SecretKey field value if set, zero value otherwise.
func (o *ApiRgwZoneZoneNamePutRequest) GetSecretKey() string {
	if o == nil || IsNil(o.SecretKey) {
		var ret string
		return ret
	}
	return *o.SecretKey
}

// GetSecretKeyOk returns a tuple with the SecretKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiRgwZoneZoneNamePutRequest) GetSecretKeyOk() (*string, bool) {
	if o == nil || IsNil(o.SecretKey) {
		return nil, false
	}
	return o.SecretKey, true
}

// HasSecretKey returns a boolean if a field has been set.
func (o *ApiRgwZoneZoneNamePutRequest) HasSecretKey() bool {
	if o != nil && !IsNil(o.SecretKey) {
		return true
	}

	return false
}

// SetSecretKey gets a reference to the given string and assigns it to the SecretKey field.
func (o *ApiRgwZoneZoneNamePutRequest) SetSecretKey(v string) {
	o.SecretKey = &v
}

// GetStorageClass returns the StorageClass field value if set, zero value otherwise.
func (o *ApiRgwZoneZoneNamePutRequest) GetStorageClass() string {
	if o == nil || IsNil(o.StorageClass) {
		var ret string
		return ret
	}
	return *o.StorageClass
}

// GetStorageClassOk returns a tuple with the StorageClass field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiRgwZoneZoneNamePutRequest) GetStorageClassOk() (*string, bool) {
	if o == nil || IsNil(o.StorageClass) {
		return nil, false
	}
	return o.StorageClass, true
}

// HasStorageClass returns a boolean if a field has been set.
func (o *ApiRgwZoneZoneNamePutRequest) HasStorageClass() bool {
	if o != nil && !IsNil(o.StorageClass) {
		return true
	}

	return false
}

// SetStorageClass gets a reference to the given string and assigns it to the StorageClass field.
func (o *ApiRgwZoneZoneNamePutRequest) SetStorageClass(v string) {
	o.StorageClass = &v
}

// GetZoneEndpoints returns the ZoneEndpoints field value if set, zero value otherwise.
func (o *ApiRgwZoneZoneNamePutRequest) GetZoneEndpoints() string {
	if o == nil || IsNil(o.ZoneEndpoints) {
		var ret string
		return ret
	}
	return *o.ZoneEndpoints
}

// GetZoneEndpointsOk returns a tuple with the ZoneEndpoints field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiRgwZoneZoneNamePutRequest) GetZoneEndpointsOk() (*string, bool) {
	if o == nil || IsNil(o.ZoneEndpoints) {
		return nil, false
	}
	return o.ZoneEndpoints, true
}

// HasZoneEndpoints returns a boolean if a field has been set.
func (o *ApiRgwZoneZoneNamePutRequest) HasZoneEndpoints() bool {
	if o != nil && !IsNil(o.ZoneEndpoints) {
		return true
	}

	return false
}

// SetZoneEndpoints gets a reference to the given string and assigns it to the ZoneEndpoints field.
func (o *ApiRgwZoneZoneNamePutRequest) SetZoneEndpoints(v string) {
	o.ZoneEndpoints = &v
}

// GetZonegroupName returns the ZonegroupName field value
func (o *ApiRgwZoneZoneNamePutRequest) GetZonegroupName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ZonegroupName
}

// GetZonegroupNameOk returns a tuple with the ZonegroupName field value
// and a boolean to check if the value has been set.
func (o *ApiRgwZoneZoneNamePutRequest) GetZonegroupNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ZonegroupName, true
}

// SetZonegroupName sets field value
func (o *ApiRgwZoneZoneNamePutRequest) SetZonegroupName(v string) {
	o.ZonegroupName = v
}

func (o ApiRgwZoneZoneNamePutRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApiRgwZoneZoneNamePutRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AccessKey) {
		toSerialize["access_key"] = o.AccessKey
	}
	if !IsNil(o.Compression) {
		toSerialize["compression"] = o.Compression
	}
	if !IsNil(o.DataExtraPool) {
		toSerialize["data_extra_pool"] = o.DataExtraPool
	}
	if !IsNil(o.DataPool) {
		toSerialize["data_pool"] = o.DataPool
	}
	if !IsNil(o.DataPoolClass) {
		toSerialize["data_pool_class"] = o.DataPoolClass
	}
	if !IsNil(o.Default) {
		toSerialize["default"] = o.Default
	}
	if !IsNil(o.IndexPool) {
		toSerialize["index_pool"] = o.IndexPool
	}
	if !IsNil(o.Master) {
		toSerialize["master"] = o.Master
	}
	toSerialize["new_zone_name"] = o.NewZoneName
	if !IsNil(o.PlacementTarget) {
		toSerialize["placement_target"] = o.PlacementTarget
	}
	if !IsNil(o.SecretKey) {
		toSerialize["secret_key"] = o.SecretKey
	}
	if !IsNil(o.StorageClass) {
		toSerialize["storage_class"] = o.StorageClass
	}
	if !IsNil(o.ZoneEndpoints) {
		toSerialize["zone_endpoints"] = o.ZoneEndpoints
	}
	toSerialize["zonegroup_name"] = o.ZonegroupName
	return toSerialize, nil
}

func (o *ApiRgwZoneZoneNamePutRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"new_zone_name",
		"zonegroup_name",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varApiRgwZoneZoneNamePutRequest := _ApiRgwZoneZoneNamePutRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varApiRgwZoneZoneNamePutRequest)

	if err != nil {
		return err
	}

	*o = ApiRgwZoneZoneNamePutRequest(varApiRgwZoneZoneNamePutRequest)

	return err
}

type NullableApiRgwZoneZoneNamePutRequest struct {
	value *ApiRgwZoneZoneNamePutRequest
	isSet bool
}

func (v NullableApiRgwZoneZoneNamePutRequest) Get() *ApiRgwZoneZoneNamePutRequest {
	return v.value
}

func (v *NullableApiRgwZoneZoneNamePutRequest) Set(val *ApiRgwZoneZoneNamePutRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableApiRgwZoneZoneNamePutRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableApiRgwZoneZoneNamePutRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiRgwZoneZoneNamePutRequest(val *ApiRgwZoneZoneNamePutRequest) *NullableApiRgwZoneZoneNamePutRequest {
	return &NullableApiRgwZoneZoneNamePutRequest{value: val, isSet: true}
}

func (v NullableApiRgwZoneZoneNamePutRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiRgwZoneZoneNamePutRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


