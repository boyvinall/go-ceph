/*
Ceph REST API

This is the official Ceph REST API

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ceph

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ApiUserValidatePasswordPostRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApiUserValidatePasswordPostRequest{}

// ApiUserValidatePasswordPostRequest struct for ApiUserValidatePasswordPostRequest
type ApiUserValidatePasswordPostRequest struct {
	OldPassword *string `json:"old_password,omitempty"`
	Password string `json:"password"`
	Username *string `json:"username,omitempty"`
}

type _ApiUserValidatePasswordPostRequest ApiUserValidatePasswordPostRequest

// NewApiUserValidatePasswordPostRequest instantiates a new ApiUserValidatePasswordPostRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiUserValidatePasswordPostRequest(password string) *ApiUserValidatePasswordPostRequest {
	this := ApiUserValidatePasswordPostRequest{}
	this.Password = password
	return &this
}

// NewApiUserValidatePasswordPostRequestWithDefaults instantiates a new ApiUserValidatePasswordPostRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiUserValidatePasswordPostRequestWithDefaults() *ApiUserValidatePasswordPostRequest {
	this := ApiUserValidatePasswordPostRequest{}
	return &this
}

// GetOldPassword returns the OldPassword field value if set, zero value otherwise.
func (o *ApiUserValidatePasswordPostRequest) GetOldPassword() string {
	if o == nil || IsNil(o.OldPassword) {
		var ret string
		return ret
	}
	return *o.OldPassword
}

// GetOldPasswordOk returns a tuple with the OldPassword field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiUserValidatePasswordPostRequest) GetOldPasswordOk() (*string, bool) {
	if o == nil || IsNil(o.OldPassword) {
		return nil, false
	}
	return o.OldPassword, true
}

// HasOldPassword returns a boolean if a field has been set.
func (o *ApiUserValidatePasswordPostRequest) HasOldPassword() bool {
	if o != nil && !IsNil(o.OldPassword) {
		return true
	}

	return false
}

// SetOldPassword gets a reference to the given string and assigns it to the OldPassword field.
func (o *ApiUserValidatePasswordPostRequest) SetOldPassword(v string) {
	o.OldPassword = &v
}

// GetPassword returns the Password field value
func (o *ApiUserValidatePasswordPostRequest) GetPassword() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Password
}

// GetPasswordOk returns a tuple with the Password field value
// and a boolean to check if the value has been set.
func (o *ApiUserValidatePasswordPostRequest) GetPasswordOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Password, true
}

// SetPassword sets field value
func (o *ApiUserValidatePasswordPostRequest) SetPassword(v string) {
	o.Password = v
}

// GetUsername returns the Username field value if set, zero value otherwise.
func (o *ApiUserValidatePasswordPostRequest) GetUsername() string {
	if o == nil || IsNil(o.Username) {
		var ret string
		return ret
	}
	return *o.Username
}

// GetUsernameOk returns a tuple with the Username field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiUserValidatePasswordPostRequest) GetUsernameOk() (*string, bool) {
	if o == nil || IsNil(o.Username) {
		return nil, false
	}
	return o.Username, true
}

// HasUsername returns a boolean if a field has been set.
func (o *ApiUserValidatePasswordPostRequest) HasUsername() bool {
	if o != nil && !IsNil(o.Username) {
		return true
	}

	return false
}

// SetUsername gets a reference to the given string and assigns it to the Username field.
func (o *ApiUserValidatePasswordPostRequest) SetUsername(v string) {
	o.Username = &v
}

func (o ApiUserValidatePasswordPostRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApiUserValidatePasswordPostRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.OldPassword) {
		toSerialize["old_password"] = o.OldPassword
	}
	toSerialize["password"] = o.Password
	if !IsNil(o.Username) {
		toSerialize["username"] = o.Username
	}
	return toSerialize, nil
}

func (o *ApiUserValidatePasswordPostRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"password",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varApiUserValidatePasswordPostRequest := _ApiUserValidatePasswordPostRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varApiUserValidatePasswordPostRequest)

	if err != nil {
		return err
	}

	*o = ApiUserValidatePasswordPostRequest(varApiUserValidatePasswordPostRequest)

	return err
}

type NullableApiUserValidatePasswordPostRequest struct {
	value *ApiUserValidatePasswordPostRequest
	isSet bool
}

func (v NullableApiUserValidatePasswordPostRequest) Get() *ApiUserValidatePasswordPostRequest {
	return v.value
}

func (v *NullableApiUserValidatePasswordPostRequest) Set(val *ApiUserValidatePasswordPostRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableApiUserValidatePasswordPostRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableApiUserValidatePasswordPostRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiUserValidatePasswordPostRequest(val *ApiUserValidatePasswordPostRequest) *NullableApiUserValidatePasswordPostRequest {
	return &NullableApiUserValidatePasswordPostRequest{value: val, isSet: true}
}

func (v NullableApiUserValidatePasswordPostRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiUserValidatePasswordPostRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


