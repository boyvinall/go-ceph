/*
Ceph REST API

This is the official Ceph REST API

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ceph

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ApiCephfsSubvolumeSnapshotPostRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApiCephfsSubvolumeSnapshotPostRequest{}

// ApiCephfsSubvolumeSnapshotPostRequest struct for ApiCephfsSubvolumeSnapshotPostRequest
type ApiCephfsSubvolumeSnapshotPostRequest struct {
	GroupName *string `json:"group_name,omitempty"`
	SnapName string `json:"snap_name"`
	SubvolName string `json:"subvol_name"`
	VolName string `json:"vol_name"`
}

type _ApiCephfsSubvolumeSnapshotPostRequest ApiCephfsSubvolumeSnapshotPostRequest

// NewApiCephfsSubvolumeSnapshotPostRequest instantiates a new ApiCephfsSubvolumeSnapshotPostRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiCephfsSubvolumeSnapshotPostRequest(snapName string, subvolName string, volName string) *ApiCephfsSubvolumeSnapshotPostRequest {
	this := ApiCephfsSubvolumeSnapshotPostRequest{}
	var groupName string = ""
	this.GroupName = &groupName
	this.SnapName = snapName
	this.SubvolName = subvolName
	this.VolName = volName
	return &this
}

// NewApiCephfsSubvolumeSnapshotPostRequestWithDefaults instantiates a new ApiCephfsSubvolumeSnapshotPostRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiCephfsSubvolumeSnapshotPostRequestWithDefaults() *ApiCephfsSubvolumeSnapshotPostRequest {
	this := ApiCephfsSubvolumeSnapshotPostRequest{}
	var groupName string = ""
	this.GroupName = &groupName
	return &this
}

// GetGroupName returns the GroupName field value if set, zero value otherwise.
func (o *ApiCephfsSubvolumeSnapshotPostRequest) GetGroupName() string {
	if o == nil || IsNil(o.GroupName) {
		var ret string
		return ret
	}
	return *o.GroupName
}

// GetGroupNameOk returns a tuple with the GroupName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiCephfsSubvolumeSnapshotPostRequest) GetGroupNameOk() (*string, bool) {
	if o == nil || IsNil(o.GroupName) {
		return nil, false
	}
	return o.GroupName, true
}

// HasGroupName returns a boolean if a field has been set.
func (o *ApiCephfsSubvolumeSnapshotPostRequest) HasGroupName() bool {
	if o != nil && !IsNil(o.GroupName) {
		return true
	}

	return false
}

// SetGroupName gets a reference to the given string and assigns it to the GroupName field.
func (o *ApiCephfsSubvolumeSnapshotPostRequest) SetGroupName(v string) {
	o.GroupName = &v
}

// GetSnapName returns the SnapName field value
func (o *ApiCephfsSubvolumeSnapshotPostRequest) GetSnapName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SnapName
}

// GetSnapNameOk returns a tuple with the SnapName field value
// and a boolean to check if the value has been set.
func (o *ApiCephfsSubvolumeSnapshotPostRequest) GetSnapNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SnapName, true
}

// SetSnapName sets field value
func (o *ApiCephfsSubvolumeSnapshotPostRequest) SetSnapName(v string) {
	o.SnapName = v
}

// GetSubvolName returns the SubvolName field value
func (o *ApiCephfsSubvolumeSnapshotPostRequest) GetSubvolName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SubvolName
}

// GetSubvolNameOk returns a tuple with the SubvolName field value
// and a boolean to check if the value has been set.
func (o *ApiCephfsSubvolumeSnapshotPostRequest) GetSubvolNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SubvolName, true
}

// SetSubvolName sets field value
func (o *ApiCephfsSubvolumeSnapshotPostRequest) SetSubvolName(v string) {
	o.SubvolName = v
}

// GetVolName returns the VolName field value
func (o *ApiCephfsSubvolumeSnapshotPostRequest) GetVolName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.VolName
}

// GetVolNameOk returns a tuple with the VolName field value
// and a boolean to check if the value has been set.
func (o *ApiCephfsSubvolumeSnapshotPostRequest) GetVolNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.VolName, true
}

// SetVolName sets field value
func (o *ApiCephfsSubvolumeSnapshotPostRequest) SetVolName(v string) {
	o.VolName = v
}

func (o ApiCephfsSubvolumeSnapshotPostRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApiCephfsSubvolumeSnapshotPostRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.GroupName) {
		toSerialize["group_name"] = o.GroupName
	}
	toSerialize["snap_name"] = o.SnapName
	toSerialize["subvol_name"] = o.SubvolName
	toSerialize["vol_name"] = o.VolName
	return toSerialize, nil
}

func (o *ApiCephfsSubvolumeSnapshotPostRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"snap_name",
		"subvol_name",
		"vol_name",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varApiCephfsSubvolumeSnapshotPostRequest := _ApiCephfsSubvolumeSnapshotPostRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varApiCephfsSubvolumeSnapshotPostRequest)

	if err != nil {
		return err
	}

	*o = ApiCephfsSubvolumeSnapshotPostRequest(varApiCephfsSubvolumeSnapshotPostRequest)

	return err
}

type NullableApiCephfsSubvolumeSnapshotPostRequest struct {
	value *ApiCephfsSubvolumeSnapshotPostRequest
	isSet bool
}

func (v NullableApiCephfsSubvolumeSnapshotPostRequest) Get() *ApiCephfsSubvolumeSnapshotPostRequest {
	return v.value
}

func (v *NullableApiCephfsSubvolumeSnapshotPostRequest) Set(val *ApiCephfsSubvolumeSnapshotPostRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableApiCephfsSubvolumeSnapshotPostRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableApiCephfsSubvolumeSnapshotPostRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiCephfsSubvolumeSnapshotPostRequest(val *ApiCephfsSubvolumeSnapshotPostRequest) *NullableApiCephfsSubvolumeSnapshotPostRequest {
	return &NullableApiCephfsSubvolumeSnapshotPostRequest{value: val, isSet: true}
}

func (v NullableApiCephfsSubvolumeSnapshotPostRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiCephfsSubvolumeSnapshotPostRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


