/*
Ceph REST API

This is the official Ceph REST API

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ceph

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ApiTelemetryReportGet200ResponseReportFs type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApiTelemetryReportGet200ResponseReportFs{}

// ApiTelemetryReportGet200ResponseReportFs 
type ApiTelemetryReportGet200ResponseReportFs struct {
	// 
	Count int32 `json:"count"`
	FeatureFlags ApiTelemetryReportGet200ResponseReportFsFeatureFlags `json:"feature_flags"`
	// 
	Filesystems []int32 `json:"filesystems"`
	// 
	NumStandbyMds int32 `json:"num_standby_mds"`
	// 
	TotalNumMds int32 `json:"total_num_mds"`
}

type _ApiTelemetryReportGet200ResponseReportFs ApiTelemetryReportGet200ResponseReportFs

// NewApiTelemetryReportGet200ResponseReportFs instantiates a new ApiTelemetryReportGet200ResponseReportFs object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiTelemetryReportGet200ResponseReportFs(count int32, featureFlags ApiTelemetryReportGet200ResponseReportFsFeatureFlags, filesystems []int32, numStandbyMds int32, totalNumMds int32) *ApiTelemetryReportGet200ResponseReportFs {
	this := ApiTelemetryReportGet200ResponseReportFs{}
	this.Count = count
	this.FeatureFlags = featureFlags
	this.Filesystems = filesystems
	this.NumStandbyMds = numStandbyMds
	this.TotalNumMds = totalNumMds
	return &this
}

// NewApiTelemetryReportGet200ResponseReportFsWithDefaults instantiates a new ApiTelemetryReportGet200ResponseReportFs object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiTelemetryReportGet200ResponseReportFsWithDefaults() *ApiTelemetryReportGet200ResponseReportFs {
	this := ApiTelemetryReportGet200ResponseReportFs{}
	return &this
}

// GetCount returns the Count field value
func (o *ApiTelemetryReportGet200ResponseReportFs) GetCount() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Count
}

// GetCountOk returns a tuple with the Count field value
// and a boolean to check if the value has been set.
func (o *ApiTelemetryReportGet200ResponseReportFs) GetCountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Count, true
}

// SetCount sets field value
func (o *ApiTelemetryReportGet200ResponseReportFs) SetCount(v int32) {
	o.Count = v
}

// GetFeatureFlags returns the FeatureFlags field value
func (o *ApiTelemetryReportGet200ResponseReportFs) GetFeatureFlags() ApiTelemetryReportGet200ResponseReportFsFeatureFlags {
	if o == nil {
		var ret ApiTelemetryReportGet200ResponseReportFsFeatureFlags
		return ret
	}

	return o.FeatureFlags
}

// GetFeatureFlagsOk returns a tuple with the FeatureFlags field value
// and a boolean to check if the value has been set.
func (o *ApiTelemetryReportGet200ResponseReportFs) GetFeatureFlagsOk() (*ApiTelemetryReportGet200ResponseReportFsFeatureFlags, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FeatureFlags, true
}

// SetFeatureFlags sets field value
func (o *ApiTelemetryReportGet200ResponseReportFs) SetFeatureFlags(v ApiTelemetryReportGet200ResponseReportFsFeatureFlags) {
	o.FeatureFlags = v
}

// GetFilesystems returns the Filesystems field value
func (o *ApiTelemetryReportGet200ResponseReportFs) GetFilesystems() []int32 {
	if o == nil {
		var ret []int32
		return ret
	}

	return o.Filesystems
}

// GetFilesystemsOk returns a tuple with the Filesystems field value
// and a boolean to check if the value has been set.
func (o *ApiTelemetryReportGet200ResponseReportFs) GetFilesystemsOk() ([]int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.Filesystems, true
}

// SetFilesystems sets field value
func (o *ApiTelemetryReportGet200ResponseReportFs) SetFilesystems(v []int32) {
	o.Filesystems = v
}

// GetNumStandbyMds returns the NumStandbyMds field value
func (o *ApiTelemetryReportGet200ResponseReportFs) GetNumStandbyMds() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.NumStandbyMds
}

// GetNumStandbyMdsOk returns a tuple with the NumStandbyMds field value
// and a boolean to check if the value has been set.
func (o *ApiTelemetryReportGet200ResponseReportFs) GetNumStandbyMdsOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.NumStandbyMds, true
}

// SetNumStandbyMds sets field value
func (o *ApiTelemetryReportGet200ResponseReportFs) SetNumStandbyMds(v int32) {
	o.NumStandbyMds = v
}

// GetTotalNumMds returns the TotalNumMds field value
func (o *ApiTelemetryReportGet200ResponseReportFs) GetTotalNumMds() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.TotalNumMds
}

// GetTotalNumMdsOk returns a tuple with the TotalNumMds field value
// and a boolean to check if the value has been set.
func (o *ApiTelemetryReportGet200ResponseReportFs) GetTotalNumMdsOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TotalNumMds, true
}

// SetTotalNumMds sets field value
func (o *ApiTelemetryReportGet200ResponseReportFs) SetTotalNumMds(v int32) {
	o.TotalNumMds = v
}

func (o ApiTelemetryReportGet200ResponseReportFs) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApiTelemetryReportGet200ResponseReportFs) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["count"] = o.Count
	toSerialize["feature_flags"] = o.FeatureFlags
	toSerialize["filesystems"] = o.Filesystems
	toSerialize["num_standby_mds"] = o.NumStandbyMds
	toSerialize["total_num_mds"] = o.TotalNumMds
	return toSerialize, nil
}

func (o *ApiTelemetryReportGet200ResponseReportFs) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"count",
		"feature_flags",
		"filesystems",
		"num_standby_mds",
		"total_num_mds",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varApiTelemetryReportGet200ResponseReportFs := _ApiTelemetryReportGet200ResponseReportFs{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varApiTelemetryReportGet200ResponseReportFs)

	if err != nil {
		return err
	}

	*o = ApiTelemetryReportGet200ResponseReportFs(varApiTelemetryReportGet200ResponseReportFs)

	return err
}

type NullableApiTelemetryReportGet200ResponseReportFs struct {
	value *ApiTelemetryReportGet200ResponseReportFs
	isSet bool
}

func (v NullableApiTelemetryReportGet200ResponseReportFs) Get() *ApiTelemetryReportGet200ResponseReportFs {
	return v.value
}

func (v *NullableApiTelemetryReportGet200ResponseReportFs) Set(val *ApiTelemetryReportGet200ResponseReportFs) {
	v.value = val
	v.isSet = true
}

func (v NullableApiTelemetryReportGet200ResponseReportFs) IsSet() bool {
	return v.isSet
}

func (v *NullableApiTelemetryReportGet200ResponseReportFs) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiTelemetryReportGet200ResponseReportFs(val *ApiTelemetryReportGet200ResponseReportFs) *NullableApiTelemetryReportGet200ResponseReportFs {
	return &NullableApiTelemetryReportGet200ResponseReportFs{value: val, isSet: true}
}

func (v NullableApiTelemetryReportGet200ResponseReportFs) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiTelemetryReportGet200ResponseReportFs) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


