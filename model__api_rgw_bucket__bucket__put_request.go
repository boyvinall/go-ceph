/*
Ceph REST API

This is the official Ceph REST API

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ceph

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ApiRgwBucketBucketPutRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApiRgwBucketBucketPutRequest{}

// ApiRgwBucketBucketPutRequest struct for ApiRgwBucketBucketPutRequest
type ApiRgwBucketBucketPutRequest struct {
	BucketId string `json:"bucket_id"`
	BucketPolicy *string `json:"bucket_policy,omitempty"`
	CannedAcl *string `json:"canned_acl,omitempty"`
	DaemonName *string `json:"daemon_name,omitempty"`
	EncryptionState *string `json:"encryption_state,omitempty"`
	EncryptionType *string `json:"encryption_type,omitempty"`
	KeyId *string `json:"key_id,omitempty"`
	Lifecycle *string `json:"lifecycle,omitempty"`
	LockMode *string `json:"lock_mode,omitempty"`
	LockRetentionPeriodDays *string `json:"lock_retention_period_days,omitempty"`
	LockRetentionPeriodYears *string `json:"lock_retention_period_years,omitempty"`
	MfaDelete *string `json:"mfa_delete,omitempty"`
	MfaTokenPin *string `json:"mfa_token_pin,omitempty"`
	MfaTokenSerial *string `json:"mfa_token_serial,omitempty"`
	Replication *string `json:"replication,omitempty"`
	Tags *string `json:"tags,omitempty"`
	Uid *string `json:"uid,omitempty"`
	VersioningState *string `json:"versioning_state,omitempty"`
}

type _ApiRgwBucketBucketPutRequest ApiRgwBucketBucketPutRequest

// NewApiRgwBucketBucketPutRequest instantiates a new ApiRgwBucketBucketPutRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiRgwBucketBucketPutRequest(bucketId string) *ApiRgwBucketBucketPutRequest {
	this := ApiRgwBucketBucketPutRequest{}
	this.BucketId = bucketId
	var encryptionState string = "false"
	this.EncryptionState = &encryptionState
	return &this
}

// NewApiRgwBucketBucketPutRequestWithDefaults instantiates a new ApiRgwBucketBucketPutRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiRgwBucketBucketPutRequestWithDefaults() *ApiRgwBucketBucketPutRequest {
	this := ApiRgwBucketBucketPutRequest{}
	var encryptionState string = "false"
	this.EncryptionState = &encryptionState
	return &this
}

// GetBucketId returns the BucketId field value
func (o *ApiRgwBucketBucketPutRequest) GetBucketId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.BucketId
}

// GetBucketIdOk returns a tuple with the BucketId field value
// and a boolean to check if the value has been set.
func (o *ApiRgwBucketBucketPutRequest) GetBucketIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BucketId, true
}

// SetBucketId sets field value
func (o *ApiRgwBucketBucketPutRequest) SetBucketId(v string) {
	o.BucketId = v
}

// GetBucketPolicy returns the BucketPolicy field value if set, zero value otherwise.
func (o *ApiRgwBucketBucketPutRequest) GetBucketPolicy() string {
	if o == nil || IsNil(o.BucketPolicy) {
		var ret string
		return ret
	}
	return *o.BucketPolicy
}

// GetBucketPolicyOk returns a tuple with the BucketPolicy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiRgwBucketBucketPutRequest) GetBucketPolicyOk() (*string, bool) {
	if o == nil || IsNil(o.BucketPolicy) {
		return nil, false
	}
	return o.BucketPolicy, true
}

// HasBucketPolicy returns a boolean if a field has been set.
func (o *ApiRgwBucketBucketPutRequest) HasBucketPolicy() bool {
	if o != nil && !IsNil(o.BucketPolicy) {
		return true
	}

	return false
}

// SetBucketPolicy gets a reference to the given string and assigns it to the BucketPolicy field.
func (o *ApiRgwBucketBucketPutRequest) SetBucketPolicy(v string) {
	o.BucketPolicy = &v
}

// GetCannedAcl returns the CannedAcl field value if set, zero value otherwise.
func (o *ApiRgwBucketBucketPutRequest) GetCannedAcl() string {
	if o == nil || IsNil(o.CannedAcl) {
		var ret string
		return ret
	}
	return *o.CannedAcl
}

// GetCannedAclOk returns a tuple with the CannedAcl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiRgwBucketBucketPutRequest) GetCannedAclOk() (*string, bool) {
	if o == nil || IsNil(o.CannedAcl) {
		return nil, false
	}
	return o.CannedAcl, true
}

// HasCannedAcl returns a boolean if a field has been set.
func (o *ApiRgwBucketBucketPutRequest) HasCannedAcl() bool {
	if o != nil && !IsNil(o.CannedAcl) {
		return true
	}

	return false
}

// SetCannedAcl gets a reference to the given string and assigns it to the CannedAcl field.
func (o *ApiRgwBucketBucketPutRequest) SetCannedAcl(v string) {
	o.CannedAcl = &v
}

// GetDaemonName returns the DaemonName field value if set, zero value otherwise.
func (o *ApiRgwBucketBucketPutRequest) GetDaemonName() string {
	if o == nil || IsNil(o.DaemonName) {
		var ret string
		return ret
	}
	return *o.DaemonName
}

// GetDaemonNameOk returns a tuple with the DaemonName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiRgwBucketBucketPutRequest) GetDaemonNameOk() (*string, bool) {
	if o == nil || IsNil(o.DaemonName) {
		return nil, false
	}
	return o.DaemonName, true
}

// HasDaemonName returns a boolean if a field has been set.
func (o *ApiRgwBucketBucketPutRequest) HasDaemonName() bool {
	if o != nil && !IsNil(o.DaemonName) {
		return true
	}

	return false
}

// SetDaemonName gets a reference to the given string and assigns it to the DaemonName field.
func (o *ApiRgwBucketBucketPutRequest) SetDaemonName(v string) {
	o.DaemonName = &v
}

// GetEncryptionState returns the EncryptionState field value if set, zero value otherwise.
func (o *ApiRgwBucketBucketPutRequest) GetEncryptionState() string {
	if o == nil || IsNil(o.EncryptionState) {
		var ret string
		return ret
	}
	return *o.EncryptionState
}

// GetEncryptionStateOk returns a tuple with the EncryptionState field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiRgwBucketBucketPutRequest) GetEncryptionStateOk() (*string, bool) {
	if o == nil || IsNil(o.EncryptionState) {
		return nil, false
	}
	return o.EncryptionState, true
}

// HasEncryptionState returns a boolean if a field has been set.
func (o *ApiRgwBucketBucketPutRequest) HasEncryptionState() bool {
	if o != nil && !IsNil(o.EncryptionState) {
		return true
	}

	return false
}

// SetEncryptionState gets a reference to the given string and assigns it to the EncryptionState field.
func (o *ApiRgwBucketBucketPutRequest) SetEncryptionState(v string) {
	o.EncryptionState = &v
}

// GetEncryptionType returns the EncryptionType field value if set, zero value otherwise.
func (o *ApiRgwBucketBucketPutRequest) GetEncryptionType() string {
	if o == nil || IsNil(o.EncryptionType) {
		var ret string
		return ret
	}
	return *o.EncryptionType
}

// GetEncryptionTypeOk returns a tuple with the EncryptionType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiRgwBucketBucketPutRequest) GetEncryptionTypeOk() (*string, bool) {
	if o == nil || IsNil(o.EncryptionType) {
		return nil, false
	}
	return o.EncryptionType, true
}

// HasEncryptionType returns a boolean if a field has been set.
func (o *ApiRgwBucketBucketPutRequest) HasEncryptionType() bool {
	if o != nil && !IsNil(o.EncryptionType) {
		return true
	}

	return false
}

// SetEncryptionType gets a reference to the given string and assigns it to the EncryptionType field.
func (o *ApiRgwBucketBucketPutRequest) SetEncryptionType(v string) {
	o.EncryptionType = &v
}

// GetKeyId returns the KeyId field value if set, zero value otherwise.
func (o *ApiRgwBucketBucketPutRequest) GetKeyId() string {
	if o == nil || IsNil(o.KeyId) {
		var ret string
		return ret
	}
	return *o.KeyId
}

// GetKeyIdOk returns a tuple with the KeyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiRgwBucketBucketPutRequest) GetKeyIdOk() (*string, bool) {
	if o == nil || IsNil(o.KeyId) {
		return nil, false
	}
	return o.KeyId, true
}

// HasKeyId returns a boolean if a field has been set.
func (o *ApiRgwBucketBucketPutRequest) HasKeyId() bool {
	if o != nil && !IsNil(o.KeyId) {
		return true
	}

	return false
}

// SetKeyId gets a reference to the given string and assigns it to the KeyId field.
func (o *ApiRgwBucketBucketPutRequest) SetKeyId(v string) {
	o.KeyId = &v
}

// GetLifecycle returns the Lifecycle field value if set, zero value otherwise.
func (o *ApiRgwBucketBucketPutRequest) GetLifecycle() string {
	if o == nil || IsNil(o.Lifecycle) {
		var ret string
		return ret
	}
	return *o.Lifecycle
}

// GetLifecycleOk returns a tuple with the Lifecycle field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiRgwBucketBucketPutRequest) GetLifecycleOk() (*string, bool) {
	if o == nil || IsNil(o.Lifecycle) {
		return nil, false
	}
	return o.Lifecycle, true
}

// HasLifecycle returns a boolean if a field has been set.
func (o *ApiRgwBucketBucketPutRequest) HasLifecycle() bool {
	if o != nil && !IsNil(o.Lifecycle) {
		return true
	}

	return false
}

// SetLifecycle gets a reference to the given string and assigns it to the Lifecycle field.
func (o *ApiRgwBucketBucketPutRequest) SetLifecycle(v string) {
	o.Lifecycle = &v
}

// GetLockMode returns the LockMode field value if set, zero value otherwise.
func (o *ApiRgwBucketBucketPutRequest) GetLockMode() string {
	if o == nil || IsNil(o.LockMode) {
		var ret string
		return ret
	}
	return *o.LockMode
}

// GetLockModeOk returns a tuple with the LockMode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiRgwBucketBucketPutRequest) GetLockModeOk() (*string, bool) {
	if o == nil || IsNil(o.LockMode) {
		return nil, false
	}
	return o.LockMode, true
}

// HasLockMode returns a boolean if a field has been set.
func (o *ApiRgwBucketBucketPutRequest) HasLockMode() bool {
	if o != nil && !IsNil(o.LockMode) {
		return true
	}

	return false
}

// SetLockMode gets a reference to the given string and assigns it to the LockMode field.
func (o *ApiRgwBucketBucketPutRequest) SetLockMode(v string) {
	o.LockMode = &v
}

// GetLockRetentionPeriodDays returns the LockRetentionPeriodDays field value if set, zero value otherwise.
func (o *ApiRgwBucketBucketPutRequest) GetLockRetentionPeriodDays() string {
	if o == nil || IsNil(o.LockRetentionPeriodDays) {
		var ret string
		return ret
	}
	return *o.LockRetentionPeriodDays
}

// GetLockRetentionPeriodDaysOk returns a tuple with the LockRetentionPeriodDays field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiRgwBucketBucketPutRequest) GetLockRetentionPeriodDaysOk() (*string, bool) {
	if o == nil || IsNil(o.LockRetentionPeriodDays) {
		return nil, false
	}
	return o.LockRetentionPeriodDays, true
}

// HasLockRetentionPeriodDays returns a boolean if a field has been set.
func (o *ApiRgwBucketBucketPutRequest) HasLockRetentionPeriodDays() bool {
	if o != nil && !IsNil(o.LockRetentionPeriodDays) {
		return true
	}

	return false
}

// SetLockRetentionPeriodDays gets a reference to the given string and assigns it to the LockRetentionPeriodDays field.
func (o *ApiRgwBucketBucketPutRequest) SetLockRetentionPeriodDays(v string) {
	o.LockRetentionPeriodDays = &v
}

// GetLockRetentionPeriodYears returns the LockRetentionPeriodYears field value if set, zero value otherwise.
func (o *ApiRgwBucketBucketPutRequest) GetLockRetentionPeriodYears() string {
	if o == nil || IsNil(o.LockRetentionPeriodYears) {
		var ret string
		return ret
	}
	return *o.LockRetentionPeriodYears
}

// GetLockRetentionPeriodYearsOk returns a tuple with the LockRetentionPeriodYears field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiRgwBucketBucketPutRequest) GetLockRetentionPeriodYearsOk() (*string, bool) {
	if o == nil || IsNil(o.LockRetentionPeriodYears) {
		return nil, false
	}
	return o.LockRetentionPeriodYears, true
}

// HasLockRetentionPeriodYears returns a boolean if a field has been set.
func (o *ApiRgwBucketBucketPutRequest) HasLockRetentionPeriodYears() bool {
	if o != nil && !IsNil(o.LockRetentionPeriodYears) {
		return true
	}

	return false
}

// SetLockRetentionPeriodYears gets a reference to the given string and assigns it to the LockRetentionPeriodYears field.
func (o *ApiRgwBucketBucketPutRequest) SetLockRetentionPeriodYears(v string) {
	o.LockRetentionPeriodYears = &v
}

// GetMfaDelete returns the MfaDelete field value if set, zero value otherwise.
func (o *ApiRgwBucketBucketPutRequest) GetMfaDelete() string {
	if o == nil || IsNil(o.MfaDelete) {
		var ret string
		return ret
	}
	return *o.MfaDelete
}

// GetMfaDeleteOk returns a tuple with the MfaDelete field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiRgwBucketBucketPutRequest) GetMfaDeleteOk() (*string, bool) {
	if o == nil || IsNil(o.MfaDelete) {
		return nil, false
	}
	return o.MfaDelete, true
}

// HasMfaDelete returns a boolean if a field has been set.
func (o *ApiRgwBucketBucketPutRequest) HasMfaDelete() bool {
	if o != nil && !IsNil(o.MfaDelete) {
		return true
	}

	return false
}

// SetMfaDelete gets a reference to the given string and assigns it to the MfaDelete field.
func (o *ApiRgwBucketBucketPutRequest) SetMfaDelete(v string) {
	o.MfaDelete = &v
}

// GetMfaTokenPin returns the MfaTokenPin field value if set, zero value otherwise.
func (o *ApiRgwBucketBucketPutRequest) GetMfaTokenPin() string {
	if o == nil || IsNil(o.MfaTokenPin) {
		var ret string
		return ret
	}
	return *o.MfaTokenPin
}

// GetMfaTokenPinOk returns a tuple with the MfaTokenPin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiRgwBucketBucketPutRequest) GetMfaTokenPinOk() (*string, bool) {
	if o == nil || IsNil(o.MfaTokenPin) {
		return nil, false
	}
	return o.MfaTokenPin, true
}

// HasMfaTokenPin returns a boolean if a field has been set.
func (o *ApiRgwBucketBucketPutRequest) HasMfaTokenPin() bool {
	if o != nil && !IsNil(o.MfaTokenPin) {
		return true
	}

	return false
}

// SetMfaTokenPin gets a reference to the given string and assigns it to the MfaTokenPin field.
func (o *ApiRgwBucketBucketPutRequest) SetMfaTokenPin(v string) {
	o.MfaTokenPin = &v
}

// GetMfaTokenSerial returns the MfaTokenSerial field value if set, zero value otherwise.
func (o *ApiRgwBucketBucketPutRequest) GetMfaTokenSerial() string {
	if o == nil || IsNil(o.MfaTokenSerial) {
		var ret string
		return ret
	}
	return *o.MfaTokenSerial
}

// GetMfaTokenSerialOk returns a tuple with the MfaTokenSerial field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiRgwBucketBucketPutRequest) GetMfaTokenSerialOk() (*string, bool) {
	if o == nil || IsNil(o.MfaTokenSerial) {
		return nil, false
	}
	return o.MfaTokenSerial, true
}

// HasMfaTokenSerial returns a boolean if a field has been set.
func (o *ApiRgwBucketBucketPutRequest) HasMfaTokenSerial() bool {
	if o != nil && !IsNil(o.MfaTokenSerial) {
		return true
	}

	return false
}

// SetMfaTokenSerial gets a reference to the given string and assigns it to the MfaTokenSerial field.
func (o *ApiRgwBucketBucketPutRequest) SetMfaTokenSerial(v string) {
	o.MfaTokenSerial = &v
}

// GetReplication returns the Replication field value if set, zero value otherwise.
func (o *ApiRgwBucketBucketPutRequest) GetReplication() string {
	if o == nil || IsNil(o.Replication) {
		var ret string
		return ret
	}
	return *o.Replication
}

// GetReplicationOk returns a tuple with the Replication field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiRgwBucketBucketPutRequest) GetReplicationOk() (*string, bool) {
	if o == nil || IsNil(o.Replication) {
		return nil, false
	}
	return o.Replication, true
}

// HasReplication returns a boolean if a field has been set.
func (o *ApiRgwBucketBucketPutRequest) HasReplication() bool {
	if o != nil && !IsNil(o.Replication) {
		return true
	}

	return false
}

// SetReplication gets a reference to the given string and assigns it to the Replication field.
func (o *ApiRgwBucketBucketPutRequest) SetReplication(v string) {
	o.Replication = &v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *ApiRgwBucketBucketPutRequest) GetTags() string {
	if o == nil || IsNil(o.Tags) {
		var ret string
		return ret
	}
	return *o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiRgwBucketBucketPutRequest) GetTagsOk() (*string, bool) {
	if o == nil || IsNil(o.Tags) {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *ApiRgwBucketBucketPutRequest) HasTags() bool {
	if o != nil && !IsNil(o.Tags) {
		return true
	}

	return false
}

// SetTags gets a reference to the given string and assigns it to the Tags field.
func (o *ApiRgwBucketBucketPutRequest) SetTags(v string) {
	o.Tags = &v
}

// GetUid returns the Uid field value if set, zero value otherwise.
func (o *ApiRgwBucketBucketPutRequest) GetUid() string {
	if o == nil || IsNil(o.Uid) {
		var ret string
		return ret
	}
	return *o.Uid
}

// GetUidOk returns a tuple with the Uid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiRgwBucketBucketPutRequest) GetUidOk() (*string, bool) {
	if o == nil || IsNil(o.Uid) {
		return nil, false
	}
	return o.Uid, true
}

// HasUid returns a boolean if a field has been set.
func (o *ApiRgwBucketBucketPutRequest) HasUid() bool {
	if o != nil && !IsNil(o.Uid) {
		return true
	}

	return false
}

// SetUid gets a reference to the given string and assigns it to the Uid field.
func (o *ApiRgwBucketBucketPutRequest) SetUid(v string) {
	o.Uid = &v
}

// GetVersioningState returns the VersioningState field value if set, zero value otherwise.
func (o *ApiRgwBucketBucketPutRequest) GetVersioningState() string {
	if o == nil || IsNil(o.VersioningState) {
		var ret string
		return ret
	}
	return *o.VersioningState
}

// GetVersioningStateOk returns a tuple with the VersioningState field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiRgwBucketBucketPutRequest) GetVersioningStateOk() (*string, bool) {
	if o == nil || IsNil(o.VersioningState) {
		return nil, false
	}
	return o.VersioningState, true
}

// HasVersioningState returns a boolean if a field has been set.
func (o *ApiRgwBucketBucketPutRequest) HasVersioningState() bool {
	if o != nil && !IsNil(o.VersioningState) {
		return true
	}

	return false
}

// SetVersioningState gets a reference to the given string and assigns it to the VersioningState field.
func (o *ApiRgwBucketBucketPutRequest) SetVersioningState(v string) {
	o.VersioningState = &v
}

func (o ApiRgwBucketBucketPutRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApiRgwBucketBucketPutRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["bucket_id"] = o.BucketId
	if !IsNil(o.BucketPolicy) {
		toSerialize["bucket_policy"] = o.BucketPolicy
	}
	if !IsNil(o.CannedAcl) {
		toSerialize["canned_acl"] = o.CannedAcl
	}
	if !IsNil(o.DaemonName) {
		toSerialize["daemon_name"] = o.DaemonName
	}
	if !IsNil(o.EncryptionState) {
		toSerialize["encryption_state"] = o.EncryptionState
	}
	if !IsNil(o.EncryptionType) {
		toSerialize["encryption_type"] = o.EncryptionType
	}
	if !IsNil(o.KeyId) {
		toSerialize["key_id"] = o.KeyId
	}
	if !IsNil(o.Lifecycle) {
		toSerialize["lifecycle"] = o.Lifecycle
	}
	if !IsNil(o.LockMode) {
		toSerialize["lock_mode"] = o.LockMode
	}
	if !IsNil(o.LockRetentionPeriodDays) {
		toSerialize["lock_retention_period_days"] = o.LockRetentionPeriodDays
	}
	if !IsNil(o.LockRetentionPeriodYears) {
		toSerialize["lock_retention_period_years"] = o.LockRetentionPeriodYears
	}
	if !IsNil(o.MfaDelete) {
		toSerialize["mfa_delete"] = o.MfaDelete
	}
	if !IsNil(o.MfaTokenPin) {
		toSerialize["mfa_token_pin"] = o.MfaTokenPin
	}
	if !IsNil(o.MfaTokenSerial) {
		toSerialize["mfa_token_serial"] = o.MfaTokenSerial
	}
	if !IsNil(o.Replication) {
		toSerialize["replication"] = o.Replication
	}
	if !IsNil(o.Tags) {
		toSerialize["tags"] = o.Tags
	}
	if !IsNil(o.Uid) {
		toSerialize["uid"] = o.Uid
	}
	if !IsNil(o.VersioningState) {
		toSerialize["versioning_state"] = o.VersioningState
	}
	return toSerialize, nil
}

func (o *ApiRgwBucketBucketPutRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"bucket_id",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varApiRgwBucketBucketPutRequest := _ApiRgwBucketBucketPutRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varApiRgwBucketBucketPutRequest)

	if err != nil {
		return err
	}

	*o = ApiRgwBucketBucketPutRequest(varApiRgwBucketBucketPutRequest)

	return err
}

type NullableApiRgwBucketBucketPutRequest struct {
	value *ApiRgwBucketBucketPutRequest
	isSet bool
}

func (v NullableApiRgwBucketBucketPutRequest) Get() *ApiRgwBucketBucketPutRequest {
	return v.value
}

func (v *NullableApiRgwBucketBucketPutRequest) Set(val *ApiRgwBucketBucketPutRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableApiRgwBucketBucketPutRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableApiRgwBucketBucketPutRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiRgwBucketBucketPutRequest(val *ApiRgwBucketBucketPutRequest) *NullableApiRgwBucketBucketPutRequest {
	return &NullableApiRgwBucketBucketPutRequest{value: val, isSet: true}
}

func (v NullableApiRgwBucketBucketPutRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiRgwBucketBucketPutRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


