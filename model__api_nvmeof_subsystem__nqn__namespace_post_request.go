/*
Ceph REST API

This is the official Ceph REST API

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ceph

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ApiNvmeofSubsystemNqnNamespacePostRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApiNvmeofSubsystemNqnNamespacePostRequest{}

// ApiNvmeofSubsystemNqnNamespacePostRequest struct for ApiNvmeofSubsystemNqnNamespacePostRequest
type ApiNvmeofSubsystemNqnNamespacePostRequest struct {
	// NVMeoF namespace block size
	BlockSize *int32 `json:"block_size,omitempty"`
	// Create RBD image
	CreateImage *bool `json:"create_image,omitempty"`
	// NVMeoF gateway group
	GwGroup *string `json:"gw_group,omitempty"`
	// Load balancing group
	LoadBalancingGroup *int32 `json:"load_balancing_group,omitempty"`
	// RBD image name
	RbdImageName string `json:"rbd_image_name"`
	// RBD pool name
	RbdPool *string `json:"rbd_pool,omitempty"`
	// RBD image size
	Size *int32 `json:"size,omitempty"`
}

type _ApiNvmeofSubsystemNqnNamespacePostRequest ApiNvmeofSubsystemNqnNamespacePostRequest

// NewApiNvmeofSubsystemNqnNamespacePostRequest instantiates a new ApiNvmeofSubsystemNqnNamespacePostRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiNvmeofSubsystemNqnNamespacePostRequest(rbdImageName string) *ApiNvmeofSubsystemNqnNamespacePostRequest {
	this := ApiNvmeofSubsystemNqnNamespacePostRequest{}
	var blockSize int32 = 512
	this.BlockSize = &blockSize
	var createImage bool = true
	this.CreateImage = &createImage
	this.RbdImageName = rbdImageName
	var rbdPool string = "rbd"
	this.RbdPool = &rbdPool
	var size int32 = 1024
	this.Size = &size
	return &this
}

// NewApiNvmeofSubsystemNqnNamespacePostRequestWithDefaults instantiates a new ApiNvmeofSubsystemNqnNamespacePostRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiNvmeofSubsystemNqnNamespacePostRequestWithDefaults() *ApiNvmeofSubsystemNqnNamespacePostRequest {
	this := ApiNvmeofSubsystemNqnNamespacePostRequest{}
	var blockSize int32 = 512
	this.BlockSize = &blockSize
	var createImage bool = true
	this.CreateImage = &createImage
	var rbdPool string = "rbd"
	this.RbdPool = &rbdPool
	var size int32 = 1024
	this.Size = &size
	return &this
}

// GetBlockSize returns the BlockSize field value if set, zero value otherwise.
func (o *ApiNvmeofSubsystemNqnNamespacePostRequest) GetBlockSize() int32 {
	if o == nil || IsNil(o.BlockSize) {
		var ret int32
		return ret
	}
	return *o.BlockSize
}

// GetBlockSizeOk returns a tuple with the BlockSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiNvmeofSubsystemNqnNamespacePostRequest) GetBlockSizeOk() (*int32, bool) {
	if o == nil || IsNil(o.BlockSize) {
		return nil, false
	}
	return o.BlockSize, true
}

// HasBlockSize returns a boolean if a field has been set.
func (o *ApiNvmeofSubsystemNqnNamespacePostRequest) HasBlockSize() bool {
	if o != nil && !IsNil(o.BlockSize) {
		return true
	}

	return false
}

// SetBlockSize gets a reference to the given int32 and assigns it to the BlockSize field.
func (o *ApiNvmeofSubsystemNqnNamespacePostRequest) SetBlockSize(v int32) {
	o.BlockSize = &v
}

// GetCreateImage returns the CreateImage field value if set, zero value otherwise.
func (o *ApiNvmeofSubsystemNqnNamespacePostRequest) GetCreateImage() bool {
	if o == nil || IsNil(o.CreateImage) {
		var ret bool
		return ret
	}
	return *o.CreateImage
}

// GetCreateImageOk returns a tuple with the CreateImage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiNvmeofSubsystemNqnNamespacePostRequest) GetCreateImageOk() (*bool, bool) {
	if o == nil || IsNil(o.CreateImage) {
		return nil, false
	}
	return o.CreateImage, true
}

// HasCreateImage returns a boolean if a field has been set.
func (o *ApiNvmeofSubsystemNqnNamespacePostRequest) HasCreateImage() bool {
	if o != nil && !IsNil(o.CreateImage) {
		return true
	}

	return false
}

// SetCreateImage gets a reference to the given bool and assigns it to the CreateImage field.
func (o *ApiNvmeofSubsystemNqnNamespacePostRequest) SetCreateImage(v bool) {
	o.CreateImage = &v
}

// GetGwGroup returns the GwGroup field value if set, zero value otherwise.
func (o *ApiNvmeofSubsystemNqnNamespacePostRequest) GetGwGroup() string {
	if o == nil || IsNil(o.GwGroup) {
		var ret string
		return ret
	}
	return *o.GwGroup
}

// GetGwGroupOk returns a tuple with the GwGroup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiNvmeofSubsystemNqnNamespacePostRequest) GetGwGroupOk() (*string, bool) {
	if o == nil || IsNil(o.GwGroup) {
		return nil, false
	}
	return o.GwGroup, true
}

// HasGwGroup returns a boolean if a field has been set.
func (o *ApiNvmeofSubsystemNqnNamespacePostRequest) HasGwGroup() bool {
	if o != nil && !IsNil(o.GwGroup) {
		return true
	}

	return false
}

// SetGwGroup gets a reference to the given string and assigns it to the GwGroup field.
func (o *ApiNvmeofSubsystemNqnNamespacePostRequest) SetGwGroup(v string) {
	o.GwGroup = &v
}

// GetLoadBalancingGroup returns the LoadBalancingGroup field value if set, zero value otherwise.
func (o *ApiNvmeofSubsystemNqnNamespacePostRequest) GetLoadBalancingGroup() int32 {
	if o == nil || IsNil(o.LoadBalancingGroup) {
		var ret int32
		return ret
	}
	return *o.LoadBalancingGroup
}

// GetLoadBalancingGroupOk returns a tuple with the LoadBalancingGroup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiNvmeofSubsystemNqnNamespacePostRequest) GetLoadBalancingGroupOk() (*int32, bool) {
	if o == nil || IsNil(o.LoadBalancingGroup) {
		return nil, false
	}
	return o.LoadBalancingGroup, true
}

// HasLoadBalancingGroup returns a boolean if a field has been set.
func (o *ApiNvmeofSubsystemNqnNamespacePostRequest) HasLoadBalancingGroup() bool {
	if o != nil && !IsNil(o.LoadBalancingGroup) {
		return true
	}

	return false
}

// SetLoadBalancingGroup gets a reference to the given int32 and assigns it to the LoadBalancingGroup field.
func (o *ApiNvmeofSubsystemNqnNamespacePostRequest) SetLoadBalancingGroup(v int32) {
	o.LoadBalancingGroup = &v
}

// GetRbdImageName returns the RbdImageName field value
func (o *ApiNvmeofSubsystemNqnNamespacePostRequest) GetRbdImageName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RbdImageName
}

// GetRbdImageNameOk returns a tuple with the RbdImageName field value
// and a boolean to check if the value has been set.
func (o *ApiNvmeofSubsystemNqnNamespacePostRequest) GetRbdImageNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RbdImageName, true
}

// SetRbdImageName sets field value
func (o *ApiNvmeofSubsystemNqnNamespacePostRequest) SetRbdImageName(v string) {
	o.RbdImageName = v
}

// GetRbdPool returns the RbdPool field value if set, zero value otherwise.
func (o *ApiNvmeofSubsystemNqnNamespacePostRequest) GetRbdPool() string {
	if o == nil || IsNil(o.RbdPool) {
		var ret string
		return ret
	}
	return *o.RbdPool
}

// GetRbdPoolOk returns a tuple with the RbdPool field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiNvmeofSubsystemNqnNamespacePostRequest) GetRbdPoolOk() (*string, bool) {
	if o == nil || IsNil(o.RbdPool) {
		return nil, false
	}
	return o.RbdPool, true
}

// HasRbdPool returns a boolean if a field has been set.
func (o *ApiNvmeofSubsystemNqnNamespacePostRequest) HasRbdPool() bool {
	if o != nil && !IsNil(o.RbdPool) {
		return true
	}

	return false
}

// SetRbdPool gets a reference to the given string and assigns it to the RbdPool field.
func (o *ApiNvmeofSubsystemNqnNamespacePostRequest) SetRbdPool(v string) {
	o.RbdPool = &v
}

// GetSize returns the Size field value if set, zero value otherwise.
func (o *ApiNvmeofSubsystemNqnNamespacePostRequest) GetSize() int32 {
	if o == nil || IsNil(o.Size) {
		var ret int32
		return ret
	}
	return *o.Size
}

// GetSizeOk returns a tuple with the Size field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiNvmeofSubsystemNqnNamespacePostRequest) GetSizeOk() (*int32, bool) {
	if o == nil || IsNil(o.Size) {
		return nil, false
	}
	return o.Size, true
}

// HasSize returns a boolean if a field has been set.
func (o *ApiNvmeofSubsystemNqnNamespacePostRequest) HasSize() bool {
	if o != nil && !IsNil(o.Size) {
		return true
	}

	return false
}

// SetSize gets a reference to the given int32 and assigns it to the Size field.
func (o *ApiNvmeofSubsystemNqnNamespacePostRequest) SetSize(v int32) {
	o.Size = &v
}

func (o ApiNvmeofSubsystemNqnNamespacePostRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApiNvmeofSubsystemNqnNamespacePostRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.BlockSize) {
		toSerialize["block_size"] = o.BlockSize
	}
	if !IsNil(o.CreateImage) {
		toSerialize["create_image"] = o.CreateImage
	}
	if !IsNil(o.GwGroup) {
		toSerialize["gw_group"] = o.GwGroup
	}
	if !IsNil(o.LoadBalancingGroup) {
		toSerialize["load_balancing_group"] = o.LoadBalancingGroup
	}
	toSerialize["rbd_image_name"] = o.RbdImageName
	if !IsNil(o.RbdPool) {
		toSerialize["rbd_pool"] = o.RbdPool
	}
	if !IsNil(o.Size) {
		toSerialize["size"] = o.Size
	}
	return toSerialize, nil
}

func (o *ApiNvmeofSubsystemNqnNamespacePostRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"rbd_image_name",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varApiNvmeofSubsystemNqnNamespacePostRequest := _ApiNvmeofSubsystemNqnNamespacePostRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varApiNvmeofSubsystemNqnNamespacePostRequest)

	if err != nil {
		return err
	}

	*o = ApiNvmeofSubsystemNqnNamespacePostRequest(varApiNvmeofSubsystemNqnNamespacePostRequest)

	return err
}

type NullableApiNvmeofSubsystemNqnNamespacePostRequest struct {
	value *ApiNvmeofSubsystemNqnNamespacePostRequest
	isSet bool
}

func (v NullableApiNvmeofSubsystemNqnNamespacePostRequest) Get() *ApiNvmeofSubsystemNqnNamespacePostRequest {
	return v.value
}

func (v *NullableApiNvmeofSubsystemNqnNamespacePostRequest) Set(val *ApiNvmeofSubsystemNqnNamespacePostRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableApiNvmeofSubsystemNqnNamespacePostRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableApiNvmeofSubsystemNqnNamespacePostRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiNvmeofSubsystemNqnNamespacePostRequest(val *ApiNvmeofSubsystemNqnNamespacePostRequest) *NullableApiNvmeofSubsystemNqnNamespacePostRequest {
	return &NullableApiNvmeofSubsystemNqnNamespacePostRequest{value: val, isSet: true}
}

func (v NullableApiNvmeofSubsystemNqnNamespacePostRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiNvmeofSubsystemNqnNamespacePostRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


